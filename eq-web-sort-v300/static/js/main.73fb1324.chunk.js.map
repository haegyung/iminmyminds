{"version":3,"sources":["reportWebVitals.js","styles/globalCSS.js","utilities/decodeHTML.js","utilities/getCumulativeDuration.js","utilities/getCurrentDateTime.js","utilities/calculateTimeOnPage.js","utilities/millisecondsToTime.js","globalState/createConfigSettingsSlice.js","globalState/createLanguageSettingsSlice.js","globalState/createMapSettingsSlice.js","globalState/createStatementsSettingsSlice.js","globalState/useSettingsStore.js","globalState/createLocalPanelSlice.js","globalState/createPresortSlice.js","globalState/createLandingSlice.js","globalState/createFooterSlice.js","globalState/createSortSlice.js","globalState/createPostsortSlice.js","globalState/createSubmitSlice.js","globalState/createSurveySlice.js","globalState/useStore.js","pages/landing/LandingModal.jsx","pages/landing/LogInSubmitButton.jsx","pages/landing/LogInScreen.jsx","pages/landing/PartIdScreen.jsx","pages/landing/AccessCodeScreen.jsx","pages/landing/checkForIeBrowser.js","pages/landing/InternetExplorerWarning.jsx","pages/landing/parseParams.js","pages/landing/LocalStartButton.jsx","pages/landing/LocalDeleteButton.jsx","pages/landing/LocalSortsDownloadButton.jsx","globalState/useLocalPersist.js","pages/landing/LocalConfirmDeleteButton.jsx","pages/landing/LocalDeleteModal.jsx","pages/landing/LocalSaveBeforeDeleteModal.jsx","pages/landing/LocalStart.jsx","pages/landing/Landing.jsx","utilities/sanitizeString.js","pages/postsort/LowCards.jsx","pages/postsort/LowCards2.jsx","pages/postsort/HighCards.jsx","pages/postsort/HighCards2.jsx","pages/postsort/PostsortHelpModal.jsx","utilities/PromptUnload.jsx","pages/postsort/PostsortPreventNavModal.jsx","pages/postsort/Postsort.jsx","pages/presort/PresortModal.jsx","pages/presort/PresortDND.jsx","pages/presort/PresortPreventNavModal.jsx","pages/presort/PresortFinishedModal.jsx","pages/presort/PresortIsComplete.jsx","pages/presort/PleaseLogInFirst.jsx","pages/presort/Presort.jsx","pages/sort/checkForColumnOverload.js","pages/sort/move.js","pages/sort/reorder.js","pages/sort/getItemStyle.js","pages/sort/getListStyle.js","pages/sort/SortColumn.jsx","pages/sort/getListStyleHori.js","pages/sort/getItemStyleHori.js","pages/sort/calculateDragResults.js","pages/sort/convertObjectToResults.js","pages/sort/SortGrid.jsx","pages/sort/SortHelpModal.jsx","utilities/SortingFinishedModal.jsx","pages/sort/PreventSortNavModal.jsx","pages/sort/OverloadedColumnModal.jsx","pages/sort/SortColGuides.jsx","pages/sort/Sort.jsx","pages/submit/SubmitSuccessModal.jsx","pages/submit/SubmitFailureModal.jsx","pages/submit/SubmitButton.jsx","pages/submit/calculatePostsortResults.js","pages/submit/FallbackButtons.jsx","pages/submit/SubmitFallback.jsx","pages/submit/SaveLocalDataToLocalStorageButton.jsx","pages/submit/ReturnToLocalPanelButton.jsx","pages/submit/LocalSubmitSuccessModal.jsx","pages/submit/SubmitButtonGS.jsx","pages/submit/CopyToClipboardButton.jsx","pages/submit/SubmitButtonEmail.jsx","pages/submit/Submit.jsx","pages/survey/SurveyTextElement.jsx","pages/survey/SurveyTextAreaElement.jsx","pages/survey/SurveyRadioElement.jsx","pages/survey/SurveyDropdownElement.jsx","pages/survey/SurveyCheckboxElement.jsx","pages/survey/SurveyRating2Element.jsx","pages/survey/SurveyRating5Element.jsx","pages/survey/SurveyRating10Element.jsx","pages/survey/SurveyInformationElement.jsx","pages/survey/AnswerAllSurveyQuestionsModal.jsx","pages/survey/SurveyHelpModal.jsx","pages/survey/Survey.jsx","utilities/NoPageFound.jsx","utilities/processConfigXMLData.js","utilities/processMapXMLData.js","utilities/processLanguageXMLData.js","utilities/processStatementsXMLData.js","pages/landing/LoadingScreen.jsx","pages/footer/NextButton.jsx","pages/footer/FooterFontSizer.jsx","pages/footer/CardHeightSizer.jsx","pages/footer/calcProgressScore.js","pages/footer/HelpButton.jsx","pages/footer/getNextPage.js","pages/footer/PostsortBackButton.jsx","pages/footer/StyledFooter.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createGlobalStyle","decodeHTML","string","includes","replace","error","console","log","getCumulativeDuration","startTime","cumulativeDuration2","cumulativeDuration","Date","now","getCurrentDateTime","currentDate","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","seconds","getSeconds","calculateTimeOnPage","prefix","prefix2","results","identifier","identifier3","identifier4","durationCumulative","localStorage","getItem","undefined","newDurationCumulative","setItem","dateString","dateTime","formattedDuration","s","pad","n","slice","millisecondsToTime","createConfigSettingsSlice","set","get","configObj","surveyQuestionObjArray","requiredAnswersObj","setConfigObj","configObjInput","setSurveyQuestionObjArray","setRequiredAnswersObj","createLanguageSettingsSlice","langObj","setLangObj","langObjInput","createMapSettingsSlice","mapObj","setMapObj","mapObjInput","createStatementsSettingsSlice","statementsObj","columnStatements","resetColumnStatements","setStatementsObj","statementsObjInput","setColumnStatements","columnStatementsInput","setResetColumnStatements","inputValue","useSettingsStore","create","createLocalPanelSlice","displayLocalPartIdWarning1","displayLocalPartIdWarning2","triggerLocalDeleteModal","localParticipantName","setLocalParticipantName","setLocalPartIdWarning1","bool","setLocalPartIdWarning2","setLocalDeleteModal","createPresortSlice","triggerPresortModal","presortNoReturn","presortPosCards","presortNeuCards","presortNegCards","presortCards","presortSortedStatementsNumInitial","presortFinished","triggerPresortFinishedModal","triggerPresortPreventNavModal","setPresortNoReturn","setPresortPosCards","setPresortNeuCards","setPresortNegCards","setPresortCards","setPresortSortedStatementsNumInitial","setPresortFinished","setTriggerPresortFinishedModal","setTriggerPresortPreventNavModal","setResults","setTriggerPresortModal","createLandingSlice","dataLoaded","isLoggedIn","triggerLandingModal","usercode","urlUsercode","partId","localUsercode","displayAccessCodeWarning","userInputAccessCode","displayLandingContent","triggerSaveBeforeDeleteModal","userInputPartId","displayPartIdWarning","setUrlUsercode","setDisplayPartIdWarning","setUserInputPartId","setTriggerSaveBeforeDeleteModal","setDataLoaded","setIsLoggedIn","setTriggerLandingModal","setUsercode","setPartId","setLocalUsercode","input","setDisplayAccessCodeWarning","setUserInputAccessCode","setDisplayLandingContent","createFooterSlice","cardFontSize","currentPage","progressScore","progressScoreAdditional","progressScoreAdditionalSort","displayNextButton","setCardFontSize","setCurrentPage","setProgressScore","setProgressScoreAdditional","setProgressScoreAdditionalSort","setDisplayNextButton","createSortSlice","cardHeight","columnWidth","draggingOverColumnId","hasOverloadedColumn","isSortingCards","isSortingFinished","overloadedColumn","sortCompleted","sortFinished","sortFinishedModalHasBeenShown","sortCharacteristics","topMargin","triggerSortModal","triggerSortPreventNavModal","triggerSortOverloadedColumnModal","triggerSortingFinishedModal","sortGridResults","bypassSort","bypassPresort","setBypassPresort","setBypassSort","setDraggingOverColumnId","setOverloadedColumn","setTriggerSortingFinishedModal","setSortGridResults","setColumnWidth","setTopMargin","setIsSortingCards","setSortCompleted","setSortFinished","setSortFinishedModalHasBeenShown","setSortCharacteristics","setCardHeight","setTriggerSortModal","setIsSortingFinished","setHasOverloadedColumn","setTriggerSortPreventNavModal","setTriggerSortOverloadedColumnModal","createPostsortSlice","resultsPostsort","statementCommentsObj","triggerPostsortModal","postsortCommentCheckObj","showPostsortCommentHighlighting","triggerPostsortPreventNavModal","setResultsPostsort","setStatementCommentsObj","setTriggerPostsortModal","setPostsortCommentCheckObj","setShowPostsortCommentHighlighting","setTriggerPostsortPreventNavModal","createSubmitSlice","disableRefreshCheck","displaySubmitFallback","displayGoodbyeMessage","triggerLocalSubmitSuccessModal","triggerTransmissionOKModal","triggerTransmissionFailModal","submitFailNumber","transmittingData","checkInternetConnection","setDisableRefreshCheck","setCheckInternetConnection","setTransmittingData","setTriggerTransmissionFailModal","setTriggerTransmissionOKModal","setTriggerLocalSubmitSuccessModal","setDisplaySubmitFallback","setDisplayGoodbyeMessage","createSurveySlice","triggerSurveyModal","resultsSurvey","triggerSurveyPreventNavModal","checkRequiredQuestionsComplete","answersStorage","setAnswersStorage","setTriggerSurveyModal","setResultsSurvey","setTriggerSurveyPreventNavModal","setCheckRequiredQuestionsComplete","useStore","getLangObj","state","getTriggerLandingModal","getSetTriggerLandingModal","LandingModal","loginHelpModalHead","ReactHtmlParser","landingHelpModalHead","loginHelpModalText","landingHelpModalText","className","open","onClose","center","ModalHeader","ModalContent","styled","div","LogInSubmitButton","props","loginSubmitButtonText","StyledSubmitButton","tabindex","type","onClick","button","theme","active","secondary","primary","focus","getConfigObj","getDisplayAccessCodeWarning","getDisplayPartIdWarning","getSetUserInputPartId","getSetUserInputAccessCode","getUserInputPartId","getUserInputAccessCode","getSetDisplayLandingContent","getSetPartId","getSetDisplayNextButton","getSetIsLoggedIn","getSetDisplayAccessCodeWarning","getSetDisplayPartIdWarning","LogInScreen","welcomeText","loginWelcomeText","loginHeaderText","loginPartIdText","partIdWarning","accessCodeWarning","accessInputText","useEffect","handleKeyUpStart","event","key","userPartIdOK","userAccessOK","projectAccessCode","accessCode","length","setTimeout","window","addEventListener","removeEventListener","Fragment","LogInWelcomeText","Container","StyledHr","StyledInputDiv","StyledInput","onChange","e","target","value","autoFocus","WarningText","hr","checkForIeBrowser","ua","navigator","userAgent","indexOf","detectIEEdge","ieWarningHeaderText","ieWarningText","parseParams","returnVal","params","rawParams1","split","getLocalParticipantName","getLocalUsercode","getSetLocalParticipantName","getSetLocalUsercode","getSetLocalPartIdWarning1","getSetLocalPartIdWarning2","getSetTriggerLocalSubmitSuccessModal","getSetResults","getResults","withRouter","localStartButtonText","checkForNextPageConditions","useCallback","value1","value2","history","to","location","match","staticContext","rest","push","localDeleteButtonText","LocalSortsDownloadButton","localDownloadButtonText","useLocalPersist","persist","localStoredQsorts","hasDownloadedQsorts","setHasDownloadedQsorts","setLocalStoredQsorts","name","getSetLocalDeleteModal","getLocalStoredQsorts","getSetLocalStoredQsorts","setDisplayLocalDeleteModal","getTime","JSON","stringify","getTriggerLocalDeleteModal","LocalDeleteModal","localDeleteModalHead","localDeleteModalText","ButtonContainer","LocalConfirmDeleteButton","getTriggerSaveBeforeDeleteModal","getSetTriggerSaveBeforeDeleteModal","localSaveBeforeDeleteModalHeader","localSaveBeforeDeleteModalText","getDisplayLocalPartIdWarn1","getDisplayLocalPartIdWarn2","getSetHasDownloadedQsorts","getHasDownloadedQsorts","displayPartIdWarning1","displayPartIdWarning2","localHeader","partIdText","usercodeText","localParticipantsText","storedQsortsHeaderText","headerText","Object","keys","LocalSaveBeforeDeleteModal","LocalStartButton","Container2","StoredHeader","LocalDeleteButton","studyTitle","myDate","exportName","exportObj","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","downloadObjectAsJson","getDataLoaded","getSetCurrentPage","getSetProgressScore","getSetUrlUsercode","getDisplayLandingContent","getSetCardFontSize","getMapObject","getSetPostsortCommentCheckObj","LandingPage","headerBarColor","landingHead","welcomeTextHtml","initialScreen","setDefaultFontSize","defaultFontSize","urlString","href","urlName","codeName","objectKeys","qSortPattern","mostPos","Math","max","mostNeg","min","MostPos2","MostNeg2","highVal","highVal2","lowVal","lowVal2","showSecondMostPos","showSecondPosColumn","showSecondMostNeg","showSecondNegColumn","i","j","k","l","updatedResults","displayLogInScreen","displayPartIdScreen","displayAccessCodeScreen","setupTarget","ContainerDiv","LocalStart","initialScreenSetting","isIeBrowser","SortTitleBar","background","InternetExplorerWarning","PartIdScreen","AccessCodeScreen","ContentDiv","fadeIn","keyframes","fadeOut","view","sanitizeString","shouldDoReplace","shouldDoReplace2","getColumnStatements","getResultsPostsort","getSetResultsPostsort","getStatementCommentsObj","getPostsortCommentCheckObj","getShowPostsortCommentHighlighting","LowCards","useState","commentCheckObj","setCommentCheckObj","height","width","disagreeObj","lowCards","disagreeText","placeholder","columnDisplay","map","item","index","statementHtml","statement","indexVal","highlighting","postsortCommentsRequired","CardTag","CardAndTextHolder","Card","TagContainerDiv","CommentArea","bgColor","border","id","defaultValue","comment","itemId","cards","vCols","targetCard","userEnteredText","el","textarea","LowCards2","lowCards2","columnDisplay2","HighCards","agreeObj","highCards","agreeText","cardColor","handleChange","HighCards2","highCards2","getTriggerPostsortModal","getSetTriggerPostsortModal","PostsortHelpModal","postsortHelpModalHead","postsortModalHead","postsortHelpModalText","postsortModalText","PromptUnload","alertUser","returnValue","when","message","getTriggerModalOpen","getSetTrigPostPrevNavModal","PostsortPreventNavModal","triggerModalOpen","modalHead","postsortPreventNavModalHead","modalText","postsortPreventNavModalText","getMapObj","getCardHeight","getCardFontSize","PostSort","postsortInstructions","titleText","postsortHeader","agree","postsortAgreement","disagree","postsortDisagreement","postsortConvertObj","agreeColDisp1","pop","agreeColDisp2","disagreeColDisp1","shift","disagreeColDisp2","postsortAgreeColDisp1","postsortAgreeColDisp2","postsortDisagreeColDisp1","postsortDisagreeColDisp2","displaySecondColumn","CardsContainer","PostsortInstructions","getTriggerPresortModal","getSetTriggerPresortModal","PresortModal","header","presortModalHead","presortModalText","getStatementsObj","getPreSortedStateNumInit","getSetColumnStatements","getSetPresortFinished","getSetTrigPresortFinModal","getSetProgressScoreAdditional","PresortDND","statementsName","presortStatements","btnDisagreement","presortDisagreement","btnAgreement","presortAgreement","btnNeutral","presortNeutral","presortSortedStatementsNum","setPresortSortedStatementsNum","itemsFromBackend","statements","defaultFontColor","items","neg","neutral","pos","columns","setColumns","pinkArraySortValue","greenArraySortValue","sortDirection","onDragEnd","result","destination","droppableId","source","statementsArray","statementList","destinationId","draggableId","divColor","pinkChecked","yellowChecked","greenChecked","sortValue","listIndex","sortedStatements","sourceColumn","destColumn","sourceItems","destItems","splice","removed","backgroundColor","greenCardColor","pinkCardColor","yellowCardColor","totalStatements","completedPercent","toFixed","sourceCol","copiedItems","handleKeyUp","reason","mode","combine","projectResultsObj","npos","nneu","nneg","PresortGrid","entries","columnId","column","style","display","flexDirection","alignItems","ColumnNamesDiv","margin","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","padding","DroppableContainer","draggableProps","dragHandleProps","userSelect","overflow","fontSize","filter","isDragging","color","getSetTrigPrePrevNavModal","PresortPreventNavModal","presortPreventNavModalHead","presortPreventNavModalText","getTriggerModal","getSetTriggerModal","PresortFinishedModal","triggerModal","setTriggerModal","presortFinishedModalHead","presortFinishedModalText","PresortIsComplete","mainText","stepCompleteMessage","titleBarText","PleaseLogInFirst","logInFirst","getIsLoggedIn","getPresortNoReturn","getResetColumnStatements","getBypassPresort","PresortPage","setDefaultFontSizePresort","defaultFontSizePresort","parse","cloneDeep","checkForColumnOverload","columnLengthCheckArray","forcedSorts","qSortHeaderNumbers","tempArray","forEach","setState","numSortedStatements","reduce","acc","val","move","sourceListArray","destinationListArray","droppableSource","droppableDestination","allowUnforcedSorts","qSortHeaders","destClone","currentColumnLength","qSortPatternClone","overloadArrayCheck","isEqual","reorder","columnToBeReordered","startIndex","endIndex","list","getItemStyle","draggableStyle","cardWidth","fontColor","newCardColor","lineHeight","borderRadius","justifyContent","zIndex","textAlign","getListStyle","columnColor","isUnderMaxCards","columnStatementsArray","maxCards","minWidth","marginTop","marginRight","minHeight","outline","outlineOffset","SortColumn","this","direction","currentSortValue","React","Component","getListStyleHori","horiCardMinHeight","flexWrap","paddingRight","overflowX","scrollBehavior","getItemStyleHori","newSortValue","isNaN","WebkitUserSelect","maxWidth","paddingLeft","touchAction","marginBottom","marginLeft","order","calculateDragResults","outcome","sortValue1","parseInt","testForCompleteArray","catchNan","resultsText","newValue","charAt","substring","sort","returnObj","convertObjectToResults","columnSortValues","sortArray","tempArray1","tempObject","statementNum","a","b","getSetColState","getSetIsSortingCards","getSetSortCompleted","getSetProgScoreAddSort","getSortCharacteristics","getSetSortCharacteristics","getSetCardHeight","getSetColumnWidth","getSortFinModalHasBeenShown","getSortGridResults","getSetIsSortingFinished","getSetSortFinModal","getSetTriggerSortingFinModal","getSetSortGridResults","SortGrid","setMinCardHeight","minCardHeight","columnColorsArray","columnHeadersColorsArray","setValue","visibleWidthAdjust","maxNumCardsInCol","dimensions","highlightedColHeader","warnOverloadedColumn","qSortHeaderNumber","columnHeadersColor","InnerList","memo","manageDragResults","sortCharacterisiticsPrep","totalStatements2","SortFooterDiv","CardSlider","getTriggerSortModal","getSetTriggerSortModal","SortHelpModal","helpModalHead","sortHelpModalHead","helpModalText","sortHelpModalText","getTriggerSortFinishedMod","getSetTrigSortFinishMod","SortingFinishedModal","sortingCompleteModalHead","sortingCompleteModalText","getSetTriggerSortPreventNavModal","sortPreventNavModalHead","sortPreventNavModalText","getSetTrigOverColModal","OverloadedColumnModal","sortOverloadedColumnModalHead","sortOverloadedColumnModalText","SortColGuides","ColorBarDivContainer","ColorBarDiv","uuid","getColumnWidth","getTopMargin","getSetPresortNoReturn","getSetTopMargin","getBypassSort","Sort","setDefaultFontSizeSort","defaultFontSizeSort","sortDisagreement","sortAgreement","condOfInst","innerHeight","clientWidth","setDimensions","debouncedHandleResize","fn","ms","timer","_","clearTimeout","apply","arguments","debounce","sortGridMarginTop","getElementById","clientHeight","PreventSortNavModal","SortTitleBarContainer","Disagree","CondOfInst","condOfInstFontSize","Agree","SortGridContainer","getSetTriggerTransOKMod","getSetDisplayGoodbyeMessage","SubmitSuccessModal","transferOkModalHeader","transferOkModalText","getSetTrigTransFailMod","SubmitFailureModal","transferFailModalHeader","transferFailModalText","getDisplaySubmitFallback","getSubmitFailNumber","getSetTrigTranFailMod","getSetTrigTransOKModal","getSetDisplaySubmitFallback","getTransmittingData","getSetTransmittingData","getCheckInternetConnection","getSetCheckInternetConnection","SubmitResultsButton","btnTransferText","btnTransfer","DisabledButton","TransmittingSpin","StyledButton","preventDefault","disabled","firebase","auth","signInAnonymously","rootRef","removeItem","linkToSecondProject","nextLinkAnchor","secondProjectUrl","toLowerCase","catch","errorCode","code","errorMessage","handleClick","WarningDiv","calculatePostsortResults","newObject","highCardNum","highCardVal","highCard2Num","highCard2Val","lowCardNum","lowCardVal","lowCard2Num","lowCard2Val","neuCardNum","hasOwnProperty","length2","ii","displayNeutralObjects","length5","jjj","length4","jj","length3","downloadButtonText","btnDownload","resultsWithId","finalResults","content","fileName","contentType","file","Blob","URL","createObjectURL","download","revokeObjectURL","SubmitFallback","fallbackMessage","StyledMessage","FallbackButtons","SubmitLocalResultsButton","localSaveDataButton","participantDesignation","newColumnStatements","returnToLocalPanelButtonText","reload","Promise","resolve","reject","getTrigLclSubmitSucMdl","LocalSubmitSuccessModal","localSubmitSuccessModalHeader","localSubmitSuccessModalText","apiString","api","rawData","store","SteinStore","formattedResultsObj","iterator","append","res","CopyToClipboardButton","setResult","copiedText","copyTextError","formattedResultsTxt","clipboard","writeText","copyToClipboard","text","MessageDiv","getSetDisableRefreshCheck","showEmailButtons","setShowEmailButtons","emailAddress","btnTransferEmail","defaultEmailClientFailText","defaultEmailClientFail","emailSubject","emailMessage1","EmailButtonDiv","clipboardEmail","clipboardResults","SpacerDiv","getResultsSurvey","getPartId","getUsercode","getUrlUsercode","getDisplayGoodbyeMessage","getParticipantName","transmissionResults","SubmitPage","transferTextAbove","transferTextBelow","goodbyeMessage","linkedProjectFallbackMessage","linkedProjectBtnMessage","pageHeader","transferHead","timeOnlandingPage","timeOnpresortPage","timeOnsortPage","showPostsort","timeOnpostsortPage","showSurvey","timeOnsurveyPage","numPos","numNeu","numNeg","newPostsortObject","keys2","property","GoodbyeDiv","targetNew","textDecoration","SaveLocalDataToLocalStorageButton","SubmitButtonGS","steinApiUrl","SubmitButtonEmail","SubmitButton","getSetResultsSurvey","getAnswersStorage","getSetAnswersStorage","SurveyTextElement","check","opts","qNum","userText","setUserText","formatOptions","setFormatOptions","userTextLen","userTextLen1","required","labelText","label","noteText","note","TitleBar","NoteText","TextInput","valueLen","restricted","limited","limitLength","sanitizedText","getCheckReqQsComplete","getRequiredAnswersObj","getSetRequiredAnswersObj","SurveyTextAreaElement","TextAreaInput","SurveyRadioElement","testValue","setTestValue","optsArray","options","array","x","trim","getOptionsArray","RadioInput","checked","setter","InputStyleDiv","LabelDiv","selected","setSelected","response","RadioItems","radioList","RadioContainer","SurveyDropdownElement","originalOptions","localStore","hasBeenAnswered","selected2","tempObj","labelledBy","SurveyCheckboxElement","setHasBeenAnswered","nameValue","Array","fill","checkedState","setCheckedState","currentState","toString","position","updatedCheckedState","substr","htmlFor","SurveyRatings2Element","setLocalStore","rows","scaleArray","scale","from","selectedRow","newObj","newArray","newCheckedState","row","rating2State","conditionalLength","itemText","ItemContainer","OptionsText","RatingTitle","ScaleDiv","span","SurveyRatings5Element","local5Store","setLocal5Store","checked5State","setChecked5State","newChecked5State","CircleDiv","SurveyRatings10Element","ratingState","SurveyInformationElement","infoText","getSetTrigSurvPrevNavModal","AnswerAllSurveyQuestionsModal","surveyPreventNavModalHead","surveyPreventNavModalText","getTriggerSurveyModal","getSetTriggerSurveyModal","SurveyHelpModal","surveyModalHead","surveyModalText","getSurveyQuestionObjArray","getCheckReqQuesComplete","SurveyPage","surveyQuestionObjects","surveyHeader","SurveyQuestions","object","SurveyRating2Element","SurveyRating5Element","SurveyRating10Element","NoQuestionsDiv","NonExistentPage","processConfigXMLData","dataObject","surveyQuestionArray","data","elements","surveyData","attributes","questionType","bg","isRequired","maxlength","shuffleCards","processMapXMLData","vColsObj","colInfoArray","_attributes","labelInt","abs","colNum","colour","numCards","_text","splitArray","headerNumbers","processLanguageXMLData","language","processStatementsXMLData","shuffledCards","shuffle","LoadingScreen","TextDiv","getPresortFinished","getCurrentPage","getSetCheckReqQuesCompl","getIsSortingFinished","getHasOverloadedColumn","getSetTrigSortPrevNavModal","getSetTrigSortOverColMod","getSetShowPostsortCommentHighlighting","getSetTriggerPostsortPreventNavModal","goToNextPage","setTriggerSortOverloadedColModal","isPresortFinished","sortResults1","checkArray2","checkArray","NextButton","getSetBypassSort","getSetBypassPresort","FooterFontSizer","fontSizeText","SpanDiv","SizeButton","padBottom","CardHeightSizer","cardHeightText","calcProgressScore","additionalProgress1","additionalProgressSort","additionalProgressState","additionalProgressStateSort","adjustmentValue1","adjustmentValue2","adjustmentValue3","additionalProgress","getSetTriggerSubmitModal","setTriggerSubmitModal","HelpButton","buttonText","btnHelp","StyledHelpButton","getNextPage","getDisplayNextButton","getAdditionalProgress","getAdditionalProgressSort","StyledFooter","showBackButton","showAdjustmentContainer","showCardHeightSizer","displayHelpButton","backButtonText","postsortBackButtonText","logoHtml","nextButtonText","btnNext","projectName","today","totalProgressScore","CenterContent","AdjustmentsContainer","ProgressBarDiv","completed","labelColor","baseBgColor","nextPage","StyledFooterDiv","LogoContainer","CenterDiv","ButtonDiv","PostsortBackButton","footer","convert","require","getSetConfigObj","getSetLangObj","getSetMapObj","getSetStatementsObj","getSetResetColumnStatements","getSetSurveyQuesObjArray","getSetDataLoaded","getDisableRefreshCheck","App","isLoading","setLoading","unloadCallback","axios","languageData","xml2js","compact","ignoreComment","spaces","configData","info","mapData","statementsData","exact","path","component","SortPage","PostsortPage","NoPageFound","ReactDOM","render","StrictMode","Suspense","fallback"],"mappings":"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","file":"static/js/main.73fb1324.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n    *{\n        margin: 0;\n        padding: 0;\n        outline:0;\n        box-sizing:border-box;\n        font-family: 'Open Sans', sans-serif; \n    }\n    #root{\n        margin:0 auto;\n    }\n\n    /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  overflow: -moz-scrollbars-vertical; \n  overflow-y: scroll;\n  -ms-touch-action: manipulation;\ntouch-action: manipulation;\n}\n\n\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n  height:calc(100vh-50px);\n  overscroll-behavior: none;\n}\n\n/**\n * Render the main element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on 'h1' elements within 'section' and\n * 'article' contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd 'em' font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n  display: inline !important;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd 'em' font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent 'sub' and 'sup' elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from 'fieldset' elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    'fieldset' elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to 'inherit' in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n\n\n/***********************************\n  FOOTER CSS\n *******************************************************************************/\nfooter { \n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 50px;\n  background: #ececec; \n}\n\n/***********************************\n  PRESORT CSS\n *******************************************************************************/\n\n  .dragObject {\n    -webkit-user-select: none;\n    user-select: none;\n    display: flex;\n    flex-direction: row;\n  }\n\n\n\n  .react-responsive-modal-modal {\n  background: white;\n  max-width: 700px;\n  width: 100%;\n  padding: 15px;\n\n}\n\n  #cardsDiv{\n    grid-column-start: 3;\n    overflow: hidden;\n    align-self: end;\n  }\n  \n  #cards{\n    max-height:215px;\n    min-height:150px;\n    overflow: hidden;\n  }\n  \n  #completionRatio {\n    grid-row-start: 2;\n    grid-column-start: 3;\n    text-align: center;\n    font-weight: bold;\n  }\n\n  #negDiv{\n    grid-row-start: 3;\n    grid-column-start: 2;\n    overflow-y: auto;\n    background-color: white;\n    min-height: 300px;\n    height: 58vh;\n    padding-top: 5px;\n    border-top-left-radius: 3px;\n    border-bottom-left-radius: 3px;\n    border: 1px solid #aeaeae;\n\n    ::-webkit-scrollbar {\n      // Width of vertical scroll bar\n      width: 10px;\n      // Height of horizontal scroll bar\n      height: 10px;\n\n    }\n    ::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      background: gray;\n    }\n  }\n  \n\n  #neutralDiv{\n    grid-row-start: 3;\n    grid-column-start: 3;\n    overflow-y: auto;\n    background-color: white;\n    min-height: 300px;\n    height: 58vh;\n    padding-top: 5px;\n    border: 1px solid #aeaeae;\n\n    ::-webkit-scrollbar {\n      // Width of vertical scroll bar\n      width: 10px;\n      // Height of horizontal scroll bar\n      height: 10px;\n\n    }\n    ::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      background: gray;\n    }\n\n  }\n\n  #posDiv{\n    grid-row-start: 3;\n    grid-column-start: 4;\n    overflow-y: auto;\n    background-color: white;\n    height: 58vh;\n    padding-top: 5px;\n    border-top-right-radius: 3px;\n    border-bottom-right-radius: 3px;\n    border: 1px solid #aeaeae;\n\n    ::-webkit-scrollbar {\n      // Width of vertical scroll bar\n      width: 10px;\n      // Height of horizontal scroll bar\n      height: 10px;\n\n    }\n    ::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      background: gray;\n    }\n  }\n\n  #pos{\n    min-height: 52vh;\n    border-radius: 3px;\n  }\n\n  #neutral{\n    min-height: 52vh;\n    border-radius: 3px;\n  }\n\n  #neg{\n    min-height: 52vh;\n    border-radius: 3px;\n  }\n}\n\n\n/***********************************\n  SORT CSS\n *******************************************************************************/\n.sortContainer {\n  display: flex;\n  flex-direction: column;\n  margin: 5px;\n  background: rgba(0, 0, 0, 0.1);\n  min-height: 400px;\n  max-height: 800px;\n  overflow: auto;\n}\n\n.rootDiv {\n  background-color: white;\n  /* background-color: #6a9bc3; */\n  padding: 0px, 0px, 10px, 10px;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  -webkit-user-select: none;\n  -webkit-touch-callout: none;\n}\n\n.headersContainer {\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: flex-start;\n  height: 50px;\n  flex-direction: \"row-reverse\";\n}\n\n.greenSortCard {\n  display: flex;\n  justify-content: center;\n  background: lightgreen;\n  border: 2px solid gray;\n}\n\n.pinkSortCard {\n  display: flex;\n  justify-content: center;\n  background-color: rgba(255, 182, 193, 0.4);\n  border: 2px solid gray;\n}\n\n.yellowSortCard {\n  display: flex;\n  justify-content: center;\n  background-color: lightgray;\n  border: 2px solid gray;\n}\n\n/* \n.isPositiveStatement {\n  background-color: rgba(199, 246, 199, 0.6);\n} */\n\n.sortFooter {\n  display: flex;\n  flex-direction: row;\n  background: #e4e4e4;\n  position: fixed;\n  left: 0px;\n  bottom: 50px !important;\n  width: 100%;\n  height: 150px;\n}\n\n.footerMessageBox {\n  flex-basis: 100px;\n  padding-right: 5px;\n  padding-left: 5px;\n  width: 100px;\n  height: 100px;\n  border: 2px solid lightgray;\n  text-align: center;\n}\n\n.footerMessageBox p {\n  padding: 0px;\n  margin-top: 10px;\n  font-size: 10px;\n  color: #3273dc;\n}\n\n.sortEndButton {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin: 10px;\n}\n\n.cardSlider {\n  width: 100vw;\n  overflow: hidden;\n  display: flex;\n  align-items: right;\n}\n\n.placeholder {\n  width: 100px;\n  -webkit-animation: placeholderAnimate 3s ease-in;\n}\n\n\n\n/***********************************\n  LANDING MODAL CSS\n *******************************************************************************/\n/* \n.customModal .react-responsive-modal-modal {\n    background: rgba(0, 0, 0, 0.8) !important;\n  } */\n\n  /*\n  spinner css\n  */\n\n  #loading {\n  display: inline-block;\n  width: 100px;\n  margin-top: 40px;\n  height: 100px;\n  border: 10px solid lightgray;\n  border-radius: 50%;\n  border-top-color: #337ab7;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n@-webkit-keyframes spin {\n  to { -webkit-transform: rotate(360deg); }\n}\n\n\n@keyframes opacity {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n\n@-webkit-keyframes slide {\n    100% { left: 0; }\n}\n\n@keyframes slide {\n    100% { left: 0; }\n}\n\n@-webkit-keyframes placeholderAnimate {\n  100% {\n    width: 100%;\n  }\n  0% {\n    width: 0px;\n  }\n}\n\n`;\n","const decodeHTML = (string) => {\n  try {\n    let shouldDoReplace = string.includes(\"{{{\");\n\n    if (shouldDoReplace === true) {\n      const replaceLeft = /{{{/gi;\n      const replaceRight = /}}}/gi;\n      const stringText2 = string.replace(replaceLeft, \"<\");\n      const stringText3 = stringText2.replace(replaceRight, \">\");\n      return stringText3;\n    } else {\n      return string;\n    }\n  } catch (error) {\n    console.log(\"There was an error decoding into HTML\");\n    console.error(error);\n  }\n};\n\nexport default decodeHTML;\n","// import state from \"../store\";\n// import store from \"../state\";\n\nconst getCumulativeDuration = (startTime, cumulativeDuration2) => {\n  const cumulativeDuration = +cumulativeDuration2;\n  // duration, location\n  let dateNow = Date.now();\n\n  let fullTime = dateNow - startTime + cumulativeDuration;\n\n  return fullTime;\n};\n\nexport default getCumulativeDuration;\n","const getCurrentDateTime = () => {\n  const currentDate = new Date();\n  const date = currentDate.getDate();\n  const month = currentDate.getMonth(); //Be careful! January is 0 not 1\n  const year = currentDate.getFullYear();\n  const hour = currentDate.getHours();\n  let minute = currentDate.getMinutes();\n  let seconds = currentDate.getSeconds();\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  if (minute < 10) {\n    minute = \"0\" + minute;\n  }\n  let dateString =\n    date +\n    \"/\" +\n    (month + 1) +\n    \"/\" +\n    year +\n    \" @ \" +\n    hour +\n    \":\" +\n    minute +\n    \":\" +\n    seconds;\n\n  return dateString;\n};\n\nexport default getCurrentDateTime;\n","import getCumulativeDuration from \"./getCumulativeDuration\";\nimport millisecondsToTime from \"./millisecondsToTime\";\nimport getCurrentDateTime from \"./getCurrentDateTime\";\n\nconst calculateTimeOnPage = (startTime, prefix, prefix2, results) => {\n  const identifier = `cumulative${prefix}Duration`;\n  // const identifier2 = `set${prefix2}DurationCumulative`;\n  const identifier3 = `timeOn${prefix2}`;\n  const identifier4 = `lastAccess${prefix2}`;\n\n  // const durationCumulative = store.getState()[identifier];\n  let durationCumulative = localStorage.getItem(identifier) || 0;\n  if (durationCumulative === undefined) {\n    durationCumulative = 0;\n  }\n\n  const newDurationCumulative = getCumulativeDuration(\n    startTime,\n    +durationCumulative\n  );\n  // send to state\n  localStorage.setItem(identifier, newDurationCumulative);\n\n  // send last access time to state\n  const dateString = getCurrentDateTime();\n  localStorage.setItem(identifier4, dateString);\n  if (!results.dateTime) {\n    results.dateTime = dateString;\n  }\n\n  // send to memory\n  const formattedDuration = millisecondsToTime(newDurationCumulative);\n  localStorage.setItem(identifier3, formattedDuration);\n  results[identifier3] = formattedDuration;\n  return results;\n};\n\nexport default calculateTimeOnPage;\n","export default function msToTime(s) {\n  // Pad to 2 or 3 digits, default is 2\n  var pad = (n, z = 2) => (\"00\" + n).slice(-z);\n  return (\n    pad((s / 3.6e6) | 0) +\n    \":\" +\n    pad(((s % 3.6e6) / 6e4) | 0) +\n    \":\" +\n    pad(((s % 6e4) / 1000) | 0) // +\n    // \".\" +\n    // pad(s % 1000, 3)\n  );\n}\n","const createConfigSettingsSlice = (set, get) => ({\n  configObj: {},\n  surveyQuestionObjArray: [],\n  requiredAnswersObj: {},\n\n  setConfigObj: (configObjInput) => {\n    set(() => ({ configObj: configObjInput }));\n  },\n  setSurveyQuestionObjArray: (configObjInput) => {\n    set(() => ({ surveyQuestionObjArray: configObjInput }));\n  },\n  setRequiredAnswersObj: (configObjInput) => {\n    set(() => ({ requiredAnswersObj: configObjInput }));\n  },\n});\n\nexport default createConfigSettingsSlice;\n","const createLanguageSettingsSlice = (set, get) => ({\n  langObj: {},\n\n  setLangObj: (langObjInput) => {\n    set(() => ({ langObj: langObjInput }));\n  },\n});\n\nexport default createLanguageSettingsSlice;\n","const createMapSettingsSlice = (set, get) => ({\n  // includes qSortPattern, qSortHeaderNumbers, etc...\n  mapObj: {},\n\n  setMapObj: (mapObjInput) => {\n    set(() => ({ mapObj: mapObjInput }));\n  },\n});\n\nexport default createMapSettingsSlice;\n","const createStatementsSettingsSlice = (set, get) => ({\n  statementsObj: {},\n  columnStatements: {},\n  resetColumnStatements: {},\n\n  setStatementsObj: (statementsObjInput) => {\n    set(() => ({ statementsObj: statementsObjInput }));\n  },\n  setColumnStatements: (columnStatementsInput) => {\n    set(() => ({ columnStatements: columnStatementsInput }));\n  },\n  setResetColumnStatements: (inputValue) => {\n    set(() => ({ resetColumnStatements: inputValue }));\n  },\n});\n\nexport default createStatementsSettingsSlice;\n","import create from \"zustand\";\nimport createConfigSettingsSlice from \"./createConfigSettingsSlice\";\nimport createLanguageSettingsSlice from \"./createLanguageSettingsSlice\";\nimport createMapSettingsSlice from \"./createMapSettingsSlice\";\nimport createStatementsSettingsSlice from \"./createStatementsSettingsSlice\";\n\nconst useSettingsStore = create((set, get) => ({\n  ...createConfigSettingsSlice(set, get),\n  ...createLanguageSettingsSlice(set, get),\n  ...createMapSettingsSlice(set, get),\n  ...createStatementsSettingsSlice(set, get),\n}));\n\nexport default useSettingsStore;\n","const createLocalPanelSlice = (set, get) => ({\n  displayLocalPartIdWarning1: false,\n  displayLocalPartIdWarning2: false,\n  triggerLocalDeleteModal: false,\n  localParticipantName: \"\",\n\n  setLocalParticipantName: (inputValue) => {\n    set(() => ({ localParticipantName: inputValue }));\n  },\n  setLocalPartIdWarning1: (bool) => {\n    set(() => ({ displayLocalPartIdWarning1: bool }));\n  },\n  setLocalPartIdWarning2: (bool) => {\n    set(() => ({ displayLocalPartIdWarning2: bool }));\n  },\n  setLocalDeleteModal: (bool) => {\n    set(() => ({ triggerLocalDeleteModal: bool }));\n  },\n});\n\nexport default createLocalPanelSlice;\n","const createPresortSlice = (set, get) => ({\n  triggerPresortModal: true,\n  presortNoReturn: false,\n  presortPosCards: [],\n  presortNeuCards: [],\n  presortNegCards: [],\n  presortCards: [],\n  presortSortedStatementsNumInitial: 0,\n  presortFinished: false,\n  triggerPresortFinishedModal: false,\n  triggerPresortPreventNavModal: false,\n  results: {},\n\n  setPresortNoReturn: (inputValue) => {\n    set(() => ({ presortNoReturn: inputValue }));\n  },\n  setPresortPosCards: (inputValue) => {\n    set(() => ({ presortPosCards: inputValue }));\n  },\n  setPresortNeuCards: (inputValue) => {\n    set(() => ({ presortNeuCards: inputValue }));\n  },\n  setPresortNegCards: (inputValue) => {\n    set(() => ({ presortNegCards: inputValue }));\n  },\n  setPresortCards: (inputValue) => {\n    set(() => ({ presortCards: inputValue }));\n  },\n  setPresortSortedStatementsNumInitial: (inputValue) => {\n    set(() => ({ presortSortedStatementsNumInitial: inputValue }));\n  },\n  setPresortFinished: (bool) => {\n    set(() => ({ presortFinished: bool }));\n  },\n  setTriggerPresortFinishedModal: (bool) => {\n    set(() => ({ triggerPresortFinishedModal: bool }));\n  },\n  setTriggerPresortPreventNavModal: (bool) => {\n    set(() => ({ triggerPresortPreventNavModal: bool }));\n  },\n  setResults: (inputValue) => {\n    set(() => ({ results: inputValue }));\n  },\n  setTriggerPresortModal: (inputValue) => {\n    set(() => ({ triggerPresortModal: inputValue }));\n  },\n});\n\nexport default createPresortSlice;\n","const createLandingSlice = (set, get) => ({\n  dataLoaded: false,\n  isLoggedIn: false,\n  triggerLandingModal: false,\n  usercode: \"\",\n  urlUsercode: \"not set\",\n  partId: \"not required\",\n  localUsercode: \"\",\n  displayAccessCodeWarning: false,\n  userInputAccessCode: \"\",\n  displayLandingContent: false,\n  triggerSaveBeforeDeleteModal: false,\n  userInputPartId: \"\",\n  displayPartIdWarning: false,\n\n  setUrlUsercode: (inputValue) => {\n    set(() => ({ urlUsercode: inputValue }));\n  },\n  setDisplayPartIdWarning: (inputValue) => {\n    set(() => ({ displayPartIdWarning: inputValue }));\n  },\n  setUserInputPartId: (inputValue) => {\n    set(() => ({ userInputPartId: inputValue }));\n  },\n  setTriggerSaveBeforeDeleteModal: (inputValue) => {\n    set(() => ({ triggerSaveBeforeDeleteModal: inputValue }));\n  },\n  setDataLoaded: (inputValue) => {\n    set(() => ({ dataLoaded: inputValue }));\n  },\n  setIsLoggedIn: (inputValue) => {\n    set(() => ({ isLoggedIn: inputValue }));\n  },\n  setTriggerLandingModal: (inputValue) => {\n    set(() => ({ triggerLandingModal: inputValue }));\n  },\n  setUsercode: (inputValue) => {\n    set(() => ({ usercode: inputValue }));\n  },\n  setPartId: (inputValue) => {\n    set(() => ({ partId: inputValue }));\n  },\n  setLocalUsercode: (input) => {\n    set(() => ({ localUsercode: input }));\n  },\n  setDisplayAccessCodeWarning: (input) => {\n    set(() => ({ displayAccessCodeWarning: input }));\n  },\n  setUserInputAccessCode: (input) => {\n    set(() => ({ userInputAccessCode: input }));\n  },\n  setDisplayLandingContent: (input) => {\n    set(() => ({ displayLandingContent: input }));\n  },\n});\n\nexport default createLandingSlice;\n","const createFooterSlice = (set, get) => ({\n  cardFontSize: 15,\n  currentPage: \"landing\",\n  progressScore: 10,\n  progressScoreAdditional: 0,\n  progressScoreAdditionalSort: 0,\n  displayNextButton: false,\n\n  setCardFontSize: (inputValue) => {\n    set(() => ({ cardFontSize: inputValue }));\n  },\n  setCurrentPage: (inputValue) => {\n    set(() => ({ currentPage: inputValue }));\n  },\n  setProgressScore: (inputValue) => {\n    set(() => ({ progressScore: inputValue }));\n  },\n  setProgressScoreAdditional: (inputValue) => {\n    set(() => ({ progressScoreAdditional: inputValue }));\n  },\n  setProgressScoreAdditionalSort: (inputValue) => {\n    set(() => ({ progressScoreAdditionalSort: inputValue }));\n  },\n  setDisplayNextButton: (inputValue) => {\n    set(() => ({ displayNextButton: inputValue }));\n  },\n});\n\nexport default createFooterSlice;\n","const createSortSlice = (set, get) => ({\n  cardHeight: 0,\n  columnWidth: 100,\n  draggingOverColumnId: \"\",\n  hasOverloadedColumn: false,\n  isSortingCards: true,\n  isSortingFinished: false,\n  overloadedColumn: \"\",\n  sortCompleted: false,\n  sortFinished: false,\n  sortFinishedModalHasBeenShown: false,\n  sortCharacteristics: {},\n  topMargin: 50,\n  triggerSortModal: true,\n  triggerSortPreventNavModal: false,\n  triggerSortOverloadedColumnModal: false,\n  triggerSortingFinishedModal: false,\n  sortGridResults: {},\n  bypassSort: false,\n  bypassPresort: false,\n\n  setBypassPresort: (inputValue) => {\n    set(() => ({ bypassPresort: inputValue }));\n  },\n  setBypassSort: (inputValue) => {\n    set(() => ({ bypassSort: inputValue }));\n  },\n  setDraggingOverColumnId: (inputValue) => {\n    set(() => ({ draggingOverColumnId: inputValue }));\n  },\n  setOverloadedColumn: (inputValue) => {\n    set(() => ({ overloadedColumn: inputValue }));\n  },\n  setTriggerSortingFinishedModal: (inputValue) => {\n    set(() => ({ triggerSortingFinishedModal: inputValue }));\n  },\n  setSortGridResults: (inputValue) => {\n    set(() => ({ sortGridResults: inputValue }));\n  },\n  setColumnWidth: (inputValue) => {\n    set(() => ({ columnWidth: inputValue }));\n  },\n  setTopMargin: (inputValue) => {\n    set(() => ({ topMargin: inputValue }));\n  },\n  setIsSortingCards: (inputValue) => {\n    set(() => ({ isSortingCards: inputValue }));\n  },\n  setSortCompleted: (inputValue) => {\n    set(() => ({ sortCompleted: inputValue }));\n  },\n  setSortFinished: (inputValue) => {\n    set(() => ({ sortFinished: inputValue }));\n  },\n  setSortFinishedModalHasBeenShown: (inputValue) => {\n    set(() => ({ sortFinishedModalHasBeenShown: inputValue }));\n  },\n  setSortCharacteristics: (inputValue) => {\n    set(() => ({ sortCharacteristics: inputValue }));\n  },\n  setCardHeight: (inputValue) => {\n    set(() => ({ cardHeight: inputValue }));\n  },\n  setTriggerSortModal: (inputValue) => {\n    set(() => ({ triggerSortModal: inputValue }));\n  },\n  setIsSortingFinished: (inputValue) => {\n    set(() => ({ isSortingFinished: inputValue }));\n  },\n  setHasOverloadedColumn: (inputValue) => {\n    set(() => ({ hasOverloadedColumn: inputValue }));\n  },\n  setTriggerSortPreventNavModal: (inputValue) => {\n    set(() => ({ triggerSortPreventNavModal: inputValue }));\n  },\n  setTriggerSortOverloadedColumnModal: (inputValue) => {\n    set(() => ({ triggerSortOverloadedColumnModal: inputValue }));\n  },\n});\n\nexport default createSortSlice;\n","const createPostsortSlice = (set, get) => ({\n  resultsPostsort: {},\n  statementCommentsObj: {},\n  triggerPostsortModal: false,\n  postsortCommentCheckObj: {},\n  showPostsortCommentHighlighting: false,\n  triggerPostsortPreventNavModal: false,\n\n  setResultsPostsort: (inputValue) => {\n    set(() => ({ resultsPostsort: inputValue }));\n  },\n  setStatementCommentsObj: (inputValue) => {\n    set(() => ({ statementCommentsObj: inputValue }));\n  },\n  setTriggerPostsortModal: (inputValue) => {\n    set(() => ({ triggerPostsortModal: inputValue }));\n  },\n  setPostsortCommentCheckObj: (inputValue) => {\n    set(() => ({ postsortCommentCheckObj: inputValue }));\n  },\n  setShowPostsortCommentHighlighting: (inputValue) => {\n    set(() => ({ showPostsortCommentHighlighting: inputValue }));\n  },\n  setTriggerPostsortPreventNavModal: (inputValue) => {\n    set(() => ({ triggerPostsortPreventNavModal: inputValue }));\n  },\n});\n\nexport default createPostsortSlice;\n","const createSubmitSlice = (set, get) => ({\n  disableRefreshCheck: false,\n  displaySubmitFallback: false,\n  displayGoodbyeMessage: false,\n  triggerLocalSubmitSuccessModal: false,\n  triggerTransmissionOKModal: false,\n  triggerTransmissionFailModal: false,\n  submitFailNumber: 0,\n  transmittingData: false,\n  checkInternetConnection: false,\n\n  setDisableRefreshCheck: (input) => {\n    set(() => ({ disableRefreshCheck: input }));\n  },\n  setCheckInternetConnection: (input) => {\n    set(() => ({ checkInternetConnection: input }));\n  },\n  setTransmittingData: (input) => {\n    set(() => ({ transmittingData: input }));\n  },\n  setTriggerTransmissionFailModal: (input) => {\n    set(() => ({ triggerTransmissionFailModal: input }));\n  },\n  setTriggerTransmissionOKModal: (input) => {\n    set(() => ({ triggerTransmissionOKModal: input }));\n  },\n  setTriggerLocalSubmitSuccessModal: (input) => {\n    set(() => ({ triggerLocalSubmitSuccessModal: input }));\n  },\n  setDisplaySubmitFallback: (input) => {\n    set(() => ({ displaySubmitFallback: input }));\n  },\n  setDisplayGoodbyeMessage: (inputValue) => {\n    set(() => ({ displayGoodbyeMessage: inputValue }));\n  },\n});\n\nexport default createSubmitSlice;\n","const createSurveySlice = (set, get) => ({\n  triggerSurveyModal: false,\n  resultsSurvey: {},\n  triggerSurveyPreventNavModal: false,\n  checkRequiredQuestionsComplete: false,\n  requiredAnswersObj: {},\n  answersStorage: {},\n\n  setAnswersStorage: (inputValue) => {\n    set(() => ({ answersStorage: inputValue }));\n  },\n  setTriggerSurveyModal: (inputValue) => {\n    set(() => ({ triggerSurveyModal: inputValue }));\n  },\n  setResultsSurvey: (inputValue) => {\n    set(() => ({ resultsSurvey: inputValue }));\n  },\n\n  setTriggerSurveyPreventNavModal: (inputValue) => {\n    set(() => ({ triggerSurveyPreventNavModal: inputValue }));\n  },\n  setCheckRequiredQuestionsComplete: (inputValue) => {\n    set(() => ({ checkRequiredQuestionsComplete: inputValue }));\n  },\n  setRequiredAnswersObj: (inputValue) => {\n    set(() => ({ requiredAnswersObj: inputValue }));\n  },\n});\n\nexport default createSurveySlice;\n","import create from \"zustand\";\nimport createLocalPanelSlice from \"./createLocalPanelSlice\";\nimport createPresortSlice from \"./createPresortSlice\";\nimport createLandingSlice from \"./createLandingSlice\";\nimport createFooterSlice from \"./createFooterSlice\";\nimport createSortSlice from \"./createSortSlice\";\nimport createPostsortSlice from \"./createPostsortSlice\";\nimport createSubmitSlice from \"./createSubmitSlice\";\nimport createSurveySlice from \"./createSurveySlice\";\n\nconst useStore = create((set, get) => ({\n  ...createFooterSlice(set, get),\n  ...createLocalPanelSlice(set, get),\n  ...createLandingSlice(set, get),\n  ...createPresortSlice(set, get),\n  ...createSortSlice(set, get),\n  ...createPostsortSlice(set, get),\n  ...createSubmitSlice(set, get),\n  ...createSurveySlice(set, get),\n}));\n\nexport default useStore;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerLandingModal = (state) => state.triggerLandingModal;\nconst getSetTriggerLandingModal = (state) => state.setTriggerLandingModal;\n\nconst LandingModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerLandingModal = useStore(getTriggerLandingModal);\n  const setTriggerLandingModal = useStore(getSetTriggerLandingModal);\n\n  const loginHelpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.landingHelpModalHead)\n  );\n  const loginHelpModalText = ReactHtmlParser(\n    decodeHTML(langObj.landingHelpModalText)\n  );\n\n  const onCloseModal = () => {\n    setTriggerLandingModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerLandingModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{loginHelpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{loginHelpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default LandingModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LogInSubmitButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const loginSubmitButtonText = ReactHtmlParser(\n    decodeHTML(langObj.loginSubmitButtonText)\n  );\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\n      {loginSubmitButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LogInSubmitButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LogInSubmitButton from \"./LogInSubmitButton\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplayAccessCodeWarning = (state) => state.displayAccessCodeWarning;\nconst getDisplayPartIdWarning = (state) => state.displayPartIdWarning;\nconst getSetUserInputPartId = (state) => state.setUserInputPartId;\nconst getSetUserInputAccessCode = (state) => state.setUserInputAccessCode;\nconst getUserInputPartId = (state) => state.userInputPartId;\nconst getUserInputAccessCode = (state) => state.userInputAccessCode;\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\nconst getSetPartId = (state) => state.setPartId;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\nconst getSetDisplayAccessCodeWarning = (state) =>\n  state.setDisplayAccessCodeWarning;\nconst getSetDisplayPartIdWarning = (state) => state.setDisplayPartIdWarning;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const displayAccessCodeWarning = useStore(getDisplayAccessCodeWarning);\n  const displayPartIdWarning = useStore(getDisplayPartIdWarning);\n  const setUserInputPartId = useStore(getSetUserInputPartId);\n  const setUserInputAccessCode = useStore(getSetUserInputAccessCode);\n  const userInputPartId = useStore(getUserInputPartId);\n  const userInputAccessCode = useStore(getUserInputAccessCode);\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\n  const setPartId = useStore(getSetPartId);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\n  const setDisplayAccessCodeWarning = useStore(getSetDisplayAccessCodeWarning);\n  const setDisplayPartIdWarning = useStore(getSetDisplayPartIdWarning);\n\n  const welcomeText = ReactHtmlParser(decodeHTML(langObj.loginWelcomeText));\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.loginHeaderText));\n  const loginPartIdText = ReactHtmlParser(decodeHTML(langObj.loginPartIdText));\n  const partIdWarning = ReactHtmlParser(decodeHTML(langObj.partIdWarning));\n  const accessCodeWarning = ReactHtmlParser(\n    decodeHTML(langObj.accessCodeWarning)\n  );\n  const accessInputText = ReactHtmlParser(decodeHTML(langObj.accessInputText));\n\n  const handleInput = (e) => {\n    setUserInputPartId(e.target.value);\n  };\n\n  const handleAccess = (e) => {\n    setUserInputAccessCode(e.target.value);\n  };\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      if (event.key === \"Enter\") {\n        try {\n          let userPartIdOK = false;\n          let userAccessOK = false;\n          const projectAccessCode = configObj.accessCode;\n\n          // get user input\n          if (userInputPartId.length > 1) {\n            userPartIdOK = true;\n          } else {\n            userPartIdOK = false;\n          }\n          if (userInputAccessCode === projectAccessCode) {\n            userAccessOK = true;\n          }\n\n          // invalid input ==> display warnings\n          if (userAccessOK && userPartIdOK) {\n            setDisplayLandingContent(true);\n            setPartId(userInputPartId);\n            setDisplayNextButton(true);\n            setIsLoggedIn(true);\n          } else if (userAccessOK === false) {\n            console.log(\"no access code\");\n            setDisplayAccessCodeWarning(true);\n            setDisplayNextButton(false);\n            setTimeout(() => {\n              setDisplayAccessCodeWarning(false);\n            }, 5000);\n          } else if (userPartIdOK === false) {\n            setDisplayPartIdWarning(true);\n            setDisplayNextButton(false);\n            console.log(\"no id\");\n\n            setTimeout(() => {\n              setDisplayPartIdWarning(false);\n            }, 5000);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }; // end keyup\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [\n    setDisplayLandingContent,\n    setDisplayNextButton,\n    setIsLoggedIn,\n    configObj.accessCode,\n    setDisplayAccessCodeWarning,\n    userInputAccessCode,\n    setPartId,\n    setDisplayPartIdWarning,\n    userInputPartId,\n  ]);\n\n  const handleSubmit = () => {\n    try {\n      let userPartIdOK = false;\n      let userAccessOK = false;\n      const projectAccessCode = configObj.accessCode;\n\n      // get user input\n      if (userInputPartId.length > 1) {\n        userPartIdOK = true;\n      } else {\n        userPartIdOK = false;\n      }\n      if (userInputAccessCode === projectAccessCode) {\n        userAccessOK = true;\n      }\n\n      // invalid input ==> display warnings\n      if (userAccessOK && userPartIdOK) {\n        setDisplayLandingContent(true);\n        setPartId(userInputPartId);\n        setDisplayNextButton(true);\n        setIsLoggedIn(true);\n      } else if (userAccessOK === false) {\n        console.log(\"no access code\");\n        setDisplayAccessCodeWarning(true);\n        setDisplayNextButton(false);\n        setTimeout(() => {\n          setDisplayAccessCodeWarning(false);\n        }, 5000);\n      } else if (userPartIdOK === false) {\n        setDisplayPartIdWarning(true);\n        setDisplayNextButton(false);\n        console.log(\"no id\");\n\n        setTimeout(() => {\n          setDisplayPartIdWarning(false);\n        }, 5000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <LogInWelcomeText>{welcomeText}</LogInWelcomeText>\n      <Container>\n        <div>\n          <h2>{loginHeaderText}</h2>\n          <StyledHr />\n        </div>\n        <div>\n          <h3>{loginPartIdText}</h3>\n          <StyledInputDiv>\n            <StyledInput onChange={handleInput} type=\"text\" autoFocus />\n            {displayPartIdWarning && <WarningText>{partIdWarning}</WarningText>}\n          </StyledInputDiv>\n        </div>\n        <div>\n          <h3>{accessInputText}</h3>\n          <StyledInputDiv>\n            <StyledInput onChange={handleAccess} type=\"text\" />\n            {displayAccessCodeWarning && (\n              <WarningText>{accessCodeWarning}</WarningText>\n            )}\n          </StyledInputDiv>\n        </div>\n        <LogInSubmitButton onClick={handleSubmit} />\n      </Container>\n      <WarningText>{}</WarningText>\n    </React.Fragment>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 23% 28% 28% 1fr;\n  margin-top: 50px;\n  width: 800px;\n  padding: 20px;\n  min-height: 400px;\n  margin-bottom: 200px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst LogInWelcomeText = styled.div`\n  width: 900px;\n  font-size: 25px;\n  line-height: 1.3em;\n  padding-left: 35px;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LogInSubmitButton from \"./LogInSubmitButton\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getDisplayPartIdWarning = (state) => state.displayPartIdWarning;\nconst getSetUserInputPartId = (state) => state.setUserInputPartId;\nconst getUserInputPartId = (state) => state.userInputPartId;\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\nconst getSetPartId = (state) => state.setPartId;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\nconst getSetDisplayPartIdWarning = (state) => state.setDisplayPartIdWarning;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const displayPartIdWarning = useStore(getDisplayPartIdWarning);\n  const setUserInputPartId = useStore(getSetUserInputPartId);\n  const userInputPartId = useStore(getUserInputPartId);\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\n  const setPartId = useStore(getSetPartId);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\n  const setDisplayPartIdWarning = useStore(getSetDisplayPartIdWarning);\n\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.loginHeaderText));\n  const loginPartIdText = ReactHtmlParser(decodeHTML(langObj.loginPartIdText));\n  const partIdWarning = ReactHtmlParser(decodeHTML(langObj.partIdWarning));\n\n  const handleInput = (e) => {\n    setUserInputPartId(e.target.value);\n  };\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      if (event.key === \"Enter\") {\n        console.log(\"Enter\");\n        let userPartIdOK = false;\n\n        // get user input\n        if (userInputPartId.length > 0) {\n          userPartIdOK = true;\n          setDisplayLandingContent(true);\n          setPartId(userInputPartId);\n          setDisplayNextButton(true);\n          setIsLoggedIn(true);\n        }\n\n        // invalid input ==> display warnings\n        if (userPartIdOK === false) {\n          setDisplayPartIdWarning(true);\n          setTimeout(() => {\n            setDisplayPartIdWarning(false);\n          }, 5000);\n        }\n      }\n    }; // end keyup\n\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [\n    setDisplayLandingContent,\n    setPartId,\n    setDisplayNextButton,\n    setIsLoggedIn,\n    userInputPartId,\n    setDisplayPartIdWarning,\n  ]);\n\n  const handleSubmit = (e) => {\n    let userPartIdOK = false;\n\n    // get user input\n    if (userInputPartId.length > 0) {\n      userPartIdOK = true;\n      setDisplayLandingContent(true);\n      setPartId(userInputPartId);\n      setDisplayNextButton(true);\n      setIsLoggedIn(true);\n    }\n\n    // invalid input ==> display warnings\n    if (userPartIdOK === false) {\n      setDisplayPartIdWarning(true);\n      setTimeout(() => {\n        setDisplayPartIdWarning(false);\n      }, 5000);\n    }\n  };\n\n  return (\n    <Container>\n      <div>\n        <h2>{loginHeaderText}</h2>\n        <StyledHr />\n      </div>\n      <div>\n        <h3>{loginPartIdText}</h3>\n        <StyledInputDiv>\n          <StyledInput onChange={handleInput} type=\"text\" autoFocus />\n          {displayPartIdWarning && <WarningText>{partIdWarning}</WarningText>}\n        </StyledInputDiv>\n      </div>\n\n      <LogInSubmitButton onClick={handleSubmit} />\n    </Container>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  margin-top: 50px;\n  width: 50vw;\n  padding: 1.5vw;\n  min-height: 300px;\n  margin-bottom: 200px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LogInSubmitButton from \"./LogInSubmitButton\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplayAccessCodeWarning = (state) => state.displayAccessCodeWarning;\nconst getUserInputAccessCode = (state) => state.userInputAccessCode;\nconst getSetDisplayLandingContent = (state) => state.setDisplayLandingContent;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetIsLoggedIn = (state) => state.setIsLoggedIn;\nconst getSetUserInputAccessCode = (state) => state.setUserInputAccessCode;\nconst getSetDisplayAccessCodeWarning = (state) =>\n  state.setDisplayAccessCodeWarning;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const displayAccessCodeWarning = useStore(getDisplayAccessCodeWarning);\n  const userInputAccessCode = useStore(getUserInputAccessCode);\n  const setDisplayLandingContent = useStore(getSetDisplayLandingContent);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setIsLoggedIn = useStore(getSetIsLoggedIn);\n  const setUserInputAccessCode = useStore(getSetUserInputAccessCode);\n  const setDisplayAccessCodeWarning = useStore(getSetDisplayAccessCodeWarning);\n\n  // Language\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.loginHeaderText));\n  const accessInputText = ReactHtmlParser(decodeHTML(langObj.accessInputText));\n  const accessCodeWarning = ReactHtmlParser(\n    decodeHTML(langObj.accessCodeWarning)\n  );\n\n  const handleAccess = (e) => {\n    setUserInputAccessCode(e.target.value);\n  };\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      if (event.key === \"Enter\") {\n        let userAccessOK = false;\n        const projectAccessCode = configObj.accessCode;\n\n        // get user input\n\n        if (userInputAccessCode === projectAccessCode) {\n          userAccessOK = true;\n          setDisplayLandingContent(true);\n          setDisplayNextButton(true);\n          setIsLoggedIn(true);\n        }\n\n        // invalid input ==> display warnings\n        if (userAccessOK === false) {\n          setDisplayAccessCodeWarning(true);\n          setTimeout(() => {\n            setDisplayAccessCodeWarning(false);\n          }, 3000);\n        }\n      }\n    }; // end keyup\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [\n    setDisplayLandingContent,\n    setDisplayNextButton,\n    setIsLoggedIn,\n    configObj.accessCode,\n    setDisplayAccessCodeWarning,\n    userInputAccessCode,\n  ]);\n\n  const handleSubmit = (e) => {\n    let userAccessOK = false;\n    const projectAccessCode = configObj.accessCode;\n\n    // get user input\n\n    if (userInputAccessCode === projectAccessCode) {\n      userAccessOK = true;\n      setDisplayLandingContent(true);\n      setDisplayNextButton(true);\n      setIsLoggedIn(true);\n    }\n\n    // invalid input ==> display warnings\n    if (userAccessOK === false) {\n      setDisplayAccessCodeWarning(true);\n      setTimeout(() => {\n        setDisplayAccessCodeWarning(false);\n      }, 5000);\n    }\n  };\n\n  return (\n    <Container>\n      <div>\n        <h2>{loginHeaderText}</h2>\n        <StyledHr />\n      </div>\n      <div>\n        <h3>{accessInputText}</h3>\n        <StyledInputDiv>\n          <StyledInput onChange={handleAccess} type=\"text\" autoFocus />\n          {displayAccessCodeWarning && (\n            <WarningText>{accessCodeWarning}</WarningText>\n          )}\n        </StyledInputDiv>\n      </div>\n\n      <LogInSubmitButton onClick={handleSubmit} />\n    </Container>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr;\n  margin-top: 50px;\n  width: 50vw;\n  padding: 1.5vw;\n  min-height: 300px;\n  margin-bottom: 200px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n","/**\n * detect IEEdge\n * returns version of IE/Edge or false, if browser is not a Microsoft browser\n * stackoverflow\n * https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie\n */\nfunction detectIEEdge() {\n  var ua = window.navigator.userAgent;\n\n  var msie = ua.indexOf(\"MSIE \");\n  if (msie > 0) {\n    // IE 10 or older => return version number\n    // return parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie)), 10);\n    return true;\n  }\n\n  var trident = ua.indexOf(\"Trident/\");\n  if (trident > 0) {\n    // IE 11 => return version number\n    // var rv = ua.indexOf(\"rv:\");\n    // return parseInt(ua.substring(rv + 3, ua.indexOf(\".\", rv)), 10);\n    return true;\n  }\n\n  // other browser\n  return false;\n}\n\nconst checkForIeBrowser = () => {\n  const isIE = detectIEEdge();\n  return isIE;\n};\n\nexport default checkForIeBrowser;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const ieWarningHeaderText = ReactHtmlParser(\n    decodeHTML(langObj.ieWarningHeaderText)\n  );\n  const ieWarningText = ReactHtmlParser(decodeHTML(langObj.ieWarningText));\n\n  return (\n    <Container>\n      <div>\n        <center>\n          <h2>{ieWarningHeaderText}</h2>\n          <StyledHr />\n        </center>\n      </div>\n      <div>\n        <StyledInputDiv>\n          <h3>{ieWarningText}</h3>\n        </StyledInputDiv>\n      </div>\n    </Container>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  //  display: grid;\n  //   grid-template-rows: 1fr 1fr 1fr;\n  margin-top: 50px;\n  width: 50vw;\n  padding: 2vw;\n  min-height: 250px;\n  margin-bottom: 20px;\n  border: 2px solid black;\n  justify-self: center;\n  background-color: lightgoldenrodyellow;\n  border-radius: 50px;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 50px;\n`;\n","const parseParams = (params = \"\") => {\n  let returnVal;\n  if (params.includes(\"?\")) {\n    const rawParams1 = params.split(\"=\");\n    return rawParams1[1];\n  }\n  return returnVal;\n};\n\nexport default parseParams;\n","import styled from \"styled-components\";\nimport React, { useEffect, useCallback } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport { withRouter } from \"react-router\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport getCurrentDateTime from \"../../utilities/getCurrentDateTime\";\n\nconst getLangObj = (state) => state.langObj;\nconst getLocalParticipantName = (state) => state.localParticipantName;\nconst getLocalUsercode = (state) => state.localUsercode;\nconst getSetLocalParticipantName = (state) => state.setLocalParticipantName;\nconst getSetLocalUsercode = (state) => state.setLocalUsercode;\nconst getSetLocalPartIdWarning1 = (state) => state.setLocalPartIdWarning1;\nconst getSetLocalPartIdWarning2 = (state) => state.setLocalPartIdWarning2;\nconst getSetTriggerLocalSubmitSuccessModal = (state) =>\n  state.setTriggerLocalSubmitSuccessModal;\nconst getSetResults = (state) => state.setResults;\nconst getResults = (state) => state.results;\n\nconst LogInSubmitButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const localParticipantName = useStore(getLocalParticipantName);\n  const localUsercode = useStore(getLocalUsercode);\n  const setLocalParticipantName = useStore(getSetLocalParticipantName);\n  const setLocalUsercode = useStore(getSetLocalUsercode);\n  let setLocalPartIdWarning1 = useStore(getSetLocalPartIdWarning1);\n  let setLocalPartIdWarning2 = useStore(getSetLocalPartIdWarning2);\n  const setTriggerLocalSubmitSuccessModal = useStore(\n    getSetTriggerLocalSubmitSuccessModal\n  );\n  const setResults = useStore(getSetResults);\n  const results = useStore(getResults);\n\n  const localStartButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localStartButtonText)\n  );\n\n  const checkForNextPageConditions = useCallback(() => {\n    let value0 = false;\n    let value1;\n    let value2;\n\n    if (localParticipantName.length === 0) {\n      value1 = false;\n      setLocalPartIdWarning1(true);\n    } else {\n      setLocalPartIdWarning1(false);\n      value1 = true;\n    }\n\n    if (localUsercode.length === 0) {\n      value2 = false;\n      setLocalPartIdWarning2(true);\n    } else {\n      setLocalPartIdWarning2(false);\n\n      value2 = true;\n    }\n\n    if (value1 === true && value2 === true) {\n      value0 = true;\n    } else {\n      value0 = false;\n    }\n\n    return value0;\n  }, [\n    setLocalPartIdWarning1,\n    setLocalPartIdWarning2,\n    localParticipantName,\n    localUsercode,\n  ]);\n\n  const {\n    history,\n    location,\n    match,\n    staticContext,\n    to,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n    ...rest\n  } = props;\n\n  useEffect(() => {\n    const handleKeyUpStart = (event) => {\n      // reset time stamp\n      const dateString = getCurrentDateTime();\n      results.dateTime = dateString;\n      setResults(results);\n\n      if (event.key === \"Enter\") {\n        let isInputComplete = checkForNextPageConditions();\n        if (isInputComplete) {\n          history.push(`/presort`);\n        }\n      }\n    }; // end keyup\n\n    window.addEventListener(\"keyup\", handleKeyUpStart);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUpStart);\n  }, [history, checkForNextPageConditions, results, setResults]);\n\n  useEffect(() => {\n    setLocalParticipantName(\"\");\n    setLocalUsercode(\"\");\n    setLocalPartIdWarning1(false);\n    setLocalPartIdWarning2(false);\n  }, [\n    setLocalPartIdWarning1,\n    setLocalPartIdWarning2,\n    setLocalParticipantName,\n    setLocalUsercode,\n  ]);\n\n  return (\n    <StyledSubmitButton\n      {...rest} // `children` is just another prop!\n      onClick={(event) => {\n        onClick && onClick(event);\n        let isInputComplete = checkForNextPageConditions();\n        if (isInputComplete) {\n          history.push(to);\n        }\n        setTriggerLocalSubmitSuccessModal(false);\n      }}\n      tabindex=\"3\"\n    >\n      {localStartButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default withRouter(LogInSubmitButton);\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LogInSubmitButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const localDeleteButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteButtonText)\n  );\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\n      {localDeleteButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LogInSubmitButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst LocalSortsDownloadButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const localDownloadButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localDownloadButtonText)\n  );\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={props.onClick}>\n      {localDownloadButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LocalSortsDownloadButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import create from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nconst useLocalPersist = create(\n  persist(\n    (set, get) => ({\n      localStoredQsorts: {},\n      hasDownloadedQsorts: false,\n\n      setHasDownloadedQsorts: (inputValue) => {\n        set(() => ({ hasDownloadedQsorts: inputValue }));\n      },\n      setLocalStoredQsorts: (inputValue) => {\n        set(() => ({ localStoredQsorts: inputValue }));\n      },\n    }),\n    {\n      name: \"sorts-storage\", // unique name\n    }\n  )\n);\n\nexport default useLocalPersist;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\n\n// const getSetterLocalQsorts = (state) => state.setLocalStoredQsorts;\nconst getLangObj = (state) => state.langObj;\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\nconst getSetLocalStoredQsorts = (state) => state.setLocalStoredQsorts;\n\nconst LogInSubmitButton = (props) => {\n  // State\n  const setDisplayLocalDeleteModal = useStore(getSetLocalDeleteModal);\n  // const setLocalStoredQsorts = useStore(getSetterLocalQsorts);\n  const langObj = useSettingsStore(getLangObj);\n  const setLocalStoredQsorts = useLocalPersist(getSetLocalStoredQsorts);\n  const localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\n\n  const localDeleteButtonText = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteButtonText)\n  );\n\n  const clearLocalStorage = () => {\n    console.log(\"deleted localStorage\");\n    // localStorage.setItem(\"localStoredQsorts\", JSON.stringify({}));\n    // setLocalStoredQsorts({});\n    const dateTime = `${new Date().getTime()}`;\n    localStorage.setItem(dateTime, JSON.stringify(localStoredQsorts));\n    setLocalStoredQsorts({});\n    setDisplayLocalDeleteModal(false);\n  };\n\n  return (\n    <StyledSubmitButton tabindex=\"0\" type=\"submit\" onClick={clearLocalStorage}>\n      {localDeleteButtonText}\n    </StyledSubmitButton>\n  );\n};\nexport default LogInSubmitButton;\n\nconst StyledSubmitButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  align-self: end;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: red;\n\n  &:hover {\n  }\n\n  &:focus {\n  }\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport LocalConfirmDeleteButton from \"./LocalConfirmDeleteButton\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerLocalDeleteModal = (state) => state.triggerLocalDeleteModal;\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\n\nconst LocalDeleteModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerLocalDeleteModal = useStore(getTriggerLocalDeleteModal);\n  const setLocalDeleteModal = useStore(getSetLocalDeleteModal);\n\n  const localDeleteModalHead = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteModalHead)\n  );\n  const localDeleteModalText = ReactHtmlParser(\n    decodeHTML(langObj.localDeleteModalText)\n  );\n\n  const onCloseModal = () => {\n    setLocalDeleteModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerLocalDeleteModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{localDeleteModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{localDeleteModalText}</ModalContent>\n      <ButtonContainer>\n        <LocalConfirmDeleteButton />\n      </ButtonContainer>\n    </Modal>\n  );\n};\n\nexport default LocalDeleteModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSaveBeforeDeleteModal = (state) =>\n  state.triggerSaveBeforeDeleteModal;\nconst getSetTriggerSaveBeforeDeleteModal = (state) =>\n  state.setTriggerSaveBeforeDeleteModal;\n\nconst LocalDeleteModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSaveBeforeDeleteModal = useStore(\n    getTriggerSaveBeforeDeleteModal\n  );\n  const setTriggerSaveBeforeDeleteModal = useStore(\n    getSetTriggerSaveBeforeDeleteModal\n  );\n\n  const localDeleteModalHead = ReactHtmlParser(\n    decodeHTML(langObj.localSaveBeforeDeleteModalHeader)\n  );\n  const localDeleteModalText = ReactHtmlParser(\n    decodeHTML(langObj.localSaveBeforeDeleteModalText)\n  );\n\n  const onCloseModal = () => {\n    setTriggerSaveBeforeDeleteModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSaveBeforeDeleteModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{localDeleteModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{localDeleteModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default LocalDeleteModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport LocalStartButton from \"./LocalStartButton\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport LocalDeleteButton from \"./LocalDeleteButton\";\nimport LocalSortsDownloadButton from \"./LocalSortsDownloadButton\";\nimport LocalDeleteModal from \"./LocalDeleteModal\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\nimport LocalSaveBeforeDeleteModal from \"./LocalSaveBeforeDeleteModal\";\n\nfunction downloadObjectAsJson(exportObj, exportName) {\n  console.log(\"download called\");\n  var dataStr =\n    \"data:text/json;charset=utf-8,\" +\n    encodeURIComponent(JSON.stringify(exportObj));\n  var downloadAnchorNode = document.createElement(\"a\");\n  downloadAnchorNode.setAttribute(\"href\", dataStr);\n  downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n\nconst getDisplayLocalPartIdWarn1 = (state) => state.displayLocalPartIdWarning1;\nconst getSetLocalPartIdWarning1 = (state) => state.setLocalPartIdWarning1;\nconst getDisplayLocalPartIdWarn2 = (state) => state.displayLocalPartIdWarning2;\nconst getSetLocalPartIdWarning2 = (state) => state.setLocalPartIdWarning2;\nconst getSetLocalDeleteModal = (state) => state.setLocalDeleteModal;\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSetLocalParticipantName = (state) => state.setLocalParticipantName;\nconst getSetLocalUsercode = (state) => state.setLocalUsercode;\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\nconst getSetHasDownloadedQsorts = (state) => state.setHasDownloadedQsorts;\nconst getHasDownloadedQsorts = (state) => state.hasDownloadedQsorts;\nconst getSetTriggerSaveBeforeDeleteModal = (state) =>\n  state.setTriggerSaveBeforeDeleteModal;\n\nconst LogInScreen = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const displayPartIdWarning1 = useStore(getDisplayLocalPartIdWarn1);\n  const setLocalPartIdWarning1 = useStore(getSetLocalPartIdWarning1);\n  const displayPartIdWarning2 = useStore(getDisplayLocalPartIdWarn2);\n  const setLocalPartIdWarning2 = useStore(getSetLocalPartIdWarning2);\n  const setLocalDeleteModal = useStore(getSetLocalDeleteModal);\n  const setLocalParticipantName = useStore(getSetLocalParticipantName);\n  const setLocalUsercode = useStore(getSetLocalUsercode);\n  const localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\n  const hasDownloadedQsorts = useLocalPersist(getHasDownloadedQsorts);\n  const setHasDownloadedQsorts = useLocalPersist(getSetHasDownloadedQsorts);\n  const setTriggerSaveBeforeDeleteModal = useStore(\n    getSetTriggerSaveBeforeDeleteModal\n  );\n\n  const loginHeaderText = ReactHtmlParser(decodeHTML(langObj.localHeader));\n  const loginPartIdText = ReactHtmlParser(decodeHTML(langObj.partIdText));\n  const partIdWarning = ReactHtmlParser(decodeHTML(langObj.partIdWarning));\n  const usercodeText = ReactHtmlParser(decodeHTML(langObj.usercodeText));\n  const localParticipantsText = ReactHtmlParser(\n    decodeHTML(langObj.localParticipantsText)\n  );\n  const storedQsortsHeaderText = ReactHtmlParser(\n    decodeHTML(langObj.storedQsortsHeaderText)\n  );\n\n  const headerText = `${storedQsortsHeaderText}: ${\n    Object.keys(localStoredQsorts).length\n  } ${localParticipantsText}`;\n\n  const handleInput = (e) => {\n    setLocalParticipantName(e.target.value);\n    setLocalPartIdWarning1(false);\n  };\n\n  const handleUsercodeInput = (e) => {\n    setLocalUsercode(e.target.value);\n    // in case there is any value lingering from testing other setup targets\n    localStorage.setItem(\"urlUsercode\", \"\");\n    setLocalPartIdWarning2(false);\n  };\n\n  const handleDeleteLocal = (e) => {\n    // console.log(hasDownloadedQsorts);\n    if (hasDownloadedQsorts) {\n      setLocalDeleteModal(true);\n    } else {\n      // console.log(\"false branch\");\n      setTriggerSaveBeforeDeleteModal(true);\n    }\n  };\n\n  const handleDownloadLocal = (e) => {\n    // console.log(JSON.stringify(localStoredQsorts));\n    const studyTitle = configObj.studyTitle;\n    const myDate = new Date();\n    const myDateString =\n      (\"0\" + myDate.getFullYear()).slice(-2) +\n      \"-\" +\n      (\"0\" + (myDate.getMonth() + 1)).slice(-2) +\n      \"-\" +\n      myDate.getDate() +\n      \"_\" +\n      (\"0\" + myDate.getHours()).slice(-2) +\n      \"-\" +\n      (\"0\" + myDate.getMinutes()).slice(-2) +\n      \"-\" +\n      (\"0\" + myDate.getSeconds()).slice(-2);\n\n    const exportName = studyTitle + \"_\" + myDateString;\n    if (Object.keys(localStoredQsorts).length > 0) {\n      downloadObjectAsJson(localStoredQsorts, exportName);\n    }\n    setHasDownloadedQsorts(true);\n  };\n\n  return (\n    <>\n      <Container>\n        <LocalDeleteModal />\n        <LocalSaveBeforeDeleteModal />\n        <div>\n          <h2>{loginHeaderText}</h2>\n          <StyledHr />\n        </div>\n\n        <div>\n          <h3>{loginPartIdText}</h3>\n          <StyledInputDiv>\n            <StyledInput tabindex=\"0\" onChange={handleInput} type=\"text\" />\n            {displayPartIdWarning1 && (\n              <WarningText>{partIdWarning}</WarningText>\n            )}\n          </StyledInputDiv>\n        </div>\n        <div>\n          {\" \"}\n          <h3>{usercodeText}</h3>\n          <StyledInputDiv>\n            <StyledInput\n              tabindex=\"1\"\n              onChange={handleUsercodeInput}\n              type=\"text\"\n            />\n            {displayPartIdWarning2 && (\n              <WarningText>{partIdWarning}</WarningText>\n            )}\n          </StyledInputDiv>\n        </div>\n        <LocalStartButton tabindex=\"3\" to={`/presort`} />\n      </Container>\n      <Container2>\n        <StoredHeader>\n          <div>{headerText}</div>\n        </StoredHeader>\n        <ButtonContainer>\n          <LocalDeleteButton onClick={handleDeleteLocal}>\n            Delete\n          </LocalDeleteButton>\n          <LocalSortsDownloadButton onClick={handleDownloadLocal}>\n            Download\n          </LocalSortsDownloadButton>\n        </ButtonContainer>\n      </Container2>\n    </>\n  );\n};\n\nexport default LogInScreen;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr 1fr 1fr;\n  margin-top: 10px;\n  width: 70vw;\n  padding: 1.5vw;\n  min-height: 350px;\n  margin-bottom: 0px;\n  border: 2px solid black;\n  border-top-right-radius: 10px;\n  border-top-left-radius: 10px;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst Container2 = styled.div`\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  margin-top: 0px;\n  width: 70vw;\n  padding: 1.5vw;\n  min-height: 100px;\n  margin-bottom: 100px;\n  border-right: 2px solid black;\n  border-left: 2px solid black;\n  border-bottom: 2px solid black;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  justify-self: center;\n  background-color: whitesmoke;\n`;\n\nconst StyledHr = styled.hr`\n  margin-top: 5px;\n  margin-bottom: 30px;\n`;\n\nconst StyledInput = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 30px;\n  font-size: 1.4em;\n  padding-left: 5px;\n`;\n\nconst StyledInputDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst WarningText = styled.div`\n  color: red;\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-left: 10px;\n`;\n\nconst StoredHeader = styled.div`\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n","import React, { useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport LandingModal from \"../landing/LandingModal\";\nimport LogInScreen from \"./LogInScreen\";\nimport PartIdScreen from \"./PartIdScreen\";\nimport AccessCodeScreen from \"./AccessCodeScreen\";\nimport checkForIeBrowser from \"./checkForIeBrowser\";\nimport InternetExplorerWarning from \"./InternetExplorerWarning\";\nimport parseParams from \"./parseParams\";\nimport LocalStart from \"./LocalStart\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDataLoaded = (state) => state.dataLoaded;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getSetProgressScore = (state) => state.setProgressScore;\nconst getSetUrlUsercode = (state) => state.setUrlUsercode;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getDisplayLandingContent = (state) => state.displayLandingContent;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getSetCardFontSize = (state) => state.setCardFontSize;\nconst getMapObject = (state) => state.mapObj;\nconst getSetPostsortCommentCheckObj = (state) =>\n  state.setPostsortCommentCheckObj;\n\nconst LandingPage = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObject);\n  const dataLoaded = useStore(getDataLoaded);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const setProgressScore = useStore(getSetProgressScore);\n  const setUrlUsercode = useStore(getSetUrlUsercode);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  let displayLandingContent = useStore(getDisplayLandingContent);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const setCardFontSize = useStore(getSetCardFontSize);\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\n\n  const headerBarColor = configObj.headerBarColor;\n  const landingHead = ReactHtmlParser(decodeHTML(langObj.landingHead));\n  const welcomeTextHtml = ReactHtmlParser(decodeHTML(langObj.welcomeText));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setProgressScore(10);\n      setCurrentPage(\"landing\");\n    }, 100);\n  }, [setProgressScore, setCurrentPage]);\n\n  useEffect(() => {\n    // display \"Next\" button if anonymous log in\n    if (configObj.initialScreen === \"anonymous\") {\n      setDisplayNextButton(true);\n    }\n\n    // set FONT SIZE estimate\n    /*\n    let fontSizeEstimate =\n      5 + Math.ceil(10 * (9 / mapObj.qSortHeaderNumbers.length));\n\n    setCardFontSize(fontSizeEstimate);\n    */\n\n    if (\n      configObj.setDefaultFontSize === \"true\" ||\n      configObj.setDefaultFontSize === true\n    ) {\n      setCardFontSize(configObj.defaultFontSize);\n    }\n\n    // set participant Id if set in URL\n    let urlString = parseParams(window.location.href);\n    // if nothing in URL, check local storage\n    if (urlString === undefined || urlString === null) {\n      let urlName = localStorage.getItem(\"urlUsercode\");\n      // if nothing in local storage, set to \"not_set\"\n      if (\n        urlName === null ||\n        urlName === undefined ||\n        urlName === \"undefined\"\n      ) {\n        console.log(\"no url usercode in storage\");\n        setUrlUsercode(\"not_set\");\n        localStorage.setItem(\"urlUsercode\", \"not_set\");\n      } else {\n        // if something in local storage, set state\n        console.log(\"URL usercode from storage: \", urlName);\n        if (urlName === \"not_set\") {\n          setUrlUsercode(\"not_set\");\n        } else {\n          setUrlUsercode(`${urlName} (stored)`);\n        }\n      }\n    } else {\n      // if something in URL, set it in state\n      let codeName = urlString;\n      codeName = codeName.replace(/\\/|#/g, \"\");\n      console.log(\"URL usercode: \", codeName);\n      setUrlUsercode(codeName);\n      localStorage.setItem(\"urlUsercode\", codeName);\n    }\n  }, [\n    setUrlUsercode,\n    configObj.initialScreen,\n    configObj.setDefaultFontSize,\n    configObj.defaultFontSize,\n    setCardFontSize,\n    setDisplayNextButton,\n    mapObj,\n  ]);\n\n  // setup postsort comments object\n  useEffect(() => {\n    let objectKeys = Object.keys(mapObj.qSortPattern);\n    let mostPos = Math.max(...objectKeys);\n    let mostNeg = Math.min(...objectKeys);\n    let MostPos2 = mostPos - 1;\n    let MostNeg2 = mostNeg + 1;\n    let highVal = mapObj.qSortPattern[mostPos];\n    let highVal2 = mapObj.qSortPattern[MostPos2];\n    let lowVal = mapObj.qSortPattern[mostNeg];\n    let lowVal2 = mapObj.qSortPattern[MostNeg2];\n    let showSecondMostPos = configObj.showSecondPosColumn;\n    let showSecondMostNeg = configObj.showSecondNegColumn;\n    const postsortCommentCheckObj = {};\n    for (let i = 0; i < highVal; i++) {\n      let key = `hc-${i}`;\n      postsortCommentCheckObj[key] = false;\n    }\n    for (let j = 0; j < lowVal; j++) {\n      let key = `lc-${j}`;\n      postsortCommentCheckObj[key] = false;\n    }\n    if (showSecondMostPos === \"true\" || showSecondMostPos === true) {\n      for (let k = 0; k < highVal2; k++) {\n        let key = `hc2-${k}`;\n        postsortCommentCheckObj[key] = false;\n      }\n    }\n    if (showSecondMostNeg === \"true\" || showSecondMostNeg === true) {\n      for (let l = 0; l < lowVal2; l++) {\n        let key = `lc2-${l}`;\n        postsortCommentCheckObj[key] = false;\n      }\n    }\n    setPostsortCommentCheckObj(postsortCommentCheckObj);\n  }, [mapObj, configObj, setPostsortCommentCheckObj]);\n\n  // calc time on page\n  useEffect(() => {\n    const startTime = Date.now();\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"landingPage\",\n        \"landingPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [setResults, results]);\n\n  // check for complete\n  let displayLogInScreen = false;\n  let displayPartIdScreen = false;\n  let displayAccessCodeScreen = false;\n\n  if (configObj.setupTarget === \"local\") {\n    return (\n      <>\n        {dataLoaded && (\n          <ContainerDiv>\n            <LocalStart />\n          </ContainerDiv>\n        )}\n      </>\n    );\n  } else {\n    // determine access mode\n    const initialScreenSetting = configObj.initialScreen;\n    if (initialScreenSetting === \"anonymous\") {\n      displayLandingContent = true;\n    }\n    if (\n      initialScreenSetting === \"partId-access\" &&\n      displayLandingContent === false\n    ) {\n      displayLogInScreen = true;\n    }\n    if (initialScreenSetting === \"partId\" && displayLandingContent === false) {\n      displayPartIdScreen = true;\n    }\n    if (initialScreenSetting === \"access\" && displayLandingContent === false) {\n      displayAccessCodeScreen = true;\n    }\n\n    // if isIE, hide all content except warning.\n    let isIeBrowser = checkForIeBrowser();\n    if (isIeBrowser) {\n      displayLandingContent = false;\n      displayLogInScreen = false;\n      displayAccessCodeScreen = false;\n      displayPartIdScreen = false;\n    }\n\n    return (\n      <React.Fragment>\n        {dataLoaded && (\n          <React.Fragment>\n            <SortTitleBar background={headerBarColor}>\n              {landingHead}\n            </SortTitleBar>\n            <LandingModal />\n            <ContainerDiv>\n              {isIeBrowser && <InternetExplorerWarning />}\n              {displayLogInScreen && <LogInScreen />}\n              {displayPartIdScreen && <PartIdScreen />}\n              {displayAccessCodeScreen && <AccessCodeScreen />}\n              {displayLandingContent && (\n                <ContentDiv>\n                  <div>{welcomeTextHtml}</div>\n                </ContentDiv>\n              )}\n            </ContainerDiv>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n};\n\nexport default LandingPage;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 70px;\n  padding-top: 50px;\n  transition: 0.3s ease all;\n  margin-top: 50px;\n\n  img {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n  iframe {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  width: 75vw;\n  font-size: 1.25em;\n  visibility: ${(props) => (props.view ? \"hidden\" : \"visible\")};\n  animation: ${(props) => (props.view ? fadeOut : fadeIn)} 0.5s linear;\n  transition: visibility 0.5s linear;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 8px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  top: 0;\n`;\n","const sanitizeString = (string) => {\n  try {\n    let shouldDoReplace = string.includes(\"<\");\n    let shouldDoReplace2 = string.includes(\">\");\n\n    if (shouldDoReplace === true || shouldDoReplace2 === true) {\n      const replaceLeft = /</gi;\n      const replaceRight = />/gi;\n      const stringText2 = string.replace(replaceLeft, \"&lt\");\n      const stringText3 = stringText2.replace(replaceRight, \"&gt\");\n      return stringText3;\n    } else {\n      return string;\n    }\n  } catch (error) {\n    console.log(\"There was an error sanitizing User Input\");\n    console.error(error);\n  }\n};\n\nexport default sanitizeString;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n/* eslint react/prop-types: 0 */\n\n// LowCards example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\nconst getSetPostsortCommentCheckObj = (state) =>\n  state.setPostsortCommentCheckObj;\nconst getConfigObj = (state) => state.configObj;\nconst getShowPostsortCommentHighlighting = (state) =>\n  state.showPostsortCommentHighlighting;\n\nconst LowCards = (props) => {\n  const [commentCheckObj, setCommentCheckObj] = useState({});\n\n  // STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const showPostsortCommentHighlighting = useStore(\n    getShowPostsortCommentHighlighting\n  );\n\n  useEffect(() => {\n    setCommentCheckObj(postsortCommentCheckObj);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setCommentCheckObj]);\n\n  // on change, get text and add comment to card object\n  const onChange = (event, columnDisplay, itemId) => {\n    let commentLength = event.target.value.length;\n    if (commentLength > 0) {\n      postsortCommentCheckObj[`lc-${itemId}`] = true;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    } else {\n      postsortCommentCheckObj[`lc-${itemId}`] = false;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    }\n    const results = resultsPostsort;\n    const cards = [...columnStatements.vCols[columnDisplay]];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        const comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n\n    setResultsPostsort(results);\n  }; // end onBlur\n\n  const { height, width, cardFontSize, disagreeObj, lowCards } = props;\n  const { disagreeText, placeholder, columnDisplay } = disagreeObj;\n\n  return lowCards.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n    item.indexVal = index;\n    let highlighting = true;\n    if (\n      configObj.postsortCommentsRequired === \"true\" ||\n      configObj.postsortCommentsRequired === true\n    ) {\n      if (showPostsortCommentHighlighting === true) {\n        highlighting = commentCheckObj[`lc-${index}`];\n      }\n    }\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{disagreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card cardFontSize={cardFontSize} width={width} height={height}>\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              bgColor={highlighting}\n              border={highlighting}\n              data-gramm_editor=\"false\"\n              height={height}\n              cardFontSize={cardFontSize}\n              id={item.id}\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onChange={(e) => {\n                onChange(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default LowCards;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: lightpink;\n  color: black;\n  text-align: center;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  margin-top: 2px;\n  background-color: ${(props) => (props.bgColor ? \"whitesmoke\" : \"#fde047\")};\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid black;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n/* eslint react/prop-types: 0 */\n\n// LowCards example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\nconst getSetPostsortCommentCheckObj = (state) =>\n  state.setPostsortCommentCheckObj;\nconst getConfigObj = (state) => state.configObj;\nconst getShowPostsortCommentHighlighting = (state) =>\n  state.showPostsortCommentHighlighting;\n\nconst LowCards2 = (props) => {\n  const [commentCheckObj, setCommentCheckObj] = useState({});\n\n  //STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const showPostsortCommentHighlighting = useStore(\n    getShowPostsortCommentHighlighting\n  );\n\n  useEffect(() => {\n    setCommentCheckObj(postsortCommentCheckObj);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setCommentCheckObj]);\n\n  // on blur, get text and add comment to card object\n  const onChange = (event, columnDisplay, itemId) => {\n    let commentLength = event.target.value.length;\n    if (commentLength > 0) {\n      postsortCommentCheckObj[`lc2-${itemId}`] = true;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    } else {\n      postsortCommentCheckObj[`lc2-${itemId}`] = false;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    }\n    const results = resultsPostsort;\n    const cards = [...columnStatements.vCols[columnDisplay]];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        const comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n\n    setResultsPostsort(results);\n  }; // end onBlur\n\n  const { height, width, cardFontSize, lowCards2, disagreeObj } = props;\n  const { disagreeText, placeholder } = disagreeObj;\n\n  const columnDisplay = disagreeObj.columnDisplay2;\n\n  return lowCards2.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n    item.indexVal = index;\n    let highlighting = true;\n    if (\n      configObj.postsortCommentsRequired === \"true\" ||\n      configObj.postsortCommentsRequired === true\n    ) {\n      if (showPostsortCommentHighlighting === true) {\n        highlighting = commentCheckObj[`lc2-${index}`];\n      }\n    }\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{disagreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card cardFontSize={cardFontSize} width={width} height={height}>\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              bgColor={highlighting}\n              border={highlighting}\n              data-gramm_editor=\"false\"\n              id={item.id}\n              height={height}\n              cardFontSize={cardFontSize}\n              className=\"commentTextArea\"\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onChange={(e) => {\n                onChange(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default LowCards2;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: lightpink;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  color: black;\n  text-align: center;\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  background-color: ${(props) => (props.bgColor ? \"whitesmoke\" : \"#fde047\")};\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid black;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n/* eslint react/prop-types: 0 */\n\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\nconst getSetPostsortCommentCheckObj = (state) =>\n  state.setPostsortCommentCheckObj;\nconst getConfigObj = (state) => state.configObj;\nconst getShowPostsortCommentHighlighting = (state) =>\n  state.showPostsortCommentHighlighting;\n\nconst HighCards = (props) => {\n  const [commentCheckObj, setCommentCheckObj] = useState({});\n\n  // STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const showPostsortCommentHighlighting = useStore(\n    getShowPostsortCommentHighlighting\n  );\n\n  useEffect(() => {\n    setCommentCheckObj(postsortCommentCheckObj);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setCommentCheckObj]);\n\n  const handleChange = (event, columnDisplay, itemId) => {\n    let commentLength = event.target.value.length;\n    if (commentLength > 0) {\n      postsortCommentCheckObj[`hc-${itemId}`] = true;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    } else {\n      postsortCommentCheckObj[`hc-${itemId}`] = false;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    }\n    const results = resultsPostsort;\n    const cards = columnStatements.vCols[columnDisplay];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        let comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n    setResultsPostsort(results);\n  };\n\n  const { agreeObj, cardFontSize, width, height } = props;\n\n  const highCards = columnStatements.vCols[agreeObj.columnDisplay];\n\n  const { agreeText, placeholder } = agreeObj;\n\n  let columnDisplay = agreeObj.columnDisplay;\n  return highCards.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n    let highlighting = true;\n    if (\n      configObj.postsortCommentsRequired === \"true\" ||\n      configObj.postsortCommentsRequired === true\n    ) {\n      if (showPostsortCommentHighlighting === true) {\n        highlighting = commentCheckObj[`hc-${index}`];\n      }\n    }\n\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{agreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card\n            cardFontSize={cardFontSize}\n            width={width}\n            height={height}\n            cardColor={item.cardColor}\n          >\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              bgColor={highlighting}\n              border={highlighting}\n              data-gramm_editor=\"false\"\n              cardFontSize={cardFontSize}\n              height={height}\n              id={item.id}\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onChange={(e) => {\n                handleChange(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default HighCards;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #c7f6c7;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  color: black;\n  text-align: center;\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  margin-top: 2px;\n  background-color: ${(props) => (props.bgColor ? \"whitesmoke\" : \"#fde047\")};\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid darkslategray;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n/* eslint react/prop-types: 0 */\n\n// format example ===> {high: [\"column4\"], middle: [\"column0\"], low: [\"columnN4\"]}\n\nconst getColumnStatements = (state) => state.columnStatements;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getSetResultsPostsort = (state) => state.setResultsPostsort;\nconst getStatementCommentsObj = (state) => state.statementCommentsObj;\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\nconst getSetPostsortCommentCheckObj = (state) =>\n  state.setPostsortCommentCheckObj;\nconst getConfigObj = (state) => state.configObj;\nconst getShowPostsortCommentHighlighting = (state) =>\n  state.showPostsortCommentHighlighting;\n\nconst HighCards2 = (props) => {\n  const [commentCheckObj, setCommentCheckObj] = useState({});\n\n  // STATE\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const setResultsPostsort = useStore(getSetResultsPostsort);\n  const statementCommentsObj = useStore(getStatementCommentsObj);\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\n  const setPostsortCommentCheckObj = useStore(getSetPostsortCommentCheckObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const showPostsortCommentHighlighting = useStore(\n    getShowPostsortCommentHighlighting\n  );\n\n  useEffect(() => {\n    setCommentCheckObj(postsortCommentCheckObj);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setCommentCheckObj]);\n\n  // on leaving card comment section,\n  const onChange = (event, columnDisplay, itemId) => {\n    let commentLength = event.target.value.length;\n    if (commentLength > 0) {\n      postsortCommentCheckObj[`hc2-${itemId}`] = true;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    } else {\n      postsortCommentCheckObj[`hc2-${itemId}`] = false;\n      setPostsortCommentCheckObj(postsortCommentCheckObj);\n      setCommentCheckObj({ ...postsortCommentCheckObj });\n    }\n    const results = resultsPostsort;\n    const cards = columnStatements.vCols[columnDisplay];\n    const targetCard = event.target.id;\n    const userEnteredText = event.target.value;\n\n    const identifier = `${columnDisplay}_${itemId + 1}`;\n\n    // to update just the card that changed\n    cards.map((el) => {\n      if (el.id === targetCard) {\n        const comment3 = userEnteredText;\n        // remove new line and commas to make csv export easier\n        const comment2 = comment3.replace(/\\n/g, \" \");\n        const comment = comment2.replace(/,/g, \" \");\n        // assign to main data object for confirmation / debugging\n        el.comment = sanitizeString(comment);\n\n        // assign to comments object\n        statementCommentsObj[identifier] = `(${el.id}) ${comment}`;\n        results[identifier] = `(${el.id}) ${comment}`;\n      }\n      return el;\n    });\n\n    setResultsPostsort(results);\n  }; // end onBlur\n\n  const { height, width, agreeObj, highCards2, cardFontSize } = props;\n\n  const { agreeText, placeholder } = agreeObj;\n\n  const columnDisplay = agreeObj.columnDisplay2;\n\n  return highCards2.map((item, index) => {\n    const statementHtml = ReactHtmlParser(\n      `<div>${decodeHTML(item.statement)}</div>`\n    );\n    let highlighting = true;\n    if (\n      configObj.postsortCommentsRequired === \"true\" ||\n      configObj.postsortCommentsRequired === true\n    ) {\n      if (showPostsortCommentHighlighting === true) {\n        highlighting = commentCheckObj[`hc2-${index}`];\n      }\n    }\n\n    return (\n      <Container key={item.statement}>\n        <CardTag cardFontSize={cardFontSize}>{agreeText}</CardTag>\n        <CardAndTextHolder>\n          <Card cardFontSize={cardFontSize} width={width} height={height}>\n            {statementHtml}\n          </Card>\n          <TagContainerDiv>\n            <CommentArea\n              bgColor={highlighting}\n              border={highlighting}\n              data-gramm_editor=\"false\"\n              height={height}\n              cardFontSize={cardFontSize}\n              id={item.id}\n              placeholder={placeholder}\n              defaultValue={item.comment}\n              onChange={(e) => {\n                onChange(e, columnDisplay, index);\n              }}\n            />\n          </TagContainerDiv>\n        </CardAndTextHolder>\n      </Container>\n    );\n  });\n};\n\nexport default HighCards2;\n\nconst Container = styled.div`\n  width: 90vw;\n  max-width: 900px;\n  margin-top: 50px;\n  border-radius: 3px;\n  border: 1px solid darkgray;\n`;\n\nconst CardTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #c7f6c7;\n  color: black;\n  text-align: center;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  height: 1.5em;\n`;\n\nconst CardAndTextHolder = styled.div`\n  display: flex;\n  align-content: center;\n  background: rgb(224, 224, 224);\n  width: 90vw;\n  max-width: 898px;\n`;\n\nconst CommentArea = styled.textarea`\n  padding: 10px;\n  margin-top: 2px;\n  background-color: ${(props) => (props.bgColor ? \"whitesmoke\" : \"#fde047\")};\n  height: ${(props) => `${props.height}px;`};\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  width: calc(100% - 6px);\n  border: 2px solid darkgray;\n  border-radius: 3px;\n  outline: ${(props) => (props.border ? \"none\" : \"dashed 3px black\")};\n`;\n\nconst TagContainerDiv = styled.div`\n  padding-top: 3px;\n  width: 100%;\n`;\n\nconst Card = styled.div`\n  user-select: \"none\";\n  padding: 0 2px 0 2px;\n  margin: 5px 5px 5px 5px;\n  line-height: 1em;\n  height: ${(props) => `${props.height}px;`};\n  width: 20vw;\n  max-width: ${(props) => `${props.width}px;`};\n  border-radius: 5px;\n  font-size: ${(props) => `${props.cardFontSize}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid black;\n  background-color: #f6f6f6;\n  text-align: center;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerPostsortModal = (state) => state.triggerPostsortModal;\nconst getSetTriggerPostsortModal = (state) => state.setTriggerPostsortModal;\n\nconst PostsortHelpModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerPostsortModal = useStore(getTriggerPostsortModal);\n  const setTriggerPostsortModal = useStore(getSetTriggerPostsortModal);\n\n  const postsortHelpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.postsortModalHead)\n  );\n  const postsortHelpModalText = ReactHtmlParser(\n    decodeHTML(langObj.postsortModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerPostsortModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerPostsortModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{postsortHelpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{postsortHelpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PostsortHelpModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React, { useEffect } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nconst PromptUnload = () => {\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", alertUser);\n    return () => {\n      window.removeEventListener(\"beforeunload\", alertUser);\n    };\n  }, []);\n\n  const alertUser = (e) => {\n    // e.preventDefault();\n    // e.returnValue = \"\";\n    var message = \"o/\";\n\n    (e || window.event).returnValue = message; //Gecko + IE\n    return message;\n  };\n\n  return (\n    <React.Fragment>\n      <Prompt\n        when={false}\n        message={() => \"Are you sure you want to leave this page?\"}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PromptUnload;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerPostsortPreventNavModal;\nconst getSetTrigPostPrevNavModal = (state) =>\n  state.setTriggerPostsortPreventNavModal;\n\nconst PostsortPreventNavModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n\n  const setTriggerPostsortPreventNavModal = useStore(\n    getSetTrigPostPrevNavModal\n  );\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.postsortPreventNavModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.postsortPreventNavModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerPostsortPreventNavModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PostsortPreventNavModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React, { useEffect } from \"react\";\nimport LowCards from \"./LowCards\";\nimport LowCards2 from \"./LowCards2\";\nimport HighCards from \"./HighCards\";\nimport HighCards2 from \"./HighCards2\";\nimport styled from \"styled-components\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport PostsortHelpModal from \"./PostsortHelpModal\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport PromptUnload from \"../../utilities/PromptUnload\";\nimport PostsortPreventNavModal from \"./PostsortPreventNavModal\";\n\n/* eslint react/prop-types: 0 */\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getMapObj = (state) => state.mapObj;\nconst getSetProgressScore = (state) => state.setProgressScore;\nconst getColumnStatements = (state) => state.columnStatements;\nconst getCardHeight = (state) => state.cardHeight;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\n\nconst PostSort = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObj);\n  const setProgressScore = useStore(getSetProgressScore);\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const cardHeight = useStore(getCardHeight);\n  const cardFontSize = useStore(getCardFontSize);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n\n  // console.log(\"conf: \", JSON.stringify(configObj, null, 2));\n  //  console.log(\"map: \", JSON.stringify(mapObj, null, 2));\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  const headerBarColor = configObj.headerBarColor;\n  const postsortInstructions = ReactHtmlParser(\n    decodeHTML(langObj.postsortInstructions)\n  );\n\n  useEffect(() => {\n    let startTime;\n    startTime = Date.now();\n    setCurrentPage(\"postsort\");\n    setProgressScore(50);\n\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"postsortPage\",\n        \"postsortPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [setCurrentPage, setProgressScore, results, setResults]);\n\n  // pull data from localStorage\n  const columnWidth = 250;\n\n  const titleText = ReactHtmlParser(decodeHTML(langObj.postsortHeader));\n  const agree = ReactHtmlParser(decodeHTML(langObj.postsortAgreement));\n  const disagree = ReactHtmlParser(decodeHTML(langObj.postsortDisagreement));\n  // const neutral = ReactHtmlParser(decodeHTML(langObj.postsortNeutral));\n  const placeholder = langObj.placeholder;\n\n  const keys = Object.keys(mapObj.postsortConvertObj);\n  const agreeColDisp1 = keys.pop();\n  const agreeColDisp2 = keys.pop();\n  const disagreeColDisp1 = keys.shift();\n  const disagreeColDisp2 = keys.shift();\n\n  const postsortAgreeColDisp1 = agreeColDisp1;\n  const postsortAgreeColDisp2 = agreeColDisp2;\n  const showSecondPosColumn = configObj.showSecondPosColumn;\n  const postsortDisagreeColDisp1 = disagreeColDisp1;\n  const postsortDisagreeColDisp2 = disagreeColDisp2;\n  const showSecondNegColumn = configObj.showSecondNegColumn;\n\n  const agreeObj = {};\n  agreeObj.agreeText = agree;\n  agreeObj.columnDisplay = [postsortAgreeColDisp1];\n  agreeObj.columnDisplay2 = [postsortAgreeColDisp2];\n  agreeObj.displaySecondColumn = showSecondPosColumn;\n  agreeObj.placeholder = placeholder;\n\n  const disagreeObj = {};\n  disagreeObj.disagreeText = disagree;\n  disagreeObj.columnDisplay = [postsortDisagreeColDisp1];\n  disagreeObj.columnDisplay2 = [postsortDisagreeColDisp2];\n  disagreeObj.displaySecondColumn = showSecondNegColumn;\n  disagreeObj.placeholder = placeholder;\n\n  const highCards = columnStatements?.vCols[agreeObj.columnDisplay];\n  const highCards2 = columnStatements?.vCols[agreeObj.columnDisplay2];\n  // const neutralCards = columnStatements.vCols[neutralObj.columnDisplay];\n  const lowCards = columnStatements?.vCols[disagreeObj.columnDisplay];\n  const lowCards2 = columnStatements?.vCols[disagreeObj.columnDisplay2];\n\n  return (\n    <div>\n      <PromptUnload />\n      <PostsortHelpModal />\n      <PostsortPreventNavModal />\n      <SortTitleBar background={headerBarColor}>{titleText}</SortTitleBar>\n      <CardsContainer>\n        <PostsortInstructions>{postsortInstructions}</PostsortInstructions>\n        <HighCards\n          agreeObj={agreeObj}\n          height={cardHeight}\n          cardFontSize={cardFontSize}\n          width={columnWidth}\n          highCards={highCards}\n        />\n\n        {agreeObj.displaySecondColumn && (\n          <HighCards2\n            agreeObj={agreeObj}\n            height={cardHeight}\n            cardFontSize={cardFontSize}\n            width={columnWidth}\n            highCards2={highCards2}\n          />\n        )}\n        {disagreeObj.displaySecondColumn && (\n          <LowCards2\n            disagreeObj={disagreeObj}\n            height={cardHeight}\n            width={columnWidth}\n            lowCards2={lowCards2}\n            cardFontSize={cardFontSize}\n          />\n        )}\n\n        <LowCards\n          disagreeObj={disagreeObj}\n          height={cardHeight}\n          width={columnWidth}\n          cardFontSize={cardFontSize}\n          lowCards={lowCards}\n        />\n      </CardsContainer>\n    </div>\n  );\n};\n\nexport default PostSort;\n\nconst CardsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 150px;\n  margin-top: 50px;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  top: 0;\n`;\n\nconst PostsortInstructions = styled.div`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  margin-top: 30px;\n  text-align: center;\n  color: black;\n  font-size: 2vh;\n  font-weight: normal;\n  max-width: 1100px;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerPresortModal = (state) => state.triggerPresortModal;\nconst getSetTriggerPresortModal = (state) => state.setTriggerPresortModal;\n\nconst PresortModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerPresortModal = useStore(getTriggerPresortModal);\n  const setTriggerPresortModal = useStore(getSetTriggerPresortModal);\n\n  const onCloseModal = () => {\n    setTriggerPresortModal(false);\n  };\n\n  const header = ReactHtmlParser(decodeHTML(langObj.presortModalHead));\n  const modalText = ReactHtmlParser(decodeHTML(langObj.presortModalText));\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerPresortModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{header}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getStatementsObj = (state) => state.statementsObj;\nconst getColumnStatements = (state) => state.columnStatements;\nconst getPreSortedStateNumInit = (state) =>\n  state.presortSortedStatementsNumInitial;\nconst getSetColumnStatements = (state) => state.setColumnStatements;\nconst getSetPresortFinished = (state) => state.setPresortFinished;\nconst getSetTrigPresortFinModal = (state) =>\n  state.setTriggerPresortFinishedModal;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetProgressScoreAdditional = (state) =>\n  state.setProgressScoreAdditional;\n\nfunction PresortDND(props) {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const statementsObj = useSettingsStore(getStatementsObj);\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const presortSortedStatementsNumInitial = useStore(getPreSortedStateNumInit);\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\n  const setPresortFinished = useStore(getSetPresortFinished);\n  const setTriggerPresortFinishedModal = useStore(getSetTrigPresortFinModal);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const setProgressScoreAdditional = useStore(getSetProgressScoreAdditional);\n\n  const statementsName = ReactHtmlParser(decodeHTML(langObj.presortStatements));\n  const btnDisagreement = ReactHtmlParser(\n    decodeHTML(langObj.presortDisagreement)\n  );\n  const btnAgreement = ReactHtmlParser(decodeHTML(langObj.presortAgreement));\n  const btnNeutral = ReactHtmlParser(decodeHTML(langObj.presortNeutral));\n\n  // initialize local state\n  let [presortSortedStatementsNum, setPresortSortedStatementsNum] = useState(\n    presortSortedStatementsNumInitial\n  );\n\n  const itemsFromBackend = props.statements;\n  const cardFontSize = `${props.cardFontSize}px`;\n  let defaultFontColor = configObj.defaultFontColor;\n\n  const cardHeight = 210;\n\n  const [columns, setColumns] = useState({\n    cards: {\n      name: statementsName,\n      items: itemsFromBackend,\n      id: \"cards\",\n    },\n    neg: {\n      name: btnDisagreement,\n      items: [],\n      id: \"neg\",\n    },\n    neutral: {\n      name: btnNeutral,\n      items: [],\n      id: \"neutral\",\n    },\n    pos: {\n      name: btnAgreement,\n      id: \"pos\",\n      items: [],\n    },\n  });\n\n  // default = positive sort direction\n  let pinkArraySortValue = 333,\n    greenArraySortValue = 111;\n  if (configObj.sortDirection === \"negative\") {\n    pinkArraySortValue = 111;\n    greenArraySortValue = 333;\n  }\n\n  const onDragEnd = useCallback(\n    (result, columns, setColumns) => {\n      if (!result.destination || result.destination.droppableId === \"cards\") {\n        return;\n      }\n      const { source, destination } = result;\n\n      // update statement characteristics\n      const statementsArray = [...columnStatements.statementList];\n      const destinationId = result.destination.droppableId;\n      const draggableId = result.draggableId;\n\n      // set METADATA FOR SORTING\n      for (let i = 0; i < statementsArray.length; i++) {\n        if (statementsArray[i].id === draggableId) {\n          if (destinationId === \"neg\") {\n            statementsArray[i].divColor = \"isNegativeStatement\";\n            statementsArray[i].cardColor = \"pinkSortCard\";\n            statementsArray[i].pinkChecked = true;\n            statementsArray[i].yellowChecked = false;\n            statementsArray[i].greenChecked = false;\n            statementsArray[i].sortValue = pinkArraySortValue;\n          }\n          if (destinationId === \"neutral\") {\n            statementsArray[i].divColor = \"isUncertainStatement\";\n            statementsArray[i].cardColor = \"yellowSortCard\";\n            statementsArray[i].pinkChecked = false;\n            statementsArray[i].yellowChecked = true;\n            statementsArray[i].greenChecked = false;\n            statementsArray[i].sortValue = 222;\n          }\n          if (destinationId === \"pos\") {\n            statementsArray[i].divColor = \"isPositiveStatement\";\n            statementsArray[i].cardColor = \"greenSortCard\";\n            statementsArray[i].pinkChecked = false;\n            statementsArray[i].yellowChecked = false;\n            statementsArray[i].greenChecked = true;\n            statementsArray[i].sortValue = greenArraySortValue;\n          }\n        }\n      }\n\n      // set new ordering\n      for (let i = 0; i < statementsArray.length; i++) {\n        statementsArray[i].listIndex = i + 1;\n      }\n\n      // save to memory\n      columnStatements.statementList = [...statementsArray];\n      setColumnStatements(columnStatements);\n\n      // when dropped on different droppable\n      if (source.droppableId !== destination.droppableId) {\n        try {\n          const sourceColumn = columns[source.droppableId];\n          const destColumn = columns[destination.droppableId];\n          const sourceItems = [...sourceColumn.items];\n          const destItems = [...destColumn.items];\n          const [removed] = sourceItems.splice(source.index, 1);\n\n          // change background color\n          if (destColumn.id === \"pos\") {\n            removed.backgroundColor = configObj.greenCardColor;\n          }\n          if (destColumn.id === \"neg\") {\n            removed.backgroundColor = configObj.pinkCardColor;\n          }\n          if (destColumn.id === \"neutral\") {\n            removed.backgroundColor = configObj.yellowCardColor;\n          }\n\n          destItems.splice(destination.index, 0, removed);\n\n          // update columns\n          setColumns({\n            ...columns,\n            [source.droppableId]: {\n              ...sourceColumn,\n              items: sourceItems,\n            },\n            [destination.droppableId]: {\n              ...destColumn,\n              items: destItems,\n            },\n          });\n\n          // calc remaining statements\n          let sortedStatements;\n          if (sourceColumn.id === \"cards\") {\n            sortedStatements =\n              statementsObj.totalStatements - sourceColumn.items.length + 1;\n            setPresortSortedStatementsNum(sortedStatements);\n            const ratio = sortedStatements / statementsObj.totalStatements;\n            const completedPercent = (ratio * 30).toFixed();\n\n            // update Progress Bar State\n            setProgressScoreAdditional(completedPercent);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        try {\n          // MOVING BETWEEN COLUMNS\n          const sourceCol = columns[source.droppableId];\n          const copiedItems = [...sourceCol.items];\n          const [removed] = copiedItems.splice(source.index, 1);\n          copiedItems.splice(destination.index, 0, removed);\n          setColumns({\n            ...columns,\n            [source.droppableId]: {\n              ...sourceCol,\n              items: copiedItems,\n            },\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    [\n      configObj,\n      columnStatements,\n      setColumnStatements,\n      statementsObj,\n      setProgressScoreAdditional,\n    ]\n  ); // END DRAG-END\n\n  useEffect(() => {\n    const handleKeyUp = (event) => {\n      let target;\n      if (event.key === \"1\" || event.key === 1) {\n        target = \"neg\";\n      } else if (event.key === \"2\" || event.key === 2) {\n        target = \"neutral\";\n      } else if (event.key === \"3\" || event.key === 3) {\n        target = \"pos\";\n      } else {\n        return;\n      }\n\n      if (columns.cards.items.length > 0) {\n        let source = columns.cards.items[0].id;\n        const results = {\n          draggableId: source,\n          type: \"DEFAULT\",\n          source: {\n            index: 0,\n            droppableId: \"cards\",\n          },\n          reason: \"DROP\",\n          mode: \"FLUID\",\n          destination: {\n            droppableId: target,\n            index: 0,\n          },\n          combine: null,\n        };\n\n        onDragEnd(results, columns, setColumns);\n      }\n    }; // end keyup\n\n    window.addEventListener(\"keyup\", handleKeyUp);\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\n  }, [onDragEnd, columns]);\n\n  useEffect(() => {\n    let projectResultsObj = results;\n    projectResultsObj.npos = columns.pos.items.length;\n    projectResultsObj.nneu = columns.neutral.items.length;\n    projectResultsObj.nneg = columns.neg.items.length;\n    setResults(projectResultsObj);\n  }, [columns, results, setResults]);\n\n  useEffect(() => {\n    if (columns.cards.items.length === 0) {\n      setPresortFinished(true);\n      setTriggerPresortFinishedModal(true);\n    }\n  }, [\n    columns.cards.items.length,\n    setPresortFinished,\n    setTriggerPresortFinishedModal,\n  ]);\n\n  // RENDER COMPONENT\n\n  return (\n    <PresortGrid>\n      <div id=\"completionRatio\">\n        {presortSortedStatementsNum}/{statementsObj.totalStatements}\n      </div>\n      <DragDropContext\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n              key={columnId}\n              id={`${columnId}Div`}\n            >\n              <ColumnNamesDiv>{column.name}</ColumnNamesDiv>\n              <div style={{ margin: 4 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        id={columnId}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightblue\"\n                            : \"white\",\n                          padding: 4,\n                          width: 300,\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          const statementHtml = ReactHtmlParser(\n                            `<div>${decodeHTML(item.statement)}</div>`\n                          );\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                              className=\"dragObject\"\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <DroppableContainer\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      height: cardHeight,\n                                      overflow: \"hidden\",\n                                      fontSize: cardFontSize,\n                                      filter: snapshot.isDragging\n                                        ? \"brightness(0.85)\"\n                                        : \"brightness(1.00)\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? item.backgroundColor\n                                        : item.backgroundColor,\n                                      color: defaultFontColor,\n                                      ...provided.draggableProps.style,\n                                    }}\n                                  >\n                                    {statementHtml}\n                                  </DroppableContainer>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </PresortGrid>\n  );\n}\n\nexport default PresortDND;\n\nconst ColumnNamesDiv = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  padding-left: 3px;\n  padding-right: 3px;\n`;\n\nconst PresortGrid = styled.div`\n  margin-top: 75px;\n  margin-bottom: 55px;\n  display: grid;\n  height: calc(100vh-75);\n  grid-template-rows: 230px 15px 1fr;\n  grid-template-columns: 1fr 325px 325px 325px 1fr;\n  row-gap: 3px;\n  column-gap: 15px;\n`;\n\nconst DroppableContainer = styled.div`\n  background-color: \"#83cafe\";\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border-radius: 2px;\n  border: 1px solid #a8a8a8;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerPresortPreventNavModal;\nconst getSetTrigPrePrevNavModal = (state) =>\n  state.setTriggerPresortPreventNavModal;\n\nconst PresortPreventNavModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerPresortPreventNavModal = useStore(getSetTrigPrePrevNavModal);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.presortPreventNavModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.presortPreventNavModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerPresortPreventNavModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortPreventNavModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModal = (state) => state.triggerPresortFinishedModal;\nconst getSetTriggerModal = (state) => state.setTriggerPresortFinishedModal;\n\nconst PresortFinishedModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModal = useStore(getTriggerModal);\n  const setTriggerModal = useStore(getSetTriggerModal);\n\n  const loginHelpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.presortFinishedModalHead)\n  );\n  const loginHelpModalText = ReactHtmlParser(\n    decodeHTML(langObj.presortFinishedModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{loginHelpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{loginHelpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortFinishedModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\n\nconst PresortIsComplete = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n\n  const headerBarColor = configObj.headerBarColor;\n  const mainText = ReactHtmlParser(decodeHTML(langObj.stepCompleteMessage));\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText));\n\n  useEffect(() => {\n    setCurrentPage(\"presort\");\n  }, [setCurrentPage]);\n\n  return (\n    <React.Fragment>\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\n      <ContainerDiv>\n        <ContentDiv>{mainText}</ContentDiv>\n      </ContainerDiv>\n    </React.Fragment>\n  );\n};\n\nexport default PresortIsComplete;\n\nconst SortTitleBar = styled.div`\n  width: calc(100vw-4px);\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  min-height: 800px;\n  width: calc(100vw-4px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2em;\n  width: 85vw;\n  font-size: 1.35em;\n  padding: 25px;\n  align-self: center;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\n\nconst PleaseLogInFirst = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n\n  const headerBarColor = configObj.headerBarColor;\n  const mainText = ReactHtmlParser(decodeHTML(langObj.logInFirst));\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText));\n\n  useEffect(() => {\n    setCurrentPage(\"presort\");\n  }, [setCurrentPage]);\n\n  return (\n    <React.Fragment>\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\n      <ContainerDiv>\n        <ContentDiv>{mainText}</ContentDiv>\n      </ContainerDiv>\n    </React.Fragment>\n  );\n};\n\nexport default PleaseLogInFirst;\n\nconst SortTitleBar = styled.div`\n  width: calc(100vw-4px);\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  min-height: 800px;\n  width: calc(100vw-4px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2em;\n  width: 85vw;\n  font-size: 1.35em;\n  padding: 25px;\n  align-self: center;\n`;\n","import React, { useEffect } from \"react\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport PresortModal from \"./PresortModal\";\nimport PresortDND from \"./PresortDND\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport styled from \"styled-components\";\nimport PresortPreventNavModal from \"./PresortPreventNavModal\";\nimport PresortFinishedModal from \"./PresortFinishedModal\";\nimport PresortIsComplete from \"./PresortIsComplete\";\nimport PleaseLogInFirst from \"./PleaseLogInFirst\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport PromptUnload from \"../../utilities/PromptUnload\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getStatementsObj = (state) => state.statementsObj;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getIsLoggedIn = (state) => state.isLoggedIn;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getSetProgressScore = (state) => state.setProgressScore;\nconst getPresortNoReturn = (state) => state.presortNoReturn;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getResetColumnStatements = (state) => state.resetColumnStatements;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getBypassPresort = (state) => state.bypassSort;\nconst getSetCardFontSize = (state) => state.setCardFontSize;\n\nconst PresortPage = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const statementsObj = useSettingsStore(getStatementsObj);\n  let cardFontSize = useStore(getCardFontSize);\n  const isLoggedIn = useSettingsStore(getIsLoggedIn);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const setProgressScore = useStore(getSetProgressScore);\n  const presortNoReturn = useStore(getPresortNoReturn);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const resetColumnStatements = useSettingsStore(getResetColumnStatements);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const bypassPresort = useStore(getBypassPresort);\n  const setCardFontSize = useStore(getSetCardFontSize);\n\n  // set default font size\n  if (\n    (configObj.setDefaultFontSizePresort === true && bypassPresort === false) ||\n    (configObj.setDefaultFontSizePresort === \"true\" && bypassPresort === false)\n  ) {\n    cardFontSize = configObj.defaultFontSizePresort;\n    setCardFontSize(configObj.defaultFontSizePresort);\n  }\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCurrentPage(\"presort\");\n      setProgressScore(20);\n    }, 200);\n  }, [setCurrentPage, setProgressScore]);\n\n  // calc time on page\n  useEffect(() => {\n    let startTime = Date.now();\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"presortPage\",\n        \"presortPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [results, setResults]);\n\n  let columnStatements = statementsObj.columnStatements;\n\n  if (configObj.setupTarget === \"local\") {\n    columnStatements = JSON.parse(JSON.stringify(resetColumnStatements));\n  }\n\n  const headerBarColor = configObj.headerBarColor;\n  const initialScreen = configObj.initialScreen;\n  const statements = cloneDeep(columnStatements.statementList);\n\n  const titleBarText = ReactHtmlParser(decodeHTML(langObj.titleBarText));\n\n  // early return if log-in required and not logged in\n  if (initialScreen !== \"anonymous\") {\n    if (isLoggedIn === false) {\n      return <PleaseLogInFirst />;\n    }\n  }\n  // early return of presort finished message if complete\n  if (presortNoReturn) {\n    return <PresortIsComplete />;\n  }\n\n  return (\n    <React.Fragment>\n      <PromptUnload />\n      <PresortModal />\n      <PresortFinishedModal />\n      <PresortPreventNavModal />\n      <SortTitleBar background={headerBarColor}>{titleBarText}</SortTitleBar>\n      <PresortDND statements={statements} cardFontSize={cardFontSize} />\n    </React.Fragment>\n  );\n};\n\nexport default PresortPage;\n\nconst SortTitleBar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  z-index: 999;\n  top: 0;\n`;\n","import useStore from \"../../globalState/useStore\";\n\nconst checkForColumnOverload = (\n  columnLengthCheckArray,\n  forcedSorts,\n  totalStatements,\n  qSortPattern,\n  qSortHeaderNumbers\n) => {\n  if (forcedSorts === true) {\n    const tempArray = [];\n\n    // iterate through array and check if col length > design length\n    columnLengthCheckArray.forEach(function (item, index) {\n      if (item > +qSortPattern[index]) {\n        tempArray.push(qSortHeaderNumbers[index]);\n        useStore.setState({ sortCompleted: false });\n        useStore.setState({ overloadedColumn: qSortHeaderNumbers[index] });\n        useStore.setState({ hasOverloadedColumn: true });\n        useStore.setState({ isSortingCards: false });\n        return null;\n      }\n    });\n    // if no overload - set overload to no and is sorting to true\n    if (tempArray.length === 0) {\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ isSortingCards: true });\n    }\n  }\n\n  const numSortedStatements = columnLengthCheckArray.reduce(function (\n    acc,\n    val\n  ) {\n    return acc + val;\n  });\n\n  useStore.setState({ numSortedStatements: numSortedStatements });\n\n  if (forcedSorts === false) {\n    if (numSortedStatements === totalStatements) {\n      useStore.setState({ sortCompleted: true });\n      useStore.setState({ isSortingCards: false });\n    } else {\n      useStore.setState({ sortCompleted: false });\n      useStore.setState({ isSortingCards: true });\n    }\n  }\n};\n\nexport default checkForColumnOverload;\n","import isEqual from \"lodash/isEqual\";\nimport checkForColumnOverload from \"./checkForColumnOverload\";\nimport useStore from \"../../globalState/useStore\";\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (\n  sourceListArray,\n  destinationListArray,\n  droppableSource,\n  droppableDestination,\n  columnStatements,\n  totalStatements,\n  sortCharacteristics,\n  allowUnforcedSorts,\n  qSortHeaderNumbers\n) => {\n  const { qSortPattern, qSortHeaders, forcedSorts } = sortCharacteristics;\n\n  const destClone = [...destinationListArray];\n\n  // to splice in and out\n  const [removed] = sourceListArray.splice(droppableSource.index, 1);\n  destinationListArray.splice(droppableDestination.index, 0, removed);\n\n  sourceListArray[droppableSource.droppableId] = [removed];\n  destinationListArray[droppableDestination.droppableId] = [...destClone];\n\n  // to assign to object and register results to state\n  const result = {};\n  result[droppableSource.droppableId] = [...sourceListArray];\n  result[droppableDestination.droppableId] = [...destinationListArray];\n\n  // to save to state and auto update lists\n  useStore.setState({ result: result });\n\n  // for sort complete checking\n  const columnLengthCheckArray = [];\n  for (let i = 0; i < qSortHeaders.length; i++) {\n    const currentColumnLength =\n      columnStatements.vCols[`column${qSortHeaders[i]}`];\n    columnLengthCheckArray.push(currentColumnLength.length);\n  }\n  // sort mutates, so clone\n  const qSortPatternClone = [...qSortPattern];\n  const overloadArrayCheck = [...columnLengthCheckArray];\n  const match = isEqual(columnLengthCheckArray, qSortPatternClone);\n\n  checkForColumnOverload(\n    overloadArrayCheck,\n    forcedSorts,\n    totalStatements,\n    qSortPattern,\n    qSortHeaderNumbers\n  );\n\n  // to disable checking if unforced Q sorts allowed\n  if (allowUnforcedSorts === false) {\n    // if the sort pattern matches default sort pattern\n    if (match === true) {\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ sortCompleted: true });\n      console.log(\"sorting complete\");\n      useStore.setState({ isSortingCards: false });\n      useStore.setState({ isSortingFinished: true });\n    } else {\n      useStore.setState({ hasOverloadedColumn: true });\n      useStore.setState({ sortCompleted: false });\n      useStore.setState({ isSortingCards: true });\n      if (columnStatements.statementList.length === 0) {\n        useStore.setState({ isSortingFinished: true });\n      } else {\n        useStore.setState({ isSortingFinished: false });\n      }\n    }\n  } else {\n    // for unforced sorts - is source array empty?\n    if (sourceListArray.length === 0) {\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ sortCompleted: true });\n      console.log(\"sorting complete\");\n      useStore.setState({ isSortingCards: false });\n      useStore.setState({ isSortingFinished: true });\n    } else {\n      useStore.setState({ sortCompleted: false });\n      useStore.setState({ isSortingCards: true });\n      useStore.setState({ hasOverloadedColumn: false });\n      useStore.setState({ isSortingFinished: false });\n    }\n  }\n  return null;\n};\n\nexport default move;\n","import useStore from \"../../globalState/useStore\";\n\n// to reorder within the same column\nconst reorder = (\n  columnToBeReordered,\n  startIndex,\n  endIndex,\n  columnStatements\n) => {\n  try {\n    // no re-ordering of statements list / it's arranged by flexbox \"order\" css property\n    if (columnToBeReordered === \"statements\") {\n      return;\n    }\n    // let list = state.getState(columnList);\n    const list = columnStatements.vCols[columnToBeReordered];\n    const result = [...list]; // Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    columnStatements.vCols[columnToBeReordered] = [...result];\n\n    useStore.setState({ columnStatements: columnStatements });\n\n    return null;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default reorder;\n","const getItemStyle = (\n  isDragging,\n  draggableStyle,\n  cardWidth,\n  cardHeight,\n  cardFontSize,\n  cardColor,\n  greenCardColor,\n  yellowCardColor,\n  pinkCardColor,\n  fontColor\n) => {\n  let newCardColor;\n  if (cardColor === \"greenSortCard\") {\n    newCardColor = greenCardColor;\n  }\n  if (cardColor === \"yellowSortCard\") {\n    newCardColor = yellowCardColor;\n  }\n  if (cardColor === \"pinkSortCard\") {\n    newCardColor = pinkCardColor;\n  }\n\n  return {\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: `0 2px 0 2px`,\n    margin: `0 2px 8px 3px`,\n    lineHeight: `1.3em`,\n    fontSize: cardFontSize,\n    color: fontColor,\n    height: cardHeight,\n    width: cardWidth,\n    borderRadius: `5px`,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: `1px solid #a8a8a8`,\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\n    zIndex: \"-1\",\n\n    // transitionDelay: \"0.2s\",\n    // change background colour if dragging  (#e6bbad or #FFB266)\n    textAlign: `center`,\n    background: isDragging ? newCardColor : newCardColor,\n\n    // styles we need to apply on draggables\n    ...draggableStyle,\n  };\n};\n\nexport default getItemStyle;\n","import useStore from \"../../globalState/useStore\";\n\n// card and column styling\nconst getListStyle = (\n  isDraggingOver,\n  props,\n  forcedSorts,\n  columnWidth,\n  columnColor,\n  cardHeight\n) => {\n  // forcedSorts is \"warnOverloadedColumn\" in configObj\n  let isUnderMaxCards;\n  if (forcedSorts === true) {\n    isUnderMaxCards = props.columnStatementsArray.length <= props.maxCards;\n  } else {\n    isUnderMaxCards = true;\n  }\n\n  // to set highlighting for column headers\n  if (isDraggingOver) {\n    useStore.setState({ draggingOverColumnId: props.columnId });\n  }\n\n  return {\n    background: isDraggingOver\n      ? \"lightblue\"\n      : isUnderMaxCards\n      ? columnColor\n      : \"orange\",\n    padding: `3px 0.5px 0px 3.5px`,\n\n    minWidth: columnWidth + 13,\n    marginTop: 0,\n    marginRight: 0,\n    minHeight: props.minHeight - 10,\n    borderRadius: `2px`,\n    outline: isUnderMaxCards ? \"1px solid #d8d8d8\" : \"2px dashed black\",\n    outlineOffset: \"-1px\",\n  };\n};\n\nexport default getListStyle;\n\n// border: 'solid 1px #ededed',\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport getItemStyle from \"./getItemStyle\";\nimport getListStyle from \"./getListStyle\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\n/* eslint react/prop-types: 0 */\n\nclass SortColumn extends React.Component {\n  render() {\n    const {\n      forcedSorts,\n      columnWidth,\n      cardHeight,\n      columnId,\n      sortValue,\n      columnStatementsArray,\n      columnColor,\n      cardFontSize,\n      greenCardColor,\n      yellowCardColor,\n      pinkCardColor,\n      fontColor,\n    } = this.props;\n\n    // had to push column sort value to state because didn't want to edit dnd library result object\n    // was't able to just pass it as a prop\n    return (\n      <ContainerDiv id=\"sortColumnsDiv\">\n        <Droppable\n          id=\"ColDroppable\"\n          droppableId={columnId}\n          direction=\"vertical\"\n        >\n          {(provided, snapshot) => {\n            if (snapshot.isDraggingOver) {\n              useStore.setState({ draggingOverColumnId: columnId });\n              useStore.setState({ currentSortValue: sortValue });\n            }\n            return (\n              <div\n                ref={provided.innerRef}\n                style={getListStyle(\n                  snapshot.isDraggingOver,\n                  this.props,\n                  forcedSorts,\n                  columnWidth,\n                  columnColor,\n                  cardHeight\n                )}\n              >\n                {columnStatementsArray.map((item, index) => {\n                  const statementHtml = ReactHtmlParser(\n                    `<div>${decodeHTML(item.statement)}</div>`\n                  );\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      cardColor={item.cardColor}\n                      index={index}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style,\n                            columnWidth,\n                            cardHeight,\n                            cardFontSize,\n                            `${item.cardColor}`,\n                            greenCardColor,\n                            yellowCardColor,\n                            pinkCardColor,\n                            fontColor\n                          )}\n                        >\n                          {statementHtml}\n                        </div>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </ContainerDiv>\n    );\n  }\n}\n\nexport default SortColumn;\n\n/*\nconst HeaderDiv = styled.div`\n  background: ${(props) => props.color};\n  text-align: center;\n  border-bottom: 2px solid black;\n  min-width: 50px;\n  border-radius: 2px;\n  margin-bottom: 1px;\n  font-weight: bold;\n  font-size: 25px;\n  border-right: 1px solid #d8d8d8;\n  border-left: 1px solid #d8d8d8;\n`;\n*/\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","// horizontal column styling\nconst getListStyleHori = (\n  isDraggingOver,\n  horiCardMinHeight,\n  sortDirection\n) => ({\n  background: isDraggingOver ? \"lightblue\" : \"#e4e4e4\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"nowrap\",\n  width: \"100vw\",\n  paddingRight: \"20px\",\n  minHeight: horiCardMinHeight,\n  overflowX: `scroll`,\n  direction: sortDirection,\n  scrollBehavior: `smooth`,\n});\n\nexport default getListStyleHori;\n","// card styling\nconst getItemStyleHori = (\n  isDragging,\n  draggableStyle,\n  sortValue,\n  cardColor,\n  columnWidth,\n  cardHeight,\n  cardFontSize,\n  greenCardColor,\n  yellowCardColor,\n  pinkCardColor,\n  fontColor\n) => {\n  let newSortValue = sortValue;\n  let newCardColor = cardColor;\n\n  // puts un-evaluated cards at the end of the list and set default color\n  if (isNaN(+newSortValue)) {\n    newSortValue = 999;\n  }\n\n  // set background color according to user passed in values\n  if (newCardColor === \"undefined\" || newCardColor === \"yellowSortCard\") {\n    newCardColor = yellowCardColor;\n  }\n  if (newCardColor === \"pinkSortCard\") {\n    newCardColor = pinkCardColor;\n  }\n  if (newCardColor === \"greenSortCard\") {\n    newCardColor = greenCardColor;\n  }\n\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    lineHeight: `1.3em`,\n    fontSize: cardFontSize,\n    color: fontColor,\n    height: cardHeight,\n    minWidth: columnWidth,\n    maxWidth: columnWidth,\n    paddingRight: 2,\n    paddingLeft: 2,\n    borderRadius: `5px`,\n    touchAction: \"manipulation\",\n    marginBottom: 5,\n    marginTop: 5,\n    marginRight: `2px`,\n    marginLeft: `2px`,\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: `center`,\n    order: newSortValue,\n    filter: isDragging ? \"brightness(0.85)\" : \"brightness(1.00)\",\n    // change background color if dragging, otherwise pre-sort value color\n    background: isDragging ? newCardColor : newCardColor,\n    // styles to apply on draggables\n    ...draggableStyle,\n  };\n};\n\nexport default getItemStyleHori;\n","const calculateDragResults = (\n  outcome,\n  totalStatements,\n  results,\n  sortFinishedModalHasBeenShown,\n  sortGridResults\n) => {\n  try {\n    let isSortingFinished = false;\n    let triggerSortingFinishedModal = false;\n\n    if (outcome.destination !== null) {\n      // derive sortValue from droppableId\n      const replaceColumn = /column/gi;\n      const replaceN = /N/gi;\n      let sortValue1 = outcome.destination.droppableId;\n      sortValue1 = sortValue1.replace(replaceColumn, \"\");\n      sortValue1 = sortValue1.replace(replaceN, \"-\");\n      const sortValue = parseInt(sortValue1, 10);\n\n      // assign key (like \"s1\") and value (sortValue like \"-4\")\n      sortGridResults[outcome.draggableId] = sortValue;\n\n      // create results string\n      const testForCompleteArray = Object.keys(sortGridResults);\n      let catchNan = false;\n\n      // test if finished\n      if (testForCompleteArray.length === totalStatements) {\n        let resultsText = \"\";\n        for (let i = 0; i < totalStatements; i++) {\n          let key = `s${i + 1}`;\n          let newValue = sortGridResults[key];\n          if (isNaN(newValue)) {\n            catchNan = true;\n          }\n          resultsText += `${newValue}|`;\n        } // loop end\n\n        if (catchNan === true) {\n          // card in footer - sort not complete\n          isSortingFinished = false;\n        } else {\n          // if sort is complete\n          // process string to remove trailing bar\n          isSortingFinished = true;\n\n          if (resultsText.charAt(resultsText.length - 1) === \"|\") {\n            resultsText = resultsText.substring(0, resultsText.length - 1);\n          }\n\n          console.log(resultsText);\n\n          results.sort = resultsText;\n\n          if (sortFinishedModalHasBeenShown === false) {\n            sortFinishedModalHasBeenShown = true;\n            triggerSortingFinishedModal = true;\n          }\n        }\n      }\n\n      const returnObj = {};\n      returnObj.isSortingFinished = isSortingFinished;\n      returnObj.results = results;\n      returnObj.sortFinishedModalHasBeenShown = sortFinishedModalHasBeenShown;\n      returnObj.triggerSortingFinishedModal = triggerSortingFinishedModal;\n      returnObj.sortGridResults = sortGridResults;\n\n      return returnObj;\n    }\n  } catch (error) {\n    console.error(error);\n    console.log(\"there was an error in calculateDragResults\");\n  }\n};\n\nexport default calculateDragResults;\n","const convertObjectToResults = (columnStatements) => {\n  let columnSortValues = Object.keys(columnStatements.vCols);\n\n  const sortArray = [];\n\n  // old style loops for speed\n  for (let i = 0; i < columnSortValues.length; i++) {\n    let tempArray1 = columnStatements.vCols[columnSortValues[i]];\n\n    // convert column key to column sort value\n    let sortValue1 = columnSortValues[i];\n    const replaceColumn = /column/gi;\n    const replaceN = /N/gi;\n    sortValue1 = sortValue1.replace(replaceColumn, \"\");\n    sortValue1 = sortValue1.replace(replaceN, \"-\");\n    const sortValue = parseInt(sortValue1, 10);\n\n    // push statement sort values into array\n    for (let j = 0; j < tempArray1.length; j++) {\n      let tempObject = {};\n      tempObject.statement = parseInt(tempArray1[j].statementNum, 10);\n      tempObject.sortValue = sortValue;\n      sortArray.push(tempObject);\n    }\n  }\n\n  // sort array by statement\n  sortArray.sort((a, b) => {\n    return a.statement - b.statement;\n  });\n\n  // accumulate text string\n  let resultsText = \"\";\n  for (let k = 0; k < sortArray.length; k++) {\n    resultsText += `${sortArray[k].sortValue}|`;\n  }\n\n  // remove trailing bar\n  if (resultsText.charAt(resultsText.length - 1) === \"|\") {\n    resultsText = resultsText.substring(0, resultsText.length - 1);\n  }\n\n  return resultsText;\n};\n\nexport default convertObjectToResults;\n","import React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport move from \"./move\";\nimport reorder from \"./reorder\";\nimport SortColumn from \"./SortColumn\";\nimport getListStyleHori from \"./getListStyleHori\";\nimport getItemStyleHori from \"./getItemStyleHori\";\nimport calculateDragResults from \"./calculateDragResults\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport convertObjectToResults from \"./convertObjectToResults\";\n\n/* eslint react/prop-types: 0 */\n\nconst getConfigObj = (state) => state.configObj;\nconst getMapObj = (state) => state.mapObj;\nconst getStatementsObj = (state) => state.statementsObj;\nconst getColumnStatements = (state) => state.columnStatements;\nconst getSetColState = (state) => state.setColumnStatements;\nconst getSetIsSortingCards = (state) => state.setIsSortingCards;\nconst getSetSortCompleted = (state) => state.setSortCompleted;\nconst getSetProgScoreAddSort = (state) => state.setProgressScoreAdditionalSort;\nconst getSortCharacteristics = (state) => state.sortCharacteristics;\nconst getSetSortCharacteristics = (state) => state.setSortCharacteristics;\nlet getCardHeight = (state) => state.cardHeight;\nconst getSetCardHeight = (state) => state.setCardHeight;\nconst getSetColumnWidth = (state) => state.setColumnWidth;\nconst getResults = (state) => state.results;\nconst getSortFinModalHasBeenShown = (state) =>\n  state.sortFinishedModalHasBeenShown;\nconst getSortGridResults = (state) => state.sortGridResults;\nconst getSetIsSortingFinished = (state) => state.setIsSortingFinished;\nconst getSetResults = (state) => state.setResults;\nconst getSetSortFinModal = (state) => state.setSortFinishedModalHasBeenShown;\nconst getSetTriggerSortingFinModal = (state) =>\n  state.setTriggerSortingFinishedModal;\nconst getSetSortGridResults = (state) => state.setSortGridResults;\n\nconst SortGrid = (props) => {\n  // STATE\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObj);\n  const statementsObj = useSettingsStore(getStatementsObj);\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const setColumnStatements = useSettingsStore(getSetColState);\n  const setIsSortingCards = useStore(getSetIsSortingCards);\n  const setSortCompleted = useStore(getSetSortCompleted);\n  const setProgressScoreAdditionalSort = useStore(getSetProgScoreAddSort);\n  const sortCharacteristics = useStore(getSortCharacteristics);\n  const setSortCharacteristics = useStore(getSetSortCharacteristics);\n  let cardHeight = useStore(getCardHeight);\n  const setCardHeight = useStore(getSetCardHeight);\n  const setColumnWidth = useStore(getSetColumnWidth);\n  const results = useStore(getResults);\n  const sortFinishedModalHasBeenShown = useStore(getSortFinModalHasBeenShown);\n  const sortGridResults = useStore(getSortGridResults);\n  const setIsSortingFinished = useStore(getSetIsSortingFinished);\n  const setResults = useStore(getSetResults);\n  const setSortFinishedModalHasBeenShown = useStore(getSetSortFinModal);\n  const setTriggerSortingFinishedModal = useStore(getSetTriggerSortingFinModal);\n  const setSortGridResults = useStore(getSetSortGridResults);\n\n  const greenCardColor = configObj.greenCardColor;\n  const yellowCardColor = configObj.yellowCardColor;\n  const pinkCardColor = configObj.pinkCardColor;\n\n  // setMinCardHeight is boolean\n  const setMinCardHeight = configObj.setMinCardHeight;\n  const minCardHeight = +configObj.minCardHeight;\n\n  // MAP out SORT COLUMNS component before render\n  // code inside render so that column lists update automatically\n  const qSortHeaders = [...mapObj.qSortHeaders];\n  const qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\n\n  // column colors\n  const columnColorsArray = [...mapObj.columnColorsArray];\n  const columnHeadersColorsArray = [...mapObj.columnHeadersColorsArray];\n  const qSortPattern = [...mapObj.qSortPattern];\n\n  // force updates after dragend - do not delete\n  const [value, setValue] = useState(0); // integer state\n\n  // get sort direction\n  let sortDirection = \"rtl\";\n  if (configObj.sortDirection === \"negative\") {\n    sortDirection = \"ltr\";\n  }\n\n  // fire move and re-order functions\n  const onDragEnd = (result) => {\n    try {\n      /*\n    example result object:\n    result {\"draggableId\":\"s1\",\"type\":\"DEFAULT\",\n    \"source\":{\"droppableId\":\"statements\",\"index\":0},\n    \"destination\":{\"droppableId\":\"column1\",\"index\":0},\n    \"reason\":\"DROP\"}\n    */\n\n      const totalStatements = statementsObj.totalStatements;\n\n      const manageDragResults = calculateDragResults(\n        { ...result },\n        totalStatements,\n        results,\n        sortFinishedModalHasBeenShown,\n        sortGridResults\n      );\n\n      setIsSortingFinished(manageDragResults.sortFinished);\n      setResults(manageDragResults.results);\n      setSortFinishedModalHasBeenShown(\n        manageDragResults.sortFinishedModalHasBeenShown\n      );\n      setTriggerSortingFinishedModal(\n        manageDragResults.triggerSortingFinishedModal\n      );\n      setSortGridResults(manageDragResults.sortGridResults);\n\n      // source and destination are objects\n      const { source, destination } = result;\n\n      // dropped outside the list\n      if (!destination) {\n        return;\n      }\n      // if moving inside the same column\n      if (source.droppableId === destination.droppableId) {\n        reorder(\n          source.droppableId,\n          source.index,\n          destination.index,\n          columnStatements\n        );\n\n        // force component update\n        const newValue = value + 1;\n        setValue(newValue);\n      } else {\n        // moving to another column\n\n        // source.droppableId give orgin id => \"statements\" or \"columnN1\"\n        // sourceList is cards in that origin\n        // gather data to send to move function\n        let sourceListArray;\n        let destinationListArray;\n        if (source.droppableId === \"statements\") {\n          sourceListArray = columnStatements.statementList;\n        } else {\n          sourceListArray = columnStatements.vCols[source.droppableId];\n        }\n        if (destination.droppableId === \"statements\") {\n          destinationListArray = columnStatements.statementList;\n        } else {\n          destinationListArray =\n            columnStatements.vCols[destination.droppableId];\n        }\n        const droppableSource = source;\n        const droppableDestination = destination;\n        const totalStatements = +configObj.totalStatements;\n\n        const sortCharacterisiticsPrep = {};\n        sortCharacterisiticsPrep.qSortPattern = [...mapObj.qSortPattern];\n        sortCharacterisiticsPrep.qSortHeaders = [...mapObj.qSortHeaders];\n        sortCharacterisiticsPrep.forcedSorts = configObj.warnOverloadedColumn;\n        sortCharacterisiticsPrep.qSortHeaderNumbers = [\n          ...mapObj.qSortHeaderNumbers,\n        ];\n        const sortCharacteristics = sortCharacterisiticsPrep;\n        const allowUnforcedSorts = configObj.allowUnforcedSorts;\n\n        move(\n          sourceListArray,\n          destinationListArray,\n          droppableSource,\n          droppableDestination,\n          columnStatements,\n          totalStatements,\n          sortCharacteristics,\n          allowUnforcedSorts,\n          qSortHeaderNumbers\n        );\n\n        // global state updates\n        setColumnStatements(columnStatements);\n\n        convertObjectToResults(columnStatements);\n\n        if (columnStatements.statementList.length === 0) {\n          setIsSortingCards(false);\n          setSortCompleted(true);\n        } else {\n          setIsSortingCards(true);\n          setSortCompleted(false);\n        }\n\n        // increment Progress Bar\n        const totalStatements2 = statementsObj.totalStatements;\n        const remainingStatements = columnStatements.statementList.length;\n        const numerator = totalStatements2 - remainingStatements;\n\n        const ratio = numerator / totalStatements2;\n        const completedPercent = (ratio * 30).toFixed();\n\n        // update Progress Bar State\n        setProgressScoreAdditionalSort(completedPercent);\n\n        // force component update\n        const newValue = value + 1;\n        setValue(newValue);\n      }\n      setSortCharacteristics(sortCharacteristics);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }; // end of dragEnd helper function\n\n  // get user settings\n  const cardFontSize = props.cardFontSize;\n  const fontColor = props.fontColor;\n\n  // just the hori container size, not card size\n  let horiCardMinHeight = 50;\n\n  // maximize cardHeight on first mount using default 0 in globalState\n  const maxNumCardsInCol = Math.max(...qSortPattern);\n  if (+cardHeight === 0) {\n    cardHeight = +(\n      (props.dimensions.height - 320) /\n      maxNumCardsInCol\n    ).toFixed();\n    if (setMinCardHeight === true || setMinCardHeight === \"true\") {\n      setCardHeight(minCardHeight);\n    } else {\n      setCardHeight(+cardHeight);\n    }\n  }\n\n  // adjust width by q sort design\n  // todo - find better adjustment process\n  let visibleWidthAdjust;\n\n  // less than -3\n  if (qSortPattern.length > 0) {\n    visibleWidthAdjust = 70;\n  }\n  // -3 to +3\n  if (qSortPattern.length > 6) {\n    visibleWidthAdjust = 96;\n  }\n  // -4 to +4\n  if (qSortPattern.length > 8) {\n    visibleWidthAdjust = 120;\n  }\n  // -5 to +5\n  if (qSortPattern.length > 10) {\n    visibleWidthAdjust = 145;\n  }\n  // -6 to +6\n  if (qSortPattern.length > 12) {\n    visibleWidthAdjust = 170;\n  }\n\n  // set dynamic width on page load on reload\n  const columnWidth =\n    (props.dimensions.width - visibleWidthAdjust) / qSortPattern.length;\n\n  // send column width to global state\n  setTimeout(() => setColumnWidth(columnWidth), 0);\n\n  // pull data from localStorage\n  const statements = columnStatements.statementList;\n\n  // setup grid columns\n  const columns = qSortHeaders.map((value, index, highlightedColHeader) => {\n    const columnId = `column${qSortHeaders[index]}`;\n    const sortValue = qSortHeaderNumbers[index];\n    const columnColor = columnColorsArray[index];\n\n    return (\n      <SortColumn\n        key={columnId}\n        minHeight={qSortPattern[index] * (+cardHeight + 8) + 15}\n        maxCards={qSortPattern[index]}\n        columnId={columnId}\n        columnStatementsArray={columnStatements.vCols[columnId]}\n        forcedSorts={configObj.warnOverloadedColumn}\n        columnWidth={columnWidth}\n        cardHeight={+cardHeight}\n        sortValue={sortValue}\n        columnColor={columnColor}\n        cardFontSize={cardFontSize}\n        qSortHeaderNumber={qSortHeaderNumbers[index]}\n        columnHeadersColor={columnHeadersColorsArray[index]}\n        greenCardColor={greenCardColor}\n        yellowCardColor={yellowCardColor}\n        pinkCardColor={pinkCardColor}\n        fontColor={fontColor}\n      />\n    );\n  }); // end map of sort columns\n\n  const InnerList = React.memo((props) => {\n    const items = props.statements.map((item, index) => {\n      const statementHtml = ReactHtmlParser(\n        `<div>${decodeHTML(item.statement)}</div>`\n      );\n      return (\n        <Draggable\n          key={item.id}\n          draggableId={item.id}\n          index={index}\n          sortValue={item.sortValue}\n          cardColor={item.cardColor}\n          className=\"droppableCards\"\n        >\n          {(provided, snapshot) => (\n            <>\n              <div\n                ref={provided.innerRef}\n                className={`${item.cardColor}`}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                style={getItemStyleHori(\n                  snapshot.isDragging,\n                  provided.draggableProps.style,\n                  `${item.sortValue}`,\n                  `${item.cardColor}`,\n                  columnWidth,\n                  cardHeight,\n                  cardFontSize,\n                  greenCardColor,\n                  yellowCardColor,\n                  pinkCardColor,\n                  fontColor\n                )}\n              >\n                <span style={{ direction: \"ltr\" }}>{statementHtml}</span>\n              </div>\n              <div style={{ width: `0px` }}>{provided.placeholder}</div>\n            </>\n          )}\n        </Draggable>\n      );\n    });\n    /*\n    let finalItem = <div key={\"placeholder\"}>{props.provided.placeholder}</div>;\n    items.unshift(finalItem);\n    */\n    return items;\n  });\n\n  // returning main content => horizontal feeder\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"rootDiv\">\n        {columns}\n        <SortFooterDiv id=\"SortFooterDiv\">\n          <CardSlider id=\"CardSlider\">\n            <Droppable\n              id=\"Droppable\"\n              droppableId=\"statements\"\n              direction=\"horizontal\"\n            >\n              {(provided, snapshot) => (\n                <>\n                  {\" \"}\n                  <div\n                    ref={provided.innerRef}\n                    style={getListStyleHori(\n                      snapshot.isDraggingOver,\n                      horiCardMinHeight,\n                      sortDirection\n                    )}\n                  >\n                    <InnerList statements={statements} provided={provided} />\n                  </div>\n                  <div style={{ width: `0px` }}>{provided.placeholder}</div>\n                </>\n              )}\n            </Droppable>\n          </CardSlider>\n        </SortFooterDiv>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default SortGrid;\n\nconst SortFooterDiv = styled.div`\n  background: #e4e4e4;\n  padding-right: 10px;\n  position: fixed;\n  left: 0px;\n  bottom: 50px;\n  width: 100vw;\n  height: ${(props) => `${+props.cardHeight + 20}px;`};\n`;\n\nconst CardSlider = styled.div`\n  display: flex;\n  width: 100vw;\n  overflow: hidden;\n`;\n\n/* DO NOT DELETE - important\n\"columnColorsArray\": [\n      \"#ffb2b2\"\n      \"#ffbfbf\",\n      \"#ffcbcb\",\n      \"#ffd8d8\",\n      \"#ffe5e5\",\n      \"#f5f5f5\",\n      \"#d6f5d6\",\n      \"#c1f0c1\",\n      \"#adebad\",\n      \"#98E698\",\n      \"#84e184\"\n    ],\n*/\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSortModal = (state) => state.triggerSortModal;\nconst getSetTriggerSortModal = (state) => state.setTriggerSortModal;\n\nconst SortHelpModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSortModal = useStore(getTriggerSortModal);\n  const setTriggerSortModal = useStore(getSetTriggerSortModal);\n\n  const helpModalHead = ReactHtmlParser(decodeHTML(langObj.sortHelpModalHead));\n  const helpModalText = ReactHtmlParser(decodeHTML(langObj.sortHelpModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSortModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{helpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{helpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SortHelpModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"./decodeHTML\";\nimport useSettingsStore from \"../globalState/useSettingsStore\";\nimport useStore from \"../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSortFinishedMod = (state) => state.triggerSortingFinishedModal;\nconst getSetTrigSortFinishMod = (state) => state.setTriggerSortingFinishedModal;\n\nconst SortingFinishedModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSortingFinishedModal = useStore(getTriggerSortFinishedMod);\n  const setTriggerSortingFinishedModal = useStore(getSetTrigSortFinishMod);\n\n  const helpModalHead = ReactHtmlParser(\n    decodeHTML(langObj.sortingCompleteModalHead)\n  );\n  const helpModalText = ReactHtmlParser(\n    decodeHTML(langObj.sortingCompleteModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortingFinishedModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSortingFinishedModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{helpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{helpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SortingFinishedModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerSortPreventNavModal;\nconst getSetTriggerSortPreventNavModal = (state) =>\n  state.setTriggerSortPreventNavModal;\n\nconst PresortPreventNavModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerSortPreventNavModal = useStore(\n    getSetTriggerSortPreventNavModal\n  );\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.sortPreventNavModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.sortPreventNavModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortPreventNavModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default PresortPreventNavModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerSortOverloadedColumnModal;\nconst getSetTrigOverColModal = (state) =>\n  state.setTriggerSortOverloadedColumnModal;\n\nconst OverloadedColumnModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerSortOverloadedColumnModal = useStore(getSetTrigOverColModal);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.sortOverloadedColumnModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.sortOverloadedColumnModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSortOverloadedColumnModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default OverloadedColumnModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getMapObj = (state) => state.mapObj;\n\nconst SortColGuides = (props) => {\n  // STATE\n  const mapObj = useSettingsStore(getMapObj);\n\n  const qSortHeaderNumbers = [...mapObj.qSortHeaderNumbers];\n  const columnHeadersColorsArray = [...mapObj.columnHeadersColorsArray];\n  let columnWidth = +props.columnWidth + 11;\n\n  return (\n    <ColorBarDivContainer id=\"colorBarDivContainer\">\n      {qSortHeaderNumbers.map((value, index) => {\n        return (\n          <ColorBarDiv\n            key={uuid()}\n            width={columnWidth}\n            color={columnHeadersColorsArray[index]}\n          >\n            {value}\n          </ColorBarDiv>\n        );\n      })}\n    </ColorBarDivContainer>\n  );\n};\n\nexport default SortColGuides;\n\nconst ColorBarDiv = styled.div`\n  background-color: ${(props) => props.color};\n  width: ${(props) => +props.width}px;\n  margin-right: 1px;\n  margin-left: 1px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 24px;\n  height: 28px;\n  border-bottom: 2px solid black;\n`;\n\nconst ColorBarDivContainer = styled.div`\n  display: flex;\n  padding-left: 2px;\n  flex-direction: row;\n  background-color: #d8d8d8;\n  margin-bottom: 0px;\n  height: 30px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport SortGrid from \"./SortGrid\";\nimport styled from \"styled-components\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport SortHelpModal from \"./SortHelpModal\";\nimport SortingFinishedModal from \"../../utilities/SortingFinishedModal\";\nimport PreventSortNavModal from \"./PreventSortNavModal\";\nimport OverloadedColumnModal from \"./OverloadedColumnModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport SortColGuides from \"./SortColGuides\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport PromptUnload from \"../../utilities/PromptUnload\";\n\nfunction debounce(fn, ms) {\n  let timer;\n  return (_) => {\n    clearTimeout(timer);\n    timer = setTimeout((_) => {\n      timer = null;\n      fn.apply(this, arguments);\n    }, ms);\n  };\n}\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getColumnWidth = (state) => state.columnWidth;\nconst getTopMargin = (state) => state.topMargin;\nconst getSetPresortNoReturn = (state) => state.setPresortNoReturn;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getSetTopMargin = (state) => state.setTopMargin;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\nconst getBypassSort = (state) => state.bypassSort;\nconst getSetCardFontSize = (state) => state.setCardFontSize;\n\nconst Sort = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  let cardFontSize = useStore(getCardFontSize);\n  const columnWidth = useStore(getColumnWidth);\n  const topMargin = useStore(getTopMargin);\n  const results = useStore(getResults);\n  const setPresortNoReturn = useStore(getSetPresortNoReturn);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const setTopMargin = useStore(getSetTopMargin);\n  const setResults = useStore(getSetResults);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n  const bypassSort = useStore(getBypassSort);\n  const setCardFontSize = useStore(getSetCardFontSize);\n\n  // set default font size\n  useEffect(() => {\n    if (\n      (configObj.setDefaultFontSizeSort === true && bypassSort === false) ||\n      (configObj.setDefaultFontSizeSort === \"true\" && bypassSort === false)\n    ) {\n      /* eslint-disable-next-line */\n      cardFontSize = configObj.defaultFontSizeSort;\n      setCardFontSize(configObj.defaultFontSizeSort);\n    }\n  }, [configObj, bypassSort, setCardFontSize]);\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  const headerBarColor = configObj.headerBarColor;\n  const fontColor = configObj.defaultFontColor;\n\n  const sortDisagreement = ReactHtmlParser(\n    decodeHTML(langObj.sortDisagreement)\n  );\n  const sortAgreement = ReactHtmlParser(decodeHTML(langObj.sortAgreement));\n  const condOfInst = ReactHtmlParser(decodeHTML(langObj.condOfInst));\n\n  // force updates on window resize\n  const [dimensions, setDimensions] = useState({\n    height: window.innerHeight,\n    width: document.body.clientWidth,\n  });\n\n  // page resize\n  useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: document.body.clientWidth,\n      });\n    }, 200);\n\n    window.addEventListener(\"resize\", debouncedHandleResize);\n\n    return (_) => {\n      window.removeEventListener(\"resize\", debouncedHandleResize);\n    };\n  });\n\n  useEffect(() => {\n    /* this should adjust the margin of the sort grid because I can't know\n     the size - it will depend on how much the researcher writes in the \n     \"conditions of instruction\" section - so, I grab the height of titleBar \n     after render and reset the margin\n    */\n    const sortGridMarginTop = +JSON.parse(\n      localStorage.getItem(\"sortGridMarginTop\")\n    );\n    let height = document.getElementById(\"sortTitleBarContainer\").clientHeight;\n\n    height = +JSON.stringify(height);\n\n    setTimeout(() => {\n      if (sortGridMarginTop !== height) {\n        setTopMargin(height);\n        localStorage.setItem(\"sortGridMarginTop\", JSON.stringify(height));\n      } else {\n        setTopMargin(+sortGridMarginTop);\n      }\n    }, 200);\n  });\n\n  useEffect(() => {\n    setPresortNoReturn(true);\n    setTimeout(() => {\n      setCurrentPage(\"sort\");\n    }, 300);\n  }, [setPresortNoReturn, setCurrentPage]);\n\n  // calc time on page\n  useEffect(() => {\n    // get card font size\n\n    let startTime;\n    startTime = Date.now();\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"sortPage\",\n        \"sortPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [results, setResults]);\n\n  return (\n    <React.Fragment>\n      <PromptUnload />\n      <SortHelpModal />\n      <PreventSortNavModal />\n      <SortingFinishedModal />\n      <OverloadedColumnModal />\n      <SortTitleBarContainer id=\"sortTitleBarContainer\">\n        <SortTitleBar id=\"sortTitleBar\" background={headerBarColor}>\n          <Disagree>{sortDisagreement}</Disagree>\n          <CondOfInst fontSize={configObj.condOfInstFontSize}>\n            {condOfInst}\n          </CondOfInst>\n          <Agree>{sortAgreement}</Agree>\n        </SortTitleBar>\n        <SortColGuides columnWidth={columnWidth} />\n      </SortTitleBarContainer>\n      <SortGridContainer marginTop={topMargin}>\n        <SortGrid\n          dimensions={dimensions}\n          cardFontSize={cardFontSize}\n          fontColor={fontColor}\n        />\n        ;\n      </SortGridContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Sort;\n\nconst SortTitleBarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-bottom: 5px;\n  display: inline-grid;\n  grid-template-columns: 15% 1fr 15%;\n  color: black;\n  font-weight: bold;\n  background-color: ${(props) => props.background};\n`;\n\nconst CondOfInst = styled.div`\n  color: white;\n  max-width: 80vw;\n  font-size: ${(props) => `${props.fontSize}px`};\n  padding: 5px;\n  border-radius: 5px;\n  text-align: center;\n  align-self: end;\n`;\n\nconst Agree = styled.div`\n  font-size: 22px;\n  align-self: end;\n  justify-self: end;\n  color: white;\n  padding-bottom: 5px;\n  margin-right: 20px;\n`;\n\nconst Disagree = styled.div`\n  font-size: 22px;\n  align-self: end;\n  justify-self: start;\n  color: white;\n  padding-bottom: 5px;\n`;\n\nconst SortGridContainer = styled.div`\n  margin-top: ${(props) => `${props.marginTop}px`};\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerTransmissionOKModal;\nconst getSetTriggerTransOKMod = (state) => state.setTriggerTransmissionOKModal;\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\n\nconst SubmitSuccessModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerTransmissionOKModal = useStore(getSetTriggerTransOKMod);\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\n\n  const modalHead = ReactHtmlParser(decodeHTML(langObj.transferOkModalHeader));\n  const modalText = ReactHtmlParser(decodeHTML(langObj.transferOkModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerTransmissionOKModal(false);\n    setDisplayGoodbyeMessage(true);\n    //document.getElementById(\"secondProjectLink\").click();\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SubmitSuccessModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerTransmissionFailModal;\nconst getSetTrigTransFailMod = (state) => state.setTriggerTransmissionFailModal;\n\nconst SubmitFailureModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTransFailMod);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.transferFailModalHeader)\n  );\n\n  const modalText = ReactHtmlParser(decodeHTML(langObj.transferFailModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerTransmissionFailModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SubmitFailureModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\nimport SubmitFailureModal from \"./SubmitFailureModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport PromptUnload from \"../../utilities/PromptUnload\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\nconst getSubmitFailNumber = (state) => state.submitFailNumber;\nconst getSetTrigTranFailMod = (state) => state.setTriggerTransmissionFailModal;\nconst getSetTrigTransOKModal = (state) => state.setTriggerTransmissionOKModal;\nconst getSetDisplaySubmitFallback = (state) => state.setDisplaySubmitFallback;\nconst getTransmittingData = (state) => state.transmittingData;\nconst getSetTransmittingData = (state) => state.setTransmittingData;\nconst getCheckInternetConnection = (state) => state.checkInternetConnection;\nconst getSetCheckInternetConnection = (state) =>\n  state.setCheckInternetConnection;\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\n\nconst SubmitResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\n  let submitFailNumber = useStore(getSubmitFailNumber);\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTranFailMod);\n  const setTriggerTransmissionOKModal = useStore(getSetTrigTransOKModal);\n  const setDisplaySubmitFallback = useStore(getSetDisplaySubmitFallback);\n  let transmittingData = useStore(getTransmittingData);\n  const setTransmittingData = useStore(getSetTransmittingData);\n  let checkInternetConnection = useStore(getCheckInternetConnection);\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\n\n  const btnTransferText = ReactHtmlParser(decodeHTML(langObj.btnTransfer));\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    e.target.disabled = true;\n\n    // setup for client-side internet connection fail case\n    setTransmittingData(true);\n    setCheckInternetConnection(false);\n    setTimeout(() => {\n      setTransmittingData(false);\n      setCheckInternetConnection(true);\n    }, 20000);\n\n    console.log(JSON.stringify(props.results, null, 2));\n\n    window.firebase\n      .auth()\n      .signInAnonymously()\n      .then(() => {\n        // Signed in..\n        window.rootRef.push(props.results, function (error) {\n          if (error) {\n            // data error action -  modal\n            console.log(\"data error - there was an error at rootRef level!\");\n            setTriggerTransmissionFailModal(true);\n            e.target.disabled = false;\n          } else {\n            // do success action - modal\n            console.log(\"success! pushed to database\");\n            localStorage.removeItem(\"cumulativelandingPageDuration\");\n            localStorage.removeItem(\"cumulativepresortPageDuration\");\n            localStorage.removeItem(\"cumulativesortPageDuration\");\n            localStorage.removeItem(\"cumulativepostsortPageDuration\");\n            localStorage.removeItem(\"cumulativesurveyPageDuration\");\n            localStorage.removeItem(\"lastAccesslandingPage\");\n            localStorage.removeItem(\"lastAccesspresortPage\");\n            localStorage.removeItem(\"lastAccesssortPage\");\n            localStorage.removeItem(\"lastAccesspostsortPage\");\n            localStorage.removeItem(\"lastAccesssurveyPage\");\n            localStorage.removeItem(\"timeOnlandingPage\");\n            localStorage.removeItem(\"timeOnpresortPage\");\n            localStorage.removeItem(\"timeOnsortPage\");\n            localStorage.removeItem(\"timeOnpostsortPage\");\n            localStorage.removeItem(\"timeOnsurveyPage\");\n\n            if (configObj.linkToSecondProject === true) {\n              setDisplayGoodbyeMessage(true);\n\n              let urlUsercode = localStorage.getItem(\"urlUsercode\");\n              const nextLinkAnchor = document.createElement(\"a\");\n              nextLinkAnchor.setAttribute(\"id\", \"secondProjectLink\");\n              nextLinkAnchor.setAttribute(\n                \"href\",\n                `${configObj.secondProjectUrl}/#/?usercode=${urlUsercode}`\n              );\n              if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n                nextLinkAnchor.setAttribute(\"target\", \"_blank\");\n              }\n              document.body.appendChild(nextLinkAnchor);\n              document.getElementById(\"secondProjectLink\").click();\n            }\n\n            setTriggerTransmissionOKModal(true);\n          }\n        });\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        submitFailNumber = submitFailNumber + 1;\n        console.log(submitFailNumber);\n        setTransmittingData(false);\n        // Firebase connection error\n        console.log(\"Connection error - there was an error at firebase level!\");\n        setTriggerTransmissionFailModal(true);\n        console.log(errorCode, errorMessage);\n        e.target.disabled = false;\n\n        if (submitFailNumber > 2) {\n          console.log(\"display fallback set to true\");\n          setDisplaySubmitFallback(true);\n          displaySubmitFallback = true;\n        }\n      });\n    console.log(\"submission processed\");\n  };\n\n  if (displaySubmitFallback === true) {\n    return (\n      <React.Fragment>\n        <PromptUnload />\n        <SubmitSuccessModal />\n        <SubmitFailureModal />\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <PromptUnload />\n      <SubmitSuccessModal />\n      <SubmitFailureModal />\n      {transmittingData ? (\n        <TransmittingSpin />\n      ) : (\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n          {btnTransferText}\n        </StyledButton>\n      )}\n      {checkInternetConnection && (\n        <WarningDiv>Check your internet connection</WarningDiv>\n      )}\n    </React.Fragment>\n  );\n};\nexport default SubmitResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\nconst DisabledButton = styled.button`\n  border-color: lightgray;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: lightgray;\n`;\n\nconst TransmittingSpin = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 5px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #337ab7;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nconst WarningDiv = styled.div`\n  background-color: lightpink;\n  padding: 5px;\n  border-radius: 3px;\n  font-weight: bold;\n`;\n\n/* \n  const demoData = {\n    projectName: \"My_Q_project\",\n    partId: \"jimbo-wilbur\",\n    randomId: \"8ea8f130-b1e\",\n    dateTime: \"26/9/2021 @ 7:28:33\",\n    timeLanding: \"00:02:15\",\n    timePresort: \"00:05:06\",\n    timeSort: \"00:06:28\",\n    timePostsort: \"00:01:01\",\n    timeSurvey: \"00:01:36\",\n    npos: 3,\n    nneu: 27,\n    nneg: 3,\n    column4_1: \"no response\",\n    column4_2: \"no response\",\n    columnN4_1: \"no response\",\n    columnN4_2: \"no response\",\n    qNum1: \"info. - na\",\n    qNum2: \"hjkhjkhk\",\n    qNum3: \"no response\",\n    qNum4: \"no response\",\n    qNum5: \"no response\",\n    qNum6: \"no response\",\n    qNum7: \"1\",\n    \"qNum8-1\": \"no response\",\n    \"qNum8-2\": \"no response\",\n    \"qNum8-3\": \"no response\",\n    \"qNum8-4\": \"no response\",\n    \"qNum9-1\": \"no response\",\n    \"qNum9-2\": \"no response\",\n    \"qNum9-3\": \"no response\",\n    \"qNum9-4\": \"no response\",\n    \"qNum10-1\": \"no response\",\n    \"qNum10-2\": \"no response\",\n    \"qNum10-3\": \"no response\",\n    \"qNum10-4\": \"no response\",\n    sort: \"1|0|-1|0|-1|-2|0|-1|3|-2|-3|3|1|-4|-4|1|2|2|2|3|1|2|4|-3|4|-2|-1|0|-2|-1|1|0|-3\",\n  };\n */\n","const calculatePostsortResults = (resultsPostsort, mapObj, configObj) => {\n  const newObject = {};\n\n  // check for missing responses\n  const qSortPattern = mapObj.qSortPattern;\n  const qSortHeaderNumbers = mapObj.qSortHeaders;\n  const highCardNum = +qSortPattern[qSortPattern.length - 1];\n  const highCardVal = +qSortHeaderNumbers[qSortHeaderNumbers.length - 1];\n  const highCard2Num = +qSortPattern[qSortPattern.length - 2];\n  const highCard2Val = +qSortHeaderNumbers[qSortHeaderNumbers.length - 2];\n  const lowCardNum = +qSortPattern[0];\n  const lowCardVal = qSortHeaderNumbers[0];\n  const lowCard2Num = +qSortPattern[1];\n  const lowCard2Val = qSortHeaderNumbers[1];\n  const maxValue = Math.max(...qSortPattern);\n  const neuCardNum = maxValue;\n  const neuCardVal = 0;\n\n  // check for high card answers\n  const length = highCardNum;\n  for (let i = 0; i < length; i++) {\n    if (!resultsPostsort.hasOwnProperty(`column${highCardVal}_${i + 1}`))\n      resultsPostsort[`column${highCardVal}_${i + 1}`] = \"no response\";\n  }\n\n  // check for high card 2 answers\n  if (configObj.showSecondPosColumn === true) {\n    const length2 = highCard2Num;\n    for (let ii = 0; ii < length2; ii++) {\n      if (!resultsPostsort.hasOwnProperty(`column${highCard2Val}_${ii + 1}`))\n        resultsPostsort[`column${highCard2Val}_${ii + 1}`] = \"no response\";\n    }\n  }\n\n  // check for neu card answers\n  if (configObj.displayNeutralObjects === true) {\n    const length5 = neuCardNum;\n    for (let jjj = 0; jjj < length5; jjj++) {\n      if (!resultsPostsort.hasOwnProperty(`column${neuCardVal}_${jjj + 1}`))\n        resultsPostsort[`column${neuCardVal}_${jjj + 1}`] = \"no response\";\n    }\n  }\n\n  // check for low card 2 answers\n  if (configObj.showSecondNegColumn === true) {\n    const length4 = lowCard2Num;\n    for (let jj = 0; jj < length4; jj++) {\n      if (!resultsPostsort.hasOwnProperty(`column${lowCard2Val}_${jj + 1}`))\n        resultsPostsort[`column${lowCard2Val}_${jj + 1}`] = \"no response\";\n    }\n  }\n\n  // check for low card answers\n  const length3 = lowCardNum;\n  for (let j = 0; j < length3; j++) {\n    if (!resultsPostsort.hasOwnProperty(`column${lowCardVal}_${j + 1}`))\n      resultsPostsort[`column${lowCardVal}_${j + 1}`] = \"no response\";\n  }\n\n  // re-arrange object properties\n  let keys = Object.keys(resultsPostsort);\n  keys.sort();\n\n  for (let i = 0; i < keys.length; i++) {\n    newObject[keys[i]] = resultsPostsort[keys[i]];\n  }\n  return newObject;\n};\n\nexport default calculatePostsortResults;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport { v4 as uuid } from \"uuid\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst SubmitResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const downloadButtonText = ReactHtmlParser(decodeHTML(langObj.btnDownload));\n  const randomId = uuid().substring(0, 12);\n\n  const resultsWithId = {};\n  resultsWithId[randomId] = props.results;\n\n  const finalResults = JSON.stringify(resultsWithId);\n\n  const handleClick = (e) => {\n    function download(content, fileName, contentType) {\n      var a = document.createElement(\"a\");\n      var file = new Blob([content], { type: contentType });\n      a.href = URL.createObjectURL(file);\n      a.download = fileName;\n      a.click();\n      URL.revokeObjectURL(a.href);\n    }\n\n    download(finalResults, \"EQ_Web_Sort_Results.txt\", \"text/plain\");\n  };\n\n  return (\n    <ButtonContainer>\n      <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n        {downloadButtonText}\n      </StyledButton>\n    </ButtonContainer>\n  );\n};\nexport default SubmitResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 50vw;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport FallbackButtons from \"./FallbackButtons\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\n// eslint-disable-next-line react/button-has-type\n/* eslint react/prop-types: 0 */\n\n/* const handleClick = () => {\n  console.log(\"clicked\");\n}; */\n\nconst getLangObj = (state) => state.langObj;\n\nconst SubmitFallback = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n\n  const fallbackMessage = ReactHtmlParser(decodeHTML(langObj.fallbackMessage));\n\n  return (\n    <div>\n      <StyledMessage>{fallbackMessage}</StyledMessage>\n      <FallbackButtons results={props.results} />\n    </div>\n  );\n};\n\nexport default SubmitFallback;\n\nconst StyledMessage = styled.div`\n  width: 50vw;\n  max-width: 900px;\n  font-size: 3vh;\n  background-color: orange;\n  padding: 10px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\nimport SubmitFailureModal from \"./SubmitFailureModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport { v4 as uuid } from \"uuid\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useLocalPersist from \"../../globalState/useLocalPersist\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getSetLocalStoredQsorts = (state) => state.setLocalStoredQsorts;\nconst getLocalStoredQsorts = (state) => state.localStoredQsorts;\nconst getSetHasDownloadedQsorts = (state) => state.setHasDownloadedQsorts;\nconst getSetTriggerLocalSubmitSuccessModal = (state) =>\n  state.setTriggerLocalSubmitSuccessModal;\n\nconst getLangObj = (state) => state.langObj;\n\nconst SubmitLocalResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const setLocalStoredQsorts = useLocalPersist(getSetLocalStoredQsorts);\n  let localStoredQsorts = useLocalPersist(getLocalStoredQsorts);\n  const setHasDownloadedQsorts = useLocalPersist(getSetHasDownloadedQsorts);\n  const setTriggerLocalSubmitSuccessModal = useStore(\n    getSetTriggerLocalSubmitSuccessModal\n  );\n\n  const btnTransferText = ReactHtmlParser(\n    decodeHTML(langObj.localSaveDataButton)\n  );\n  // let identifier = uuid();\n  /* \n  const demoData = {\n    projectName: \"My_Q_project\",\n    partId: \"jimbo-wilbur\",\n    randomId: \"8ea8f130-b1e\",\n    dateTime: \"26/9/2021 @ 7:28:33\",\n    timeLanding: \"00:02:15\",\n    timePresort: \"00:05:06\",\n    timeSort: \"00:06:28\",\n    timePostsort: \"00:01:01\",\n    timeSurvey: \"00:01:36\",\n    npos: 3,\n    nneu: 27,\n    nneg: 3,\n    column4_1: \"no response\",\n    column4_2: \"no response\",\n    columnN4_1: \"no response\",\n    columnN4_2: \"no response\",\n    qNum1: \"info. - na\",\n    qNum2: \"hjkhjkhk\",\n    qNum3: \"no response\",\n    qNum4: \"no response\",\n    qNum5: \"no response\",\n    qNum6: \"no response\",\n    qNum7: \"1\",\n    \"qNum8-1\": \"no response\",\n    \"qNum8-2\": \"no response\",\n    \"qNum8-3\": \"no response\",\n    \"qNum8-4\": \"no response\",\n    \"qNum9-1\": \"no response\",\n    \"qNum9-2\": \"no response\",\n    \"qNum9-3\": \"no response\",\n    \"qNum9-4\": \"no response\",\n    \"qNum10-1\": \"no response\",\n    \"qNum10-2\": \"no response\",\n    \"qNum10-3\": \"no response\",\n    \"qNum10-4\": \"no response\",\n    sort: \"1|0|-1|0|-1|-2|0|-1|3|-2|-3|3|1|-4|-4|1|2|2|2|3|1|2|4|-3|4|-2|-1|0|-2|-1|1|0|-3\",\n  };\n */\n  const handleClick = (e) => {\n    e.preventDefault();\n    e.target.disabled = true;\n\n    try {\n      console.log(JSON.stringify(props.results, null, 2));\n\n      // setLocalStoredQsorts(props.results);\n\n      const participantDesignation1 = uuid();\n      const participantDesignation = participantDesignation1.substring(0, 8);\n\n      localStoredQsorts[participantDesignation] = props.results;\n      setLocalStoredQsorts(localStoredQsorts);\n\n      localStorage.removeItem(\"cumulativelandingPageDuration\");\n      localStorage.removeItem(\"cumulativepresortPageDuration\");\n      localStorage.removeItem(\"cumulativesortPageDuration\");\n      localStorage.removeItem(\"cumulativepostsortPageDuration\");\n      localStorage.removeItem(\"cumulativesurveyPageDuration\");\n      localStorage.removeItem(\"lastAccesslandingPage\");\n      localStorage.removeItem(\"lastAccesspresortPage\");\n      localStorage.removeItem(\"lastAccesssortPage\");\n      localStorage.removeItem(\"lastAccesspostsortPage\");\n      localStorage.removeItem(\"lastAccesssurveyPage\");\n      localStorage.removeItem(\"timeOnlandingPage\");\n      localStorage.removeItem(\"timeOnpresortPage\");\n      localStorage.removeItem(\"timeOnsortPage\");\n      localStorage.removeItem(\"timeOnpostsortPage\");\n      localStorage.removeItem(\"timeOnsurveyPage\");\n\n      setTriggerLocalSubmitSuccessModal(true);\n      setHasDownloadedQsorts(false);\n\n      // const results = props.results;\n\n      /*\n        if (errorMessage) {\n            // data error action -  modal\n            console.log(\"data error - there was an error at rootRef level!\");\n            setGlobalState(\"triggerTransmissionFailModal\", true);\n            e.target.disabled = false;\n          } else {\n            // do success action - modal\n            setGlobalState(\"triggerTransmissionOKModal\", true);\n            console.log(\"success! pushed to database\");\n          } */\n    } catch (error) {\n      e.target.disabled = false;\n\n      /*\n        ((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        submitFailNumber = submitFailNumber + 1;\n        console.log(submitFailNumber);\n        // Firebase connection error\n        console.log(\"Connection error - there was an error at firebase level!\");\n        setGlobalState(\"triggerTransmissionFailModal\", true);\n        console.log(errorCode, errorMessage);\n        e.target.disabled = false;\n\n        if (submitFailNumber > 2) {\n          console.log(\"display fallback set to true\");\n          setGlobalState(\"displaySubmitFallback\", true);\n          displaySubmitFallback = true;\n        }\n      });\n    console.log(\"submission processed\");\n  };\n\n  if (displaySubmitFallback === true) {\n    return (\n      <React.Fragment>\n        <SubmitSuccessModal />\n        <SubmitFailureModal />\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\n      </React.Fragment>\n    );\n    */\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <SubmitSuccessModal />\n      <SubmitFailureModal />\n      <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n        {btnTransferText}\n      </StyledButton>\n    </React.Fragment>\n  );\n};\nexport default SubmitLocalResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport { withRouter } from \"react-router\";\nimport useStore from \"../../globalState/useStore\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst getLangObj = (state) => state.langObj;\nconst getSetPresortNoReturn = (state) => state.setPresortNoReturn;\nconst getSetColumnStatements = (state) => state.setColumnStatements;\nconst getResetColumnStatements = (state) => state.resetColumnStatements;\n\nconst ReturnToLocalPanelButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const setPresortNoReturn = useStore(getSetPresortNoReturn);\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\n  const resetColumnStatements = useSettingsStore(getResetColumnStatements);\n  const newColumnStatements = cloneDeep(resetColumnStatements);\n\n  const btnTransferText = ReactHtmlParser(\n    decodeHTML(langObj.returnToLocalPanelButtonText)\n  );\n\n  const {\n    history,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n  } = props;\n\n  let reload = async function (history) {\n    await new Promise((resolve, reject) => window.location.reload());\n  };\n\n  return (\n    <React.Fragment>\n      <StyledButton\n        onClick={(event) => {\n          onClick && onClick(event);\n          setPresortNoReturn(false);\n          setColumnStatements(newColumnStatements);\n          history.push(\"/\");\n          reload();\n        }}\n      >\n        {btnTransferText}\n      </StyledButton>\n    </React.Fragment>\n  );\n};\nexport default withRouter(ReturnToLocalPanelButton);\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport ReturnToLocalPanelButton from \"./ReturnToLocalPanelButton\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTrigLclSubmitSucMdl = (state) => state.triggerLocalSubmitSuccessModal;\n\nconst LocalSubmitSuccessModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTrigLclSubmitSucMdl);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.localSubmitSuccessModalHeader)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.localSubmitSuccessModalText)\n  );\n\n  const onCloseModal = () => {};\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n      <ButtonContainer>\n        <ReturnToLocalPanelButton />\n      </ButtonContainer>\n    </Modal>\n  );\n};\n\nexport default LocalSubmitSuccessModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\nimport SubmitFailureModal from \"./SubmitFailureModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport SteinStore from \"stein-js-client\";\nimport PromptUnload from \"../../utilities/PromptUnload\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\nconst getSubmitFailNumber = (state) => state.submitFailNumber;\nconst getSetTrigTranFailMod = (state) => state.setTriggerTransmissionFailModal;\nconst getSetTrigTransOKModal = (state) => state.setTriggerTransmissionOKModal;\nconst getSetDisplaySubmitFallback = (state) => state.setDisplaySubmitFallback;\nconst getTransmittingData = (state) => state.transmittingData;\nconst getSetTransmittingData = (state) => state.setTransmittingData;\nconst getCheckInternetConnection = (state) => state.checkInternetConnection;\nconst getSetCheckInternetConnection = (state) =>\n  state.setCheckInternetConnection;\nconst getSetDisplayGoodbyeMessage = (state) => state.setDisplayGoodbyeMessage;\n\nconst SubmitResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const apiString = props.api;\n  const rawData = props.results;\n\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\n  let submitFailNumber = useStore(getSubmitFailNumber);\n  const setTriggerTransmissionFailModal = useStore(getSetTrigTranFailMod);\n  const setTriggerTransmissionOKModal = useStore(getSetTrigTransOKModal);\n  const setDisplaySubmitFallback = useStore(getSetDisplaySubmitFallback);\n  let transmittingData = useStore(getTransmittingData);\n  const setTransmittingData = useStore(getSetTransmittingData);\n  let checkInternetConnection = useStore(getCheckInternetConnection);\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\n  const setDisplayGoodbyeMessage = useStore(getSetDisplayGoodbyeMessage);\n\n  const btnTransferText = ReactHtmlParser(decodeHTML(langObj.btnTransfer));\n\n  const store = new SteinStore(apiString);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    e.target.disabled = true;\n    setTransmittingData(true);\n    setCheckInternetConnection(false);\n\n    setTimeout(() => {\n      setTransmittingData(false);\n      setCheckInternetConnection(true);\n    }, 20000);\n\n    // create results object for transmission\n    let formattedResultsObj = {};\n    let iterator = 1;\n    for (const [key, value] of Object.entries(rawData)) {\n      formattedResultsObj[iterator] = `${key}: ${value}`;\n      iterator += 1;\n    }\n\n    // POST TO STEIN\n\n    console.log(JSON.stringify(formattedResultsObj, null, 2));\n    store.append(\"Sheet1\", [formattedResultsObj]).then((res) => {\n      if (Object.keys(res)[0] === \"error\") {\n        console.log(\"there was an error\");\n        // setTriggerTransmissionFailModal(true);\n\n        // re-enable submit button and log error number for fallback\n        e.target.disabled = false;\n        setTransmittingData(false);\n\n        submitFailNumber = submitFailNumber + 1;\n        console.log(submitFailNumber);\n\n        if (submitFailNumber > 2) {\n          console.log(\"display fallback set to true\");\n          setDisplaySubmitFallback(true);\n          displaySubmitFallback = true;\n        } else {\n          setTriggerTransmissionFailModal(true);\n        }\n      } else {\n        // submission success\n        console.log(res);\n        console.log(\"success! pushed to database\");\n        localStorage.removeItem(\"cumulativelandingPageDuration\");\n        localStorage.removeItem(\"cumulativepresortPageDuration\");\n        localStorage.removeItem(\"cumulativesortPageDuration\");\n        localStorage.removeItem(\"cumulativepostsortPageDuration\");\n        localStorage.removeItem(\"cumulativesurveyPageDuration\");\n        localStorage.removeItem(\"lastAccesslandingPage\");\n        localStorage.removeItem(\"lastAccesspresortPage\");\n        localStorage.removeItem(\"lastAccesssortPage\");\n        localStorage.removeItem(\"lastAccesspostsortPage\");\n        localStorage.removeItem(\"lastAccesssurveyPage\");\n        localStorage.removeItem(\"timeOnlandingPage\");\n        localStorage.removeItem(\"timeOnpresortPage\");\n        localStorage.removeItem(\"timeOnsortPage\");\n        localStorage.removeItem(\"timeOnpostsortPage\");\n        localStorage.removeItem(\"timeOnsurveyPage\");\n\n        if (configObj.linkToSecondProject === true) {\n          setDisplayGoodbyeMessage(true);\n\n          let urlUsercode = localStorage.getItem(\"urlUsercode\");\n          const nextLinkAnchor = document.createElement(\"a\");\n          nextLinkAnchor.setAttribute(\"id\", \"secondProjectLink\");\n          nextLinkAnchor.setAttribute(\n            \"href\",\n            `${configObj.secondProjectUrl}/#/?usercode=${urlUsercode}`\n          );\n          if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n            nextLinkAnchor.setAttribute(\"target\", \"_blank\");\n          }\n          document.body.appendChild(nextLinkAnchor);\n          document.getElementById(\"secondProjectLink\").click();\n        }\n\n        setTriggerTransmissionOKModal(true);\n      }\n    });\n\n    /*\n    if (props.results.sort !== \"no data\") {\n      let rawSort = props.results.sort;\n      let sortArray = rawSort.split(\"|\");\n      let sortObj = {};\n      sortArray.forEach((item, index) => (sortObj[\"s\" + (index + 1)] = +item));\n      sortObj.randomId = rawData.randomId;\n      sortObj.partId = rawData.partId;\n      sortObj.urlUsercode = rawData.urlUsercode;\n\n      console.log(JSON.stringify(sortObj, null, 2));\n\n      store.append(\"Sheet2\", [sortObj]).then((res) => {\n        if (Object.keys(res)[0] === \"error\") {\n          console.log(\"there was an error\");\n          e.target.disabled = false;\n          submitFailNumber = submitFailNumber + 1;\n          console.log(submitFailNumber);\n\n          if (submitFailNumber > 2) {\n            console.log(\"display fallback set to true\");\n            setDisplaySubmitFallback(true);\n            displaySubmitFallback = true;\n          } else {\n            setTriggerTransmissionFailModal(true);\n          }\n        } else {\n          // submission success\n          console.log(res);\n          setTriggerTransmissionOKModal(true);\n          console.log(\"success! pushed to database\");\n          localStorage.removeItem(\"cumulativelandingPageDuration\");\n          localStorage.removeItem(\"cumulativepresortPageDuration\");\n          localStorage.removeItem(\"cumulativesortPageDuration\");\n          localStorage.removeItem(\"cumulativepostsortPageDuration\");\n          localStorage.removeItem(\"cumulativesurveyPageDuration\");\n          localStorage.removeItem(\"lastAccesslandingPage\");\n          localStorage.removeItem(\"lastAccesspresortPage\");\n          localStorage.removeItem(\"lastAccesssortPage\");\n          localStorage.removeItem(\"lastAccesspostsortPage\");\n          localStorage.removeItem(\"lastAccesssurveyPage\");\n          localStorage.removeItem(\"timeOnlandingPage\");\n          localStorage.removeItem(\"timeOnpresortPage\");\n          localStorage.removeItem(\"timeOnsortPage\");\n          localStorage.removeItem(\"timeOnpostsortPage\");\n          localStorage.removeItem(\"timeOnsurveyPage\");\n        }\n      });\n    }\n    */\n  };\n\n  if (displaySubmitFallback === true) {\n    return (\n      <React.Fragment>\n        <PromptUnload />\n        <SubmitSuccessModal />\n        <SubmitFailureModal />\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <PromptUnload />\n      <SubmitSuccessModal />\n      <SubmitFailureModal />\n      {transmittingData ? (\n        <TransmittingSpin />\n      ) : (\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n          {btnTransferText}\n        </StyledButton>\n      )}\n      {checkInternetConnection && (\n        <WarningDiv>Check your internet connection</WarningDiv>\n      )}\n    </React.Fragment>\n  );\n};\nexport default SubmitResultsButton;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\nconst DisabledButton = styled.button`\n  border-color: lightgray;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: lightgray;\n`;\n\nconst TransmittingSpin = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 5px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #337ab7;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nconst WarningDiv = styled.div`\n  background-color: lightpink;\n  padding: 5px;\n  border-radius: 3px;\n  font-weight: bold;\n`;\n\n/* \n  const demoData = {\n    projectName: \"My_Q_project\",\n    partId: \"jimbo-wilbur\",\n    randomId: \"8ea8f130-b1e\",\n    dateTime: \"26/9/2021 @ 7:28:33\",\n    timeLanding: \"00:02:15\",\n    timePresort: \"00:05:06\",\n    timeSort: \"00:06:28\",\n    timePostsort: \"00:01:01\",\n    timeSurvey: \"00:01:36\",\n    npos: 3,\n    nneu: 27,\n    nneg: 3,\n    column4_1: \"no response\",\n    column4_2: \"no response\",\n    columnN4_1: \"no response\",\n    columnN4_2: \"no response\",\n    qNum1: \"info. - na\",\n    qNum2: \"hjkhjkhk\",\n    qNum3: \"no response\",\n    qNum4: \"no response\",\n    qNum5: \"no response\",\n    qNum6: \"no response\",\n    qNum7: \"1\",\n    \"qNum8-1\": \"no response\",\n    \"qNum8-2\": \"no response\",\n    \"qNum8-3\": \"no response\",\n    \"qNum8-4\": \"no response\",\n    \"qNum9-1\": \"no response\",\n    \"qNum9-2\": \"no response\",\n    \"qNum9-3\": \"no response\",\n    \"qNum9-4\": \"no response\",\n    \"qNum10-1\": \"no response\",\n    \"qNum10-2\": \"no response\",\n    \"qNum10-3\": \"no response\",\n    \"qNum10-4\": \"no response\",\n    sort: \"1|0|-1|0|-1|-2|0|-1|3|-2|-3|3|1|-4|-4|1|2|2|2|3|1|2|4|-3|4|-2|-1|0|-2|-1|1|0|-3\",\n  };\n */\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\n\nconst getLangObj = (state) => state.langObj;\n\nconst CopyToClipboardButton = (props) => {\n  console.log(\"incoming: \" + JSON.stringify(props.content));\n\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const [result, setResult] = useState(\"\");\n  const copiedText = ReactHtmlParser(decodeHTML(langObj.copiedText));\n  const copyTextError = ReactHtmlParser(decodeHTML(langObj.copyTextError));\n\n  // async generic function for copying to clipboard\n  async function copyToClipboard() {\n    try {\n      let formattedResultsTxt = \"\";\n      if (props.type === \"results\") {\n        for (const [key, value] of Object.entries(props.content)) {\n          formattedResultsTxt = formattedResultsTxt + `${key}: ${value} * `;\n        }\n      } else {\n        formattedResultsTxt = props.content;\n      }\n      console.log(\"formattedResults: \" + formattedResultsTxt);\n\n      await navigator.clipboard.writeText(formattedResultsTxt);\n      setResult(\"success\");\n    } catch (err) {\n      setResult(\"error\");\n      console.error(\"Failed to copy: \", err);\n    } finally {\n      setTimeout(() => setResult(\"\"), 3000);\n    }\n  }\n\n  const handleClick = (e) => {\n    copyToClipboard(props.content).then(() => {\n      console.log(\"copied to clipboard\");\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <ContainerDiv>\n        <StyledButton tabindex=\"1\" onClick={(e) => handleClick(e)}>\n          {props.text}\n        </StyledButton>\n        <MessageDiv>\n          {result === \"success\" && copiedText}\n          {result === \"error\" && copyTextError}\n        </MessageDiv>\n      </ContainerDiv>\n    </React.Fragment>\n  );\n};\n\nexport default CopyToClipboardButton;\n\nconst StyledButton = styled.button`\n  grid-area: b;\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  min-width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme }) => theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n`;\n\nconst ContainerDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 10px;\n  align-items: center;\n  grid-template-areas: \"a b c\";\n`;\n\nconst MessageDiv = styled.div`\n  grid-area: c;\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-top: 0.7em;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SubmitSuccessModal from \"./SubmitSuccessModal\";\nimport SubmitFailureModal from \"./SubmitFailureModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport CopyToClipboardButton from \"./CopyToClipboardButton\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\nconst getTransmittingData = (state) => state.transmittingData;\nconst getSetTransmittingData = (state) => state.setTransmittingData;\n// const getCheckInternetConnection = (state) => state.checkInternetConnection;\nconst getSetCheckInternetConnection = (state) =>\n  state.setCheckInternetConnection;\nconst getSetDisableRefreshCheck = (state) => state.setDisableRefreshCheck;\n\nconst SubmitResultsButton = (props) => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  let displaySubmitFallback = useStore(getDisplaySubmitFallback);\n  let transmittingData = useStore(getTransmittingData);\n  const setTransmittingData = useStore(getSetTransmittingData);\n  const setCheckInternetConnection = useStore(getSetCheckInternetConnection);\n  const setDisableRefreshCheck = useStore(getSetDisableRefreshCheck);\n  const [showEmailButtons, setShowEmailButtons] = useState(false);\n\n  const rawData = props.results;\n  const emailAddress = configObj.emailAddress;\n  const btnTransferText = ReactHtmlParser(decodeHTML(langObj.btnTransferEmail));\n  const defaultEmailClientFailText = ReactHtmlParser(\n    decodeHTML(langObj.defaultEmailClientFail)\n  );\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    setTransmittingData(true);\n    setCheckInternetConnection(false);\n\n    // create results object for transmission - * is a delimiter\n    let formattedResultsTxt = \"\";\n    for (const [key, value] of Object.entries(props.results)) {\n      formattedResultsTxt = formattedResultsTxt + `${key}:| ${value} | `;\n    }\n    console.log(\"formattedResults: \" + formattedResultsTxt);\n\n    // check for internet connection\n    setTimeout(() => {\n      setTransmittingData(false);\n      setCheckInternetConnection(true);\n    }, 200);\n\n    console.log(JSON.stringify(formattedResultsTxt, null, 2));\n\n    // Pass to Email client\n    if (navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n      // Do Chrome-related actions  -  %0D%0A is a line break\n      window.open(\n        `mailto:${configObj.emailAddress}?subject=${configObj.emailSubject}&body=${langObj.emailMessage1} %0D%0A%0D%0AMy Results:%0D%0A${formattedResultsTxt}`\n      );\n      setShowEmailButtons(true);\n    } else {\n      // Do non-Chrome-related actions   -  %0D%0A is a line break\n      window.location.href = `mailto:${configObj.emailAddress}?subject=${configObj.emailSubject}&body=${langObj.emailMessage1} %0D%0A%0D%0AMy Results:%0D%0A${formattedResultsTxt}`;\n      setShowEmailButtons(true);\n    }\n  };\n\n  // set disable refresh check\n  useEffect(() => {\n    setDisableRefreshCheck(true);\n  }, [setDisableRefreshCheck]);\n\n  console.log(\"urlUsercode: \", props.results.urlUsercode);\n\n  if (displaySubmitFallback === true) {\n    return (\n      <React.Fragment>\n        <SubmitSuccessModal />\n\n        <DisabledButton tabindex=\"0\">{btnTransferText}</DisabledButton>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <SubmitSuccessModal />\n      <SubmitFailureModal />\n      <ContainerDiv>\n        <StyledButton tabindex=\"0\" onClick={(e) => handleClick(e)}>\n          {btnTransferText}\n        </StyledButton>\n\n        {transmittingData ? <TransmittingSpin /> : null}\n      </ContainerDiv>\n      {showEmailButtons ? (\n        <EmailButtonDiv>\n          <ContentDiv>{defaultEmailClientFailText}</ContentDiv>\n          <CopyToClipboardButton\n            type={\"email\"}\n            content={emailAddress}\n            text={langObj.clipboardEmail}\n          />\n          <CopyToClipboardButton\n            type={\"results\"}\n            content={rawData}\n            text={langObj.clipboardResults}\n          />\n        </EmailButtonDiv>\n      ) : (\n        <SpacerDiv />\n      )}\n    </React.Fragment>\n  );\n};\nexport default SubmitResultsButton;\n\nconst StyledButton = styled.button`\n  grid-area: b;\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 400px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\nconst ContainerDiv = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 10px;\n  align-items: center;\n  grid-template-areas: \"a b c\";\n`;\n\nconst DisabledButton = styled.button`\n  border-color: lightgray;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: 200px;\n  height: 50px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: lightgray;\n`;\n\nconst TransmittingSpin = styled.div`\n  grid-area: c;\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-top: 0.7em;\n\n  width: 50px;\n  height: 50px;\n  border: 5px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top-color: #337ab7;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2em;\n  width: 65vw;\n  font-size: 1.35em;\n  margin-top: 25px;\n  padding: 5px;\n  align-self: center;\n`;\n\nconst SpacerDiv = styled.div`\n  height: 300px;\n`;\n\nconst EmailButtonDiv = styled.div`\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\n/* \nconst WarningDiv = styled.div`\n  background-color: lightpink;\n  padding: 5px;\n  border-radius: 3px;\n  font-weight: bold;\n`;\n\n  const demoData = {\n    projectName: \"My_Q_project\",\n    partId: \"jimbo-wilbur\",\n    randomId: \"8ea8f130-b1e\",\n    dateTime: \"26/9/2021 @ 7:28:33\",\n    timeLanding: \"00:02:15\",\n    timePresort: \"00:05:06\",\n    timeSort: \"00:06:28\",\n    timePostsort: \"00:01:01\",\n    timeSurvey: \"00:01:36\",\n    npos: 3,\n    nneu: 27,\n    nneg: 3,\n    column4_1: \"no response\",\n    column4_2: \"no response\",\n    columnN4_1: \"no response\",\n    columnN4_2: \"no response\",\n    qNum1: \"info. - na\",\n    qNum2: \"hjkhjkhk\",\n    qNum3: \"no response\",\n    qNum4: \"no response\",\n    qNum5: \"no response\",\n    qNum6: \"no response\",\n    qNum7: \"1\",\n    \"qNum8-1\": \"no response\",\n    \"qNum8-2\": \"no response\",\n    \"qNum8-3\": \"no response\",\n    \"qNum8-4\": \"no response\",\n    \"qNum9-1\": \"no response\",\n    \"qNum9-2\": \"no response\",\n    \"qNum9-3\": \"no response\",\n    \"qNum9-4\": \"no response\",\n    \"qNum10-1\": \"no response\",\n    \"qNum10-2\": \"no response\",\n    \"qNum10-3\": \"no response\",\n    \"qNum10-4\": \"no response\",\n    sort: \"1|0|-1|0|-1|-2|0|-1|3|-2|-3|3|1|-4|-4|1|2|2|2|3|1|2|4|-3|4|-2|-1|0|-2|-1|1|0|-3\",\n  };\n */\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport SubmitButton from \"./SubmitButton\";\nimport calculatePostsortResults from \"./calculatePostsortResults\";\nimport SubmitFallback from \"./SubmitFallback\";\nimport { v4 as uuid } from \"uuid\";\nimport SaveLocalDataToLocalStorageButton from \"./SaveLocalDataToLocalStorageButton\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport LocalSubmitSuccessModal from \"./LocalSubmitSuccessModal\";\nimport SubmitButtonGS from \"./SubmitButtonGS\";\nimport SubmitButtonEmail from \"./SubmitButtonEmail\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getMapObj = (state) => state.mapObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getDisplaySubmitFallback = (state) => state.displaySubmitFallback;\nconst getResults = (state) => state.results;\nconst getResultsPostsort = (state) => state.resultsPostsort;\nconst getResultsSurvey = (state) => state.resultsSurvey;\nconst getPartId = (state) => state.partId;\nconst getUsercode = (state) => state.usercode;\nconst getUrlUsercode = (state) => state.urlUsercode;\nconst getDisplayGoodbyeMessage = (state) => state.displayGoodbyeMessage;\nconst getParticipantName = (state) => state.localParticipantName;\nconst getLocalUsercode = (state) => state.localUsercode;\n\nlet transmissionResults = {};\n\nconst SubmitPage = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const mapObj = useSettingsStore(getMapObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const displaySubmitFallback = useStore(getDisplaySubmitFallback);\n  const results = useStore(getResults);\n  const resultsPostsort = useStore(getResultsPostsort);\n  const resultsSurvey = useStore(getResultsSurvey);\n  const partId = useStore(getPartId);\n  const usercode = useStore(getUsercode);\n  const urlUsercode = useStore(getUrlUsercode);\n  const displayGoodbyeMessage = useStore(getDisplayGoodbyeMessage);\n  const localParticipantName = useStore(getParticipantName);\n  const localUsercode = useStore(getLocalUsercode);\n\n  useEffect(() => {\n    setCurrentPage(\"submit\");\n  }, [setCurrentPage]);\n\n  const transferTextAbove = decodeHTML(langObj.transferTextAbove);\n  const transferTextBelow = decodeHTML(langObj.transferTextBelow);\n  const goodbyeMessage = decodeHTML(langObj.goodbyeMessage);\n  const linkedProjectFallbackMessage = decodeHTML(\n    langObj.linkedProjectFallbackMessage\n  );\n  const linkedProjectBtnMessage = decodeHTML(langObj.linkedProjectBtnMessage);\n\n  const pageHeader = ReactHtmlParser(decodeHTML(langObj.transferHead));\n\n  // config options\n  const headerBarColor = configObj.headerBarColor;\n\n  useEffect(() => {\n    // format results for transmission\n    try {\n      // finish setup and format results object\n      transmissionResults[\"projectName\"] = configObj.studyTitle;\n      transmissionResults[\"partId\"] = partId;\n      transmissionResults[\"randomId\"] = uuid().substring(0, 12);\n      transmissionResults[\"urlUsercode\"] = urlUsercode;\n      transmissionResults[\"dateTime\"] = results.dateTime;\n      transmissionResults[\"timeLanding\"] = results.timeOnlandingPage;\n      transmissionResults[\"timePresort\"] = results.timeOnpresortPage;\n      transmissionResults[\"timeSort\"] = results.timeOnsortPage;\n\n      if (configObj.setupTarget === \"local\") {\n        transmissionResults[\"partId\"] = localParticipantName;\n        transmissionResults[\"usercode\"] = localUsercode;\n      }\n\n      if (configObj.showPostsort === true) {\n        transmissionResults[\"timePostsort\"] = results.timeOnpostsortPage;\n      }\n\n      if (configObj.showSurvey === true) {\n        transmissionResults[\"timeSurvey\"] = results.timeOnsurveyPage;\n      }\n\n      let numPos = results.npos;\n      if (isNaN(numPos)) {\n        numPos = 0;\n      }\n      let numNeu = results.nneu;\n      if (isNaN(numNeu)) {\n        numNeu = 0;\n      }\n      let numNeg = results.nneg;\n      if (isNaN(numNeg)) {\n        numNeg = 0;\n      }\n\n      transmissionResults[\"npos\"] = numPos;\n      transmissionResults[\"nneu\"] = numNeu;\n      transmissionResults[\"nneg\"] = numNeg;\n\n      // if project included POSTSORT, read in complete sorted results\n      if (configObj.showPostsort) {\n        const newPostsortObject = calculatePostsortResults(\n          resultsPostsort,\n          mapObj,\n          configObj\n        );\n        const keys = Object.keys(newPostsortObject);\n        for (let i = 0; i < keys.length; i++) {\n          transmissionResults[keys[i]] = newPostsortObject[keys[i]];\n        }\n      }\n\n      // if project included SURVEY, read in results\n      if (configObj.showSurvey) {\n        const keys2 = Object.keys(resultsSurvey);\n        for (let ii = 0; ii < keys2.length; ii++) {\n          transmissionResults[keys2[ii]] = resultsSurvey[keys2[ii]];\n        }\n      }\n      transmissionResults[\"sort\"] = results.sort;\n\n      // remove null values to prevent errors\n      for (const property in transmissionResults) {\n        if (\n          transmissionResults[property] === null ||\n          transmissionResults[property] === undefined\n        ) {\n          transmissionResults[property] = \"no data\";\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [\n    results,\n    configObj,\n    localParticipantName,\n    localUsercode,\n    mapObj,\n    partId,\n    resultsPostsort,\n    resultsSurvey,\n    usercode,\n    urlUsercode,\n  ]);\n\n  // early return if data submit success event\n  if (displayGoodbyeMessage === true) {\n    if (configObj.linkToSecondProject === true) {\n      return (\n        <GoodbyeDiv>\n          {ReactHtmlParser(linkedProjectFallbackMessage)}\n          <a\n            id=\"secondProjectLink\"\n            href={`${configObj.secondProjectUrl}/#/?usercode=${urlUsercode}`}\n            style={{ targetNew: \"tab\", textDecoration: \"none\" }}\n          >\n            <StyledButton>\n              {ReactHtmlParser(linkedProjectBtnMessage)}\n            </StyledButton>\n          </a>\n        </GoodbyeDiv>\n      );\n    } else {\n      // *** goodbye message for a normal firebase project ***\n      return (\n        <React.Fragment>\n          <GoodbyeDiv>{ReactHtmlParser(goodbyeMessage)}</GoodbyeDiv>\n        </React.Fragment>\n      );\n    }\n  }\n\n  if (configObj.setupTarget === \"local\") {\n    return (\n      <React.Fragment>\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\n        <LocalSubmitSuccessModal />\n        <ContainerDiv>\n          <SaveLocalDataToLocalStorageButton results={transmissionResults} />\n        </ContainerDiv>\n      </React.Fragment>\n    );\n  } else if (configObj.setupTarget === \"sheets\") {\n    return (\n      <React.Fragment>\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\n        <ContainerDiv>\n          <ContentDiv>{ReactHtmlParser(transferTextAbove)}</ContentDiv>\n          <SubmitButtonGS\n            results={transmissionResults}\n            api={configObj.steinApiUrl}\n          />\n\n          {displaySubmitFallback ? (\n            <SubmitFallback results={transmissionResults} />\n          ) : (\n            <ContentDiv>{ReactHtmlParser(transferTextBelow)}</ContentDiv>\n          )}\n        </ContainerDiv>\n      </React.Fragment>\n    );\n  } else if (configObj.setupTarget === \"email\") {\n    return (\n      <React.Fragment>\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\n        <ContainerDiv>\n          <ContentDiv>{ReactHtmlParser(transferTextAbove)}</ContentDiv>\n          <SubmitButtonEmail results={transmissionResults} />\n        </ContainerDiv>\n      </React.Fragment>\n    );\n  } else {\n    // *** default to FIREBASE ***\n    return (\n      <React.Fragment>\n        <SortTitleBar background={headerBarColor}>{pageHeader}</SortTitleBar>\n        <ContainerDiv>\n          <ContentDiv>{ReactHtmlParser(transferTextAbove)}</ContentDiv>\n          <SubmitButton results={transmissionResults} />\n\n          {displaySubmitFallback ? (\n            <SubmitFallback results={transmissionResults} />\n          ) : (\n            <ContentDiv>{ReactHtmlParser(transferTextBelow)}</ContentDiv>\n          )}\n        </ContainerDiv>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default SubmitPage;\n\nconst SortTitleBar = styled.div`\n  width: calc(100vw-4px);\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n`;\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  min-height: 800px;\n  width: calc(100vw-4px);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2em;\n  width: 85vw;\n  font-size: 1.35em;\n  padding: 25px;\n  align-self: center;\n`;\n\nconst GoodbyeDiv = styled.div`\n  display: flex;\n  width: calc(100vw -20px);\n  height: calc(100vh - 50px);\n  font-size: 22px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst StyledButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.5em;\n  font-weight: bold;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  height: 75px;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n  a {\n    text-decoration: none;\n  }\n`;\n\n/*\n--- Example results object ---\n\n{\n  \"projectName\": \"my Q study\",\n  \"partId\": \"anonymous\",\n  \"randomId\": \"367eee86-f28\",\n  \"usercode\": \"no usercode set\",\n  \"dateTime\": \"no data\",\n  \"timeLanding\": \"no data\",\n  \"timePresort\": \"no data\",\n  \"timeSort\": \"no data\",\n  \"timePostsort\": \"no data\",\n  \"timeSurvey\": \"no data\",\n  \"npos\": 0,\n  \"nneu\": 0,\n  \"nneg\": 0,\n  \"column4_1\": \"no response\",\n  \"column4_2\": \"no response\",\n  \"columnN4_1\": \"no response\",\n  \"columnN4_2\": \"no response\",\n  \"sort\": \"no data\"\n}\nSubmitButton.jsx:60 \n*/\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyTextElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  const checkRequiredQuestionsComplete = props.check;\n  // useStore(\n  //   (state) => state.checkRequiredQuestionsComplete\n  // );\n\n  const requiredAnswersObj = useStore((state) => state.requiredAnswersObj);\n  // const resultsSurvey = useStore((state) => state.resultsSurvey);\n  const setRequiredAnswersObj = useStore(\n    (state) => state.setRequiredAnswersObj\n  );\n\n  // preload \"no response\" in state\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, setResultsSurvey, results]);\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // to force component update\n  const [userText, setUserText] = useState(\"\");\n  if (userText.length > 100) {\n    console.log(userText);\n  }\n\n  // for required question check\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  // event handler\n  const handleOnChange = (e) => {\n    let value = e.target.value;\n    let valueLen = value.length;\n\n    // restrict to numbers\n    if (props.opts.restricted === \"true\" || props.opts.restricted === true) {\n      value = value.replace(/\\D/g, \"\");\n    }\n\n    // limit length\n    if (props.opts.limited === \"true\" || props.opts.limited === true) {\n      if (value.length > +props.opts.limitLength) {\n        value = value.substring(0, +props.opts.limitLength);\n      }\n    }\n    setUserText(value);\n    answersStorage[id] = value;\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (valueLen > 0) {\n      requiredAnswersObj[id] = \"answered\";\n      let sanitizedText = sanitizeString(value);\n      results[`qNum${props.opts.qNum}`] = sanitizedText;\n    } else {\n      results[`qNum${props.opts.qNum}`] = \"no response\";\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  };\n\n  // required question answer check\n  let userTextLen = false;\n  if (id in answersStorage) {\n    let userTextLen1 = answersStorage[id];\n    userTextLen = userTextLen1.length;\n  }\n\n  useEffect(() => {\n    if (\n      checkRequiredQuestionsComplete === true &&\n      userTextLen < 1 &&\n      props.opts.required === true\n    ) {\n      setFormatOptions({\n        bgColor: \"#fde047\",\n        border: \"3px dashed black\",\n      });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, userTextLen, props]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note));\n\n  let inputValue;\n  if (id in answersStorage) {\n    inputValue = answersStorage[id];\n\n    requiredAnswersObj[id] = \"answered\";\n    results[`qNum${props.opts.qNum}`] = inputValue;\n\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  } else {\n    inputValue = \"\";\n  }\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <NoteText>\n        <div>{noteText}</div>\n      </NoteText>\n      <TextInput value={inputValue} onChange={handleOnChange} />\n    </Container>\n  );\n};\n\nexport default SurveyTextElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  min-height: 50px;\n  font-size: 18px;\n  text-align: center;\n  width: 100%;\n  border-radius: 3px;\n  background-color: lightgray;\n`;\n\nconst NoteText = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 5px;\n  height: 50px;\n  font-size: 16px;\n  text-align: center;\n  background-color: whitesmoke;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst TextInput = styled.input`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 5px;\n  height: 50px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport sanitizeString from \"../../utilities/sanitizeString.js\";\nimport useStore from \"../../globalState/useStore.js\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyTextAreaElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  // let savedTextAreaText;\n  const [userText, setUserText] = useState(\"\");\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // ON CHANGE\n  const handleOnChange = (e) => {\n    let value = e.target.value;\n    // value = value.trim();\n    setUserText(value);\n    answersStorage[id] = value;\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (value.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n      let sanitizedText = sanitizeString(value);\n      results[`qNum${props.opts.qNum}`] = sanitizedText;\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n      results[`qNum${props.opts.qNum}`] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  };\n\n  // required question answer check\n  let userTextLen = false;\n  if (id in answersStorage) {\n    let userTextLen1 = answersStorage[id];\n    userTextLen = userTextLen1.length;\n  }\n\n  useEffect(() => {\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      userTextLen < 1\n    ) {\n      setFormatOptions({\n        bgColor: \"#fde047\",\n        border: \"3px dashed black\",\n      });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [\n    checkRequiredQuestionsComplete,\n    userText,\n    userTextLen,\n    props.opts.required,\n  ]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n  const placeholder = props.opts.placeholder;\n\n  // to check for response in global state and inject into results if present\n  let inputValue;\n  if (id in answersStorage) {\n    inputValue = answersStorage[id];\n\n    // record if answered or not\n    requiredAnswersObj[id] = \"answered\";\n    results[`qNum${props.opts.qNum}`] = inputValue;\n\n    setRequiredAnswersObj(requiredAnswersObj);\n    setResultsSurvey(results);\n  } else {\n    inputValue = \"\";\n  }\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <TextAreaInput\n        value={inputValue}\n        placeholder={placeholder}\n        onChange={handleOnChange}\n      />\n    </Container>\n  );\n};\n\nexport default SurveyTextAreaElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: whitesmoke;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst TextAreaInput = styled.textarea`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 0px;\n  height: 150px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n  padding: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nlet getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRadioElement = (props) => {\n  // STATE\n  let results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // local state for required question warning\n  let [testValue, setTestValue] = useState(false);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    // array = array.map((x) => x.replace(/\\s/g, \"\"));\n    array = array.map((x) => x.trim());\n    return array;\n  };\n\n  const optsArray = getOptionsArray(props.opts.options);\n\n  // template\n  const RadioInput = ({ label, value, checked, setter }) => {\n    return (\n      <label>\n        <InputStyleDiv>\n          <input\n            type=\"radio\"\n            checked={checked === value}\n            onChange={() => setter(value)}\n            value={value}\n          />\n          <LabelDiv>\n            <div>{label}</div>\n          </LabelDiv>\n        </InputStyleDiv>\n      </label>\n    );\n  };\n\n  const id = `qNum${props.opts.qNum}`;\n\n  let [selected, setSelected] = useState();\n\n  const handleChange = (e) => {\n    requiredAnswersObj[id] = \"answered\";\n    setRequiredAnswersObj(requiredAnswersObj);\n\n    results[`qNum${props.opts.qNum}`] = +e.target.value + 1;\n\n    answersStorage[`qNum${props.opts.qNum}`] = +e.target.value;\n    setAnswersStorage(answersStorage);\n    setResultsSurvey(results);\n    setTestValue(true);\n  }; // end handle change\n\n  // check if response is in global state and inject into results\n  if (id in answersStorage) {\n    let response = answersStorage[id];\n    selected = response;\n    testValue = true;\n\n    requiredAnswersObj[id] = \"answered\";\n    setRequiredAnswersObj(requiredAnswersObj);\n\n    results[`qNum${props.opts.qNum}`] = +response + 1;\n\n    setResultsSurvey(results);\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue === false\n    ) {\n      setFormatOptions({ bgColor: \"#fde047\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => (\n      <div key={uuid()}>\n        <RadioInput\n          value={index}\n          checked={selected}\n          label={item}\n          setter={setSelected}\n        />\n      </div>\n    ));\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n  const noteText = ReactHtmlParser(decodeHTML(props.opts.note));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <NoteText>\n        <div>{noteText}</div>\n      </NoteText>\n      <RadioContainer onChange={(e) => handleChange(e)}>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRadioElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  min-height: 100px;\n  font-size: 16px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst LabelDiv = styled.div`\n  padding-left: 5px;\n`;\n\nconst InputStyleDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\nconst NoteText = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  vertical-align: center;\n  margin-top: 5px;\n  height: 50px;\n  font-size: 16px;\n  text-align: center;\n  background-color: whitesmoke;\n  width: 100%;\n  border-radius: 3px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MultiSelect from \"react-multi-select-component\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyDropdownElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    const objArray = array.map((x) => {\n      x.replace(/\\s/g, \"\");\n      const tempObj = {};\n      tempObj.label = x;\n      tempObj.value = x;\n      return tempObj;\n    });\n    return objArray;\n  };\n\n  let originalOptions = props.opts.options.split(\";;;\");\n  originalOptions = originalOptions.map((x) => x.trim());\n\n  let localStore = {\n    hasBeenAnswered: false,\n  };\n\n  let [selected, setSelected] = useState([]);\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // HANDLE ON CHANGE\n  const handleOnChange = (e) => {\n    setSelected(e);\n    answersStorage[id] = e;\n    setAnswersStorage(answersStorage);\n\n    if (e.length !== 0) {\n      requiredAnswersObj[id] = \"answered\";\n      let selected2 = \"\";\n      for (let i = 0; i < e.length; i++) {\n        let label = e[i].label;\n        let id = originalOptions.indexOf(label);\n        if (i === 0) {\n          selected2 += id + 1;\n        } else {\n          selected2 += \"|\" + (id + 1);\n        }\n      }\n      results[`qNum${props.opts.qNum}`] = selected2;\n      setResultsSurvey(results);\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n      results[`qNum${props.opts.qNum}`] = \"no response\";\n      setResultsSurvey(results);\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n  };\n\n  if (selected.length > 0) {\n    localStore[\"hasBeenAnswered\"] = true;\n  } else {\n    localStore[\"hasBeenAnswered\"] = false;\n  }\n\n  // required question answered?\n  let hasBeenAnswered = localStore.hasBeenAnswered;\n\n  // check if response in global state and inject into results\n  if (id in answersStorage) {\n    let response = answersStorage[id];\n    selected = response;\n    hasBeenAnswered = true;\n\n    requiredAnswersObj[id] = \"answered\";\n    let selected2 = \"\";\n    for (let i = 0; i < response.length; i++) {\n      let label = response[i].label;\n      let id = originalOptions.indexOf(label);\n      if (i === 0) {\n        selected2 += id + 1;\n      } else {\n        selected2 += \"|\" + (id + 1);\n      }\n    }\n    results[`qNum${props.opts.qNum}`] = selected2;\n    setResultsSurvey(results);\n  }\n\n  useEffect(() => {\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      hasBeenAnswered === false\n    ) {\n      setFormatOptions({\n        bgColor: \"#fde047\",\n        border: \"3px dashed black\",\n      });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, hasBeenAnswered, props.opts.required]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <MultiSelect\n        className={\"multiselect\"}\n        options={getOptionsArray(props.opts.options)}\n        labelledBy=\"Select\"\n        onChange={handleOnChange}\n        value={selected}\n      />\n    </Container>\n  );\n};\n\nexport default SurveyDropdownElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 125px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n\n  .multiselect {\n    font-size: 16px;\n    line-height: 1.1em;\n  }\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyCheckboxElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"no response\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  let [hasBeenAnswered, setHasBeenAnswered] = useState(false);\n\n  let localStore = {};\n\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    array.map((x) => (localStore[x] = false));\n    return array;\n  };\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const nameValue = `question${props.opts.qNum}`;\n\n  let [checkedState, setCheckedState] = useState(\n    new Array(optsArray.length).fill(false)\n  );\n\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // HANDLE CHANGE\n  const handleChange = (position) => {\n    position = parseInt(position, 10);\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedState(updatedCheckedState);\n    answersStorage[id] = updatedCheckedState;\n    setAnswersStorage(answersStorage);\n\n    let selected = updatedCheckedState.reduce(\n      (text = \"\", currentState, index) => {\n        if (currentState === true) {\n          return text + (index + 1).toString() + \"|\";\n        }\n        return text;\n      },\n      \"\"\n    );\n\n    if (selected.charAt(selected.length - 1) === \"|\") {\n      selected = selected.substr(0, selected.length - 1);\n    }\n\n    if (selected.length > 0) {\n      setHasBeenAnswered(true);\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      setHasBeenAnswered(false);\n\n      requiredAnswersObj[id] = \"no response\";\n      selected = \"no response\";\n    }\n\n    results[`qNum${props.opts.qNum}`] = selected;\n    setResultsSurvey(results);\n    setRequiredAnswersObj(requiredAnswersObj);\n  };\n\n  if (id in answersStorage) {\n    let response = answersStorage[id];\n\n    checkedState = response;\n    hasBeenAnswered = true;\n\n    let selected = response.reduce((text = \"\", currentState, index) => {\n      if (currentState === true) {\n        return text + (index + 1).toString() + \"|\";\n      }\n      return text;\n    }, \"\");\n\n    if (selected.charAt(selected.length - 1) === \"|\") {\n      selected = selected.substring(0, selected.length - 1);\n    }\n\n    requiredAnswersObj[id] = \"answered\";\n\n    results[`qNum${props.opts.qNum}`] = selected;\n\n    setResultsSurvey(results);\n    setRequiredAnswersObj(requiredAnswersObj);\n  }\n\n  useEffect(() => {\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      hasBeenAnswered === false\n    ) {\n      setFormatOptions({ bgColor: \"#fde047\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, hasBeenAnswered, props.opts.required]);\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        {optsArray.map((item, index) => {\n          return (\n            <div key={uuid()}>\n              <input\n                id={`${item}-${index}`}\n                type=\"checkbox\"\n                value={item}\n                name={nameValue}\n                checked={checkedState[index]}\n                onChange={() => handleChange(index)}\n              />\n              <label htmlFor={`${item}-${index}`}>{item}</label>\n            </div>\n          );\n        })}\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyCheckboxElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 150px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  min-height: 120px;\n  font-size: 16px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRatings2Element = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // local state for required question warning\n  let [testValue, setTestValue] = useState(5);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  // setup default results if no input\n  useEffect(() => {\n    let array = props.opts.options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n\n    const length = array.length;\n\n    for (let i = 0; i < length; i++) {\n      results[`qNum${props.opts.qNum}-${i + 1}`] = \"no response\";\n    }\n\n    setResultsSurvey(results);\n  }, [props, setResultsSurvey, results]);\n\n  // filter to remove empty strings if present\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    return array;\n  };\n\n  // to use with required check and related css formatting\n  const [localStore, setLocalStore] = useState({});\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const rows = optsArray.length;\n\n  const getScaleArray = (options) => {\n    let array = options.split(\";;;\");\n    return array;\n  };\n  const scaleArray = getScaleArray(props.opts.scale);\n\n  // setup local state\n  let [checkedState, setCheckedState] = useState(\n    Array.from({ length: rows }, () => Array.from({ length: 2 }, () => false))\n  );\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // ****** ON CHANGE  *******\n\n  const handleChange = (selectedRow, column, e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // needed for required question check\n    const newObj = localStore;\n    newObj[name] = value;\n    setLocalStore(newObj);\n    answersStorage[id] = newObj;\n\n    // update local state with radio selected\n    const newArray = [];\n    const newCheckedState = checkedState.map(function (row, index) {\n      if (selectedRow === index) {\n        row.map(function (item, index) {\n          if (column === index) {\n            newArray.push(true);\n            return null;\n          } else {\n            newArray.push(false);\n            return null;\n          }\n        });\n        return newArray;\n      } else {\n        return row;\n      }\n    });\n\n    setCheckedState(newCheckedState);\n    answersStorage[id][\"checkedState\"] = [...newCheckedState];\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (newCheckedState.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    results[name] = +value;\n    setResultsSurvey(results);\n\n    const rating2State = localStore;\n    const testArray = Object.keys(rating2State);\n    const conditionalLength = testArray.length;\n    setTestValue(optsArray.length - conditionalLength);\n  };\n\n  if (id in answersStorage) {\n    // set state - answered or no response (checks all parts)\n    const keys2 = Object.keys(answersStorage[id]);\n\n    // skip check that all answered if not required\n    // prevents error in which answering only one\n    // prevents navigation\n    if (props.opts.required === true || props.opts.required === \"true\") {\n      let objLen = keys2.length - 1;\n      if (objLen >= rows) {\n        testValue = 0;\n        requiredAnswersObj[id] = \"answered\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      } else {\n        testValue = 1;\n        requiredAnswersObj[id] = \"no response\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      }\n    }\n\n    keys2.forEach((item, index) => {\n      if (item !== \"checkedState\") {\n        results[item] = answersStorage[id][item];\n      }\n    });\n\n    checkedState = [...answersStorage[id][\"checkedState\"]];\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue > 0\n    ) {\n      setFormatOptions({ bgColor: \"#fde047\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => {\n      const itemText = ReactHtmlParser(decodeHTML(item));\n      return (\n        <ItemContainer indexVal={index} key={uuid()}>\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\n          <RadioInput\n            key={uuid()}\n            id={`Q-${index}`}\n            type=\"radio\"\n            value={1}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 0, e)}\n            checked={checkedState[index][0]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q2-${index}`}\n            type=\"radio\"\n            value={2}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 1, e)}\n            checked={checkedState[index][1]}\n          />\n        </ItemContainer>\n      );\n    });\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        <RatingTitle>\n          <div />\n          <ScaleDiv>\n            <div>{ReactHtmlParser(decodeHTML(scaleArray[0]))}</div>\n          </ScaleDiv>\n          <ScaleDiv>\n            <div>{ReactHtmlParser(decodeHTML(scaleArray[1]))}</div>\n          </ScaleDiv>\n        </RatingTitle>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRatings2Element;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  height: auto;\n  min-height: 50px;\n  font-size: 16px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 100px 100px 150px;\n  margin-bottom: 17px;\n  padding-left: 5px;\n  padding-bottom: 8px;\n  height: 40px;\n  align-items: end;\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\n`;\n\nconst RatingTitle = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 100px 100px 150px;\n  margin-bottom: 7px;\n`;\n\nconst ScaleDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RadioInput = styled.input`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  border: 0px;\n  width: 100%;\n  height: 1.4em;\n`;\n\nconst OptionsText = styled.span`\n  margin-bottom: 2px;\n  padding-left: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRatings5Element = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // let savedTextAreaText;\n  let [testValue, setTestValue] = useState(5);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  useEffect(() => {\n    let array = props.opts.options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    const length = array.length;\n    for (let i = 0; i < length; i++) {\n      results[`qNum${props.opts.qNum}-${i + 1}`] = \"no response\";\n    }\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  // filter to remove empty strings if present\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    return array;\n  };\n\n  // to use with required check and related css formating\n  const [local5Store, setLocal5Store] = useState({});\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const rows = optsArray.length;\n\n  // setup local state with length 5\n  let [checked5State, setChecked5State] = useState(\n    Array.from({ length: rows }, () => Array.from({ length: 5 }, () => false))\n  );\n\n  const id = `qNum${props.opts.qNum}`;\n\n  // HANDLE CHANGE\n  const handleChange = (selectedRow, column, e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // needed for required question check\n    const newObj = local5Store;\n    newObj[name] = value;\n    setLocal5Store(newObj);\n    answersStorage[id] = newObj;\n\n    // update local state with radio selected\n    const newArray = [];\n    const newChecked5State = checked5State.map(function (row, index) {\n      if (selectedRow === index) {\n        row.map(function (item, index) {\n          if (column === index) {\n            newArray.push(true);\n            return null;\n          } else {\n            newArray.push(false);\n            return null;\n          }\n        });\n        return newArray;\n      } else {\n        return row;\n      }\n    });\n    setChecked5State(newChecked5State);\n\n    answersStorage[id][\"checkedState\"] = [...newChecked5State];\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (newChecked5State.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    results[name] = +value;\n\n    setResultsSurvey(results);\n\n    // if is a required question, check if all parts answered\n    // const rating5State = local5Store;\n    const testArray = Object.keys(local5Store);\n    const conditionalLength = testArray.length;\n    setTestValue(optsArray.length - conditionalLength);\n  };\n\n  if (id in answersStorage) {\n    const keys2 = Object.keys(answersStorage[id]);\n\n    // skip check that all answered if not required\n    // prevents error in which answering only one\n    // prevents navigation\n    if (props.opts.required === true || props.opts.required === \"true\") {\n      let objLen = keys2.length - 1;\n      if (objLen >= rows) {\n        testValue = 0;\n        requiredAnswersObj[id] = \"answered\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      } else {\n        testValue = 1;\n        requiredAnswersObj[id] = \"no response\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      }\n    }\n\n    keys2.forEach((item, index) => {\n      if (item !== \"checkedState\") {\n        results[item] = answersStorage[id][item];\n      }\n    });\n\n    checked5State = [...answersStorage[id][\"checkedState\"]];\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue > 0\n    ) {\n      setFormatOptions({ bgColor: \"#fde047\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => {\n      const itemText = ReactHtmlParser(decodeHTML(item));\n      return (\n        <ItemContainer indexVal={index} key={uuid()}>\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\n          <RadioInput\n            key={uuid()}\n            id={`Q-${index}`}\n            type=\"radio\"\n            value={1}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 0, e)}\n            checked={checked5State[index][0]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q2-${index}`}\n            type=\"radio\"\n            value={2}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 1, e)}\n            checked={checked5State[index][1]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q3-${index}`}\n            type=\"radio\"\n            value={3}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 2, e)}\n            checked={checked5State[index][2]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q4-${index}`}\n            type=\"radio\"\n            value={4}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 3, e)}\n            checked={checked5State[index][3]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q5-${index}`}\n            type=\"radio\"\n            value={5}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 4, e)}\n            checked={checked5State[index][4]}\n          />\n        </ItemContainer>\n      );\n    });\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        <RatingTitle>\n          <div />\n          <CircleDiv>1</CircleDiv>\n          <CircleDiv>2</CircleDiv>\n          <CircleDiv>3</CircleDiv>\n          <CircleDiv>4</CircleDiv>\n          <CircleDiv>5</CircleDiv>\n        </RatingTitle>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRatings5Element;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  height: auto;\n  min-height: 50px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 50px 50px 50px 50px 50px 50px;\n  margin-bottom: 17px;\n  padding-bottom: 8px;\n  height: 40px;\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\n  font-size: 16px;\n  align-items: end;\n`;\n\nconst RatingTitle = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 900px) 50px 50px 50px 50px 50px 50px;\n  margin-bottom: 7px;\n  align-items: end;\n`;\n\nconst RadioInput = styled.input`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n  border: 0px;\n  width: 100%;\n  height: 1.4em;\n`;\n\nconst CircleDiv = styled.div`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n`;\n\nconst OptionsText = styled.span`\n  margin-bottom: 2px;\n  padding-left: 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\nconst getCheckReqQsComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getAnswersStorage = (state) => state.answersStorage;\nconst getSetAnswersStorage = (state) => state.setAnswersStorage;\n\nconst SurveyRatings10Element = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQsComplete);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useStore(getSetRequiredAnswersObj);\n  const answersStorage = useStore(getAnswersStorage);\n  const setAnswersStorage = useStore(getSetAnswersStorage);\n\n  // local state for required question warning\n  let [testValue, setTestValue] = useState(5);\n  const [formatOptions, setFormatOptions] = useState({\n    bgColor: \"whitesmoke\",\n    border: \"none\",\n  });\n\n  useEffect(() => {\n    let array = props.opts.options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n\n    const length = array.length;\n\n    for (let i = 0; i < length; i++) {\n      results[`qNum${props.opts.qNum}-${i + 1}`] = \"no response\";\n    }\n\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  // filter to remove empty strings if present\n  const getOptionsArray = (options) => {\n    let array = options.split(\";;;\");\n    array = array.filter(function (e) {\n      return e;\n    });\n    return array;\n  };\n\n  // to use with required check and related css formating\n  const [localStore, setLocalStore] = useState({});\n\n  const optsArray = getOptionsArray(props.opts.options);\n  const rows = optsArray.length;\n\n  // setup local state\n  let [checkedState, setCheckedState] = useState(\n    Array.from({ length: rows }, () => Array.from({ length: 10 }, () => false))\n  );\n\n  const id = `qNum${props.opts.qNum}`;\n\n  const handleChange = (selectedRow, column, e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    // needed for required question check\n    const newObj = localStore;\n    newObj[name] = value;\n    setLocalStore(newObj);\n    answersStorage[id] = newObj;\n\n    // update local state with radio selected\n    const newArray = [];\n    const newCheckedState = checkedState.map(function (row, index) {\n      if (selectedRow === index) {\n        row.map(function (item, index) {\n          if (column === index) {\n            newArray.push(true);\n            return null;\n          } else {\n            newArray.push(false);\n            return null;\n          }\n        });\n        return newArray;\n      } else {\n        return row;\n      }\n    });\n    setCheckedState(newCheckedState);\n\n    answersStorage[id][\"checkedState\"] = [...newCheckedState];\n    setAnswersStorage(answersStorage);\n\n    // record if answered or not\n    if (newCheckedState.length > 0) {\n      requiredAnswersObj[id] = \"answered\";\n    } else {\n      requiredAnswersObj[id] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n    results[name] = +value;\n    setResultsSurvey(results);\n\n    // if is a required question, check if all parts answered\n    const ratingState = localStore;\n    const testArray = Object.keys(ratingState);\n    const conditionalLength = testArray.length;\n    setTestValue(optsArray.length - conditionalLength);\n  };\n\n  if (id in answersStorage) {\n    const keys2 = Object.keys(answersStorage[id]);\n\n    // skip check that all answered if not required\n    // prevents error in which answering only one\n    // prevents navigation\n    if (props.opts.required === true || props.opts.required === \"true\") {\n      let objLen = keys2.length - 1;\n      if (objLen >= rows) {\n        testValue = 0;\n        requiredAnswersObj[id] = \"answered\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      } else {\n        testValue = 1;\n        requiredAnswersObj[id] = \"no response\";\n        setRequiredAnswersObj(requiredAnswersObj);\n      }\n    }\n    keys2.forEach((item, index) => {\n      if (item !== \"checkedState\") {\n        results[item] = answersStorage[id][item];\n      }\n    });\n\n    checkedState = [...answersStorage[id][\"checkedState\"]];\n  }\n\n  useEffect(() => {\n    // if is a required question, check if all parts answered\n    if (\n      (props.opts.required === true || props.opts.required === \"true\") &&\n      checkRequiredQuestionsComplete === true &&\n      testValue > 0\n    ) {\n      setFormatOptions({ bgColor: \"#fde047\", border: \"3px dashed black\" });\n    } else {\n      setFormatOptions({\n        bgColor: \"whitesmoke\",\n        border: \"none\",\n      });\n    }\n  }, [checkRequiredQuestionsComplete, testValue, props.opts.required]);\n\n  const RadioItems = () => {\n    const radioList = optsArray.map((item, index) => {\n      const itemText = ReactHtmlParser(decodeHTML(item));\n      return (\n        <ItemContainer indexVal={index} key={uuid()}>\n          <OptionsText key={uuid()}>{itemText}</OptionsText>\n          <RadioInput\n            key={uuid()}\n            id={`Q-${index}`}\n            type=\"radio\"\n            value={1}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 0, e)}\n            checked={checkedState[index][0]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q2-${index}`}\n            type=\"radio\"\n            value={2}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 1, e)}\n            checked={checkedState[index][1]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q3-${index}`}\n            type=\"radio\"\n            value={3}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 2, e)}\n            checked={checkedState[index][2]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q4-${index}`}\n            type=\"radio\"\n            value={4}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 3, e)}\n            checked={checkedState[index][3]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q5-${index}`}\n            type=\"radio\"\n            value={5}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 4, e)}\n            checked={checkedState[index][4]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q6-${index}`}\n            type=\"radio\"\n            value={6}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 5, e)}\n            checked={checkedState[index][5]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q7-${index}`}\n            type=\"radio\"\n            value={7}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 6, e)}\n            checked={checkedState[index][6]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q8-${index}`}\n            type=\"radio\"\n            value={8}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 7, e)}\n            checked={checkedState[index][7]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q9-${index}`}\n            type=\"radio\"\n            value={9}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 8, e)}\n            checked={checkedState[index][8]}\n          />\n          <RadioInput\n            key={uuid()}\n            id={`Q10-${index}`}\n            type=\"radio\"\n            value={10}\n            name={`qNum${props.opts.qNum}-${index + 1}`}\n            onChange={(e) => handleChange(index, 9, e)}\n            checked={checkedState[index][9]}\n          />\n        </ItemContainer>\n      );\n    });\n    return <div>{radioList}</div>;\n  };\n\n  const labelText = ReactHtmlParser(decodeHTML(props.opts.label));\n\n  return (\n    <Container bgColor={formatOptions.bgColor} border={formatOptions.border}>\n      <TitleBar>\n        <div>{labelText}</div>\n      </TitleBar>\n      <RadioContainer>\n        <RatingTitle>\n          <div />\n          <CircleDiv>1</CircleDiv>\n          <CircleDiv>2</CircleDiv>\n          <CircleDiv>3</CircleDiv>\n          <CircleDiv>4</CircleDiv>\n          <CircleDiv>5</CircleDiv>\n          <CircleDiv>6</CircleDiv>\n          <CircleDiv>7</CircleDiv>\n          <CircleDiv>8</CircleDiv>\n          <CircleDiv>9</CircleDiv>\n          <CircleDiv>10</CircleDiv>\n        </RatingTitle>\n        <RadioItems />\n      </RadioContainer>\n    </Container>\n  );\n};\n\nexport default SurveyRatings10Element;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  min-height: 200px;\n  background-color: ${(props) => props.bgColor};\n  outline: ${(props) => props.border};\n  outline-offset: -3px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 50px;\n  padding: 5px;\n  font-size: 18px;\n  text-align: center;\n  background-color: lightgray;\n  width: 100%;\n  border-radius: 3px;\n`;\n\nconst RadioContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  align-items: left;\n  padding: 20px;\n  vertical-align: center;\n  margin-top: 0px;\n  height: auto;\n  min-height: 50px;\n  font-size: 18px;\n  background-color: white;\n  width: 100%;\n  border-radius: 3px;\n  border: 2px solid lightgray;\n\n  input {\n    margin-top: 8px;\n  }\n\n  label {\n    margin-left: 8px;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 800px) 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px;\n  margin-bottom: 17px;\n  font-size: 16px;\n  align-items: end;\n  padding-bottom: 8px;\n  height: 40px;\n  background-color: ${(props) => (props.indexVal % 2 ? \"white\" : \"#ececec\")};\n  border-radius: 3px;\n`;\n\nconst RatingTitle = styled.div`\n  display: inline-grid;\n  grid-template-columns: minmax(30%, 800px) 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px 40px;\n  margin-bottom: 7px;\n  align-items: end;\n`;\n\nconst CircleDiv = styled.div`\n  display: flex;\n  justify-self: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst RadioInput = styled.input`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  text-align: center;\n  border: 0px;\n  width: 100%;\n  height: 1.4em;\n`;\n\nconst OptionsText = styled.span`\n  margin-bottom: 2px;\n  padding-left: 5px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getResults = (state) => state.resultsSurvey;\nconst getSetResultsSurvey = (state) => state.setResultsSurvey;\n\nconst SurveyInformationElement = (props) => {\n  // STATE\n  const results = useStore(getResults);\n  const setResultsSurvey = useStore(getSetResultsSurvey);\n\n  useEffect(() => {\n    results[`qNum${props.opts.qNum}`] = \"info. - na\";\n    setResultsSurvey(results);\n  }, [props, results, setResultsSurvey]);\n\n  const infoText = ReactHtmlParser(decodeHTML(props.opts.options));\n\n  return (\n    <Container>\n      <TitleBar backgroundColor={props.opts.background}>\n        <div>{infoText}</div>\n      </TitleBar>\n    </Container>\n  );\n};\n\nexport default SurveyInformationElement;\n\nconst Container = styled.div`\n  width: 90vw;\n  padding: 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  max-width: 1300px;\n  background-color: whitesmoke;\n  min-height: 50px;\n`;\n\nconst TitleBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  min-height: 50px;\n  font-size: 18px;\n  text-align: center;\n  background-color: ${(props) => props.backgroundColor || \"lightgray\"};\n  width: 100%;\n  border-radius: 3px;\n`;\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerModalOpen = (state) => state.triggerSurveyPreventNavModal;\nconst getSetTrigSurvPrevNavModal = (state) =>\n  state.setTriggerSurveyPreventNavModal;\n\nconst AnswerAllSurveyQuestionsModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerModalOpen = useStore(getTriggerModalOpen);\n  const setTriggerSurveyPreventNavModal = useStore(getSetTrigSurvPrevNavModal);\n\n  const modalHead = ReactHtmlParser(\n    decodeHTML(langObj.surveyPreventNavModalHead)\n  );\n  const modalText = ReactHtmlParser(\n    decodeHTML(langObj.surveyPreventNavModalText)\n  );\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSurveyPreventNavModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerModalOpen}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{modalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{modalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default AnswerAllSurveyQuestionsModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n`;\n\n// react-responsive-modal-overlay\n","import React from \"react\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getTriggerSurveyModal = (state) => state.triggerSurveyModal;\nconst getSetTriggerSurveyModal = (state) => state.setTriggerSurveyModal;\n\nconst SurveyHelpModal = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const triggerSurveyModal = useStore(getTriggerSurveyModal);\n  const setTriggerSurveyModal = useStore(getSetTriggerSurveyModal);\n\n  const helpModalHead = ReactHtmlParser(decodeHTML(langObj.surveyModalHead));\n  const helpModalText = ReactHtmlParser(decodeHTML(langObj.surveyModalText));\n\n  // const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setTriggerSurveyModal(false);\n  };\n\n  return (\n    <Modal\n      className=\"customModal\"\n      open={triggerSurveyModal}\n      onClose={onCloseModal}\n      center\n    >\n      <ModalHeader>{helpModalHead}</ModalHeader>\n      <hr />\n      <ModalContent>{helpModalText}</ModalContent>\n    </Modal>\n  );\n};\n\nexport default SurveyHelpModal;\n\nconst ModalHeader = styled.div`\n  font-size: 24px;\n  line-height: 1.42;\n  padding: 10px 0px 10px 0px;\n\n  hr {\n    color: black;\n  }\n`;\n\nconst ModalContent = styled.div`\n  margin-top: 15px;\n  font-weight: normal;\n`;\n\n// react-responsive-modal-overlay\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SurveyTextElement from \"./SurveyTextElement\";\nimport SurveyTextAreaElement from \"./SurveyTextAreaElement\";\nimport SurveyRadioElement from \"./SurveyRadioElement\";\nimport SurveyDropdownElement from \"./SurveyDropdownElement\";\nimport SurveyCheckboxElement from \"./SurveyCheckboxElement\";\nimport SurveyRating2Element from \"./SurveyRating2Element\";\nimport SurveyRating5Element from \"./SurveyRating5Element\";\nimport SurveyRating10Element from \"./SurveyRating10Element\";\nimport SurveyInformationElement from \"./SurveyInformationElement\";\nimport { v4 as uuid } from \"uuid\";\nimport calculateTimeOnPage from \"../../utilities/calculateTimeOnPage\";\nimport AnswerAllSurveyQuestionsModal from \"./AnswerAllSurveyQuestionsModal\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport SurveyHelpModal from \"./SurveyHelpModal\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport PromptUnload from \"../../utilities/PromptUnload\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getSurveyQuestionObjArray = (state) => state.surveyQuestionObjArray;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getSetCurrentPage = (state) => state.setCurrentPage;\nconst getCheckReqQuesComplete = (state) => state.checkRequiredQuestionsComplete;\nconst getResults = (state) => state.results;\nconst getSetResults = (state) => state.setResults;\nconst getSetDisplayNextButton = (state) => state.setDisplayNextButton;\n\nconst SurveyPage = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  const surveyQuestionObjArray = useSettingsStore(getSurveyQuestionObjArray);\n  const requiredAnswersObj = useSettingsStore(getRequiredAnswersObj);\n  const setRequiredAnswersObj = useSettingsStore(getSetRequiredAnswersObj);\n  const setCurrentPage = useStore(getSetCurrentPage);\n  const checkRequiredQuestionsComplete = useStore(getCheckReqQuesComplete);\n  const results = useStore(getResults);\n  const setResults = useStore(getSetResults);\n  const setDisplayNextButton = useStore(getSetDisplayNextButton);\n\n  const headerBarColor = configObj.headerBarColor;\n  const surveyQuestionObjects = surveyQuestionObjArray;\n\n  // setup language\n  const surveyHeader = ReactHtmlParser(decodeHTML(langObj.surveyHeader));\n\n  // set next button display\n  setDisplayNextButton(true);\n\n  useEffect(() => {\n    // reset required questions if page return\n    let keys = Object.keys(requiredAnswersObj);\n    for (let i = 0; i < keys.length; i++) {\n      requiredAnswersObj[keys[i]] = \"no response\";\n    }\n    setRequiredAnswersObj(requiredAnswersObj);\n  }, [setRequiredAnswersObj, requiredAnswersObj]);\n\n  useEffect(() => {\n    let startTime;\n    startTime = Date.now();\n    setCurrentPage(\"survey\");\n\n    return () => {\n      const updatedResults = calculateTimeOnPage(\n        startTime,\n        \"surveyPage\",\n        \"surveyPage\",\n        results\n      );\n      setResults(updatedResults);\n    };\n  }, [setCurrentPage, results, setResults]);\n\n  const SurveyQuestions = () => {\n    if (!surveyQuestionObjects) {\n      return <NoQuestionsDiv>No questions added.</NoQuestionsDiv>;\n    } else {\n      const QuestionList = surveyQuestionObjects.map((object, index) => {\n        if (object.type === \"text\") {\n          return (\n            <SurveyTextElement\n              key={uuid()}\n              check={checkRequiredQuestionsComplete}\n              opts={object}\n            />\n          );\n        }\n        if (object.type === \"textarea\") {\n          return <SurveyTextAreaElement key={uuid()} opts={object} />;\n        }\n        if (object.type === \"radio\") {\n          return <SurveyRadioElement key={uuid()} opts={object} />;\n        }\n        if (object.type === \"select\") {\n          return <SurveyDropdownElement key={uuid()} opts={object} />;\n        }\n        if (object.type === \"checkbox\") {\n          return <SurveyCheckboxElement key={uuid()} opts={object} />;\n        }\n        if (object.type === \"rating2\") {\n          return <SurveyRating2Element key={uuid()} opts={object} />;\n        }\n        if (object.type === \"rating5\") {\n          return <SurveyRating5Element key={uuid()} opts={object} />;\n        }\n        if (object.type === \"rating10\") {\n          return <SurveyRating10Element key={uuid()} opts={object} />;\n        }\n        if (object.type === \"information\") {\n          return <SurveyInformationElement key={uuid()} opts={object} />;\n        }\n        return null;\n      });\n      return QuestionList;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PromptUnload />\n      <SurveyHelpModal />\n      <AnswerAllSurveyQuestionsModal />\n      <SortTitleBar background={headerBarColor}>{surveyHeader}</SortTitleBar>\n      <Container>\n        <SurveyQuestions />\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default SurveyPage;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 150px;\n  margin-top: 50px;\n`;\n\nconst SortTitleBar = styled.div`\n  width: 100vw;\n  padding-left: 1.5vw;\n  padding-right: 1.5vw;\n  padding-top: 5px;\n  min-height: 50px;\n  background-color: ${(props) => props.background};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-weight: bold;\n  font-size: 28px;\n  position: fixed;\n  top: 0;\n  z-index: 9999;\n`;\n\nconst NoQuestionsDiv = styled.div`\n  margin-top: 50px;\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import React from \"react\";\nclass NonExistentPage extends React.Component {\n  render() {\n    return (\n      <div>\n        {\" \"}\n        <h1>404</h1> <p>Page doesn't exist</p>\n      </div>\n    );\n  }\n}\nexport default NonExistentPage;\n","import useStore from \"../globalState/useStore\";\n\nconst processConfigXMLData = (dataObject) => {\n  const data = dataObject.elements[0].elements;\n  const configObj = {};\n  let surveyQuestionArray;\n\n  let surveyData = [];\n  for (let i = 0; i < data.length; i++) {\n    let value;\n\n    let tempObj = data[i];\n\n    let key = data[i].attributes.id;\n\n    // separate out survey questions\n    if (key === \"survey\") {\n      surveyData.push([...data[i].elements]);\n    }\n\n    // if it has a value in the XML file ==> no empty strings\n    if (\"elements\" in tempObj) {\n      value = data[i].elements[0].text;\n\n      // for all non-survey keys\n      if (key !== \"survey\") {\n        // deal with the array values\n        if (\n          key === \"columnHeadersColorsArray\" ||\n          key === \"columnColorsArray\" ||\n          key === \"qSortHeaderNumbers\" ||\n          key === \"qSortHeaders\" ||\n          key === \"qSortPattern\"\n        ) {\n        } else {\n          // for all others...\n          // convert string values -  boolean or number\n          if (value === \"true\") {\n            value = true;\n          } else if (value === \"false\") {\n            value = false;\n          } else if (!isNaN(value)) {\n            value = +value;\n          }\n          configObj[key] = value;\n        }\n      }\n    }\n  }\n\n  // setup survey object\n  const requiredAnswersObj = {};\n  if (surveyData.length > 0) {\n    surveyQuestionArray = [];\n    for (let j = 0; j < surveyData.length; j++) {\n      let tempObj = {};\n      // let tempObj2 = {};\n      let questionType = surveyData[j][0].attributes.type;\n\n      // INFORMATION question\n      if (questionType === \"information\") {\n        tempObj.qNum = j + 1;\n        tempObj.type = \"information\";\n        tempObj.background = surveyData[j][1].attributes.bg;\n\n        try {\n          tempObj.options = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // TEXT question\n      if (questionType === \"text\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"text\";\n        tempObj.required = isRequired;\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.note = surveyData[j][2].elements[0].text;\n        } catch (error) {\n          tempObj.note = \"\";\n        }\n\n        try {\n          tempObj.limitLength = JSON.parse(\n            surveyData[j][0].attributes.maxlength\n          );\n        } catch (error) {\n          console.log(error);\n          tempObj.limitLength = \"999\";\n        }\n\n        try {\n          tempObj.restricted = surveyData[j][0].attributes.restricted;\n        } catch (error) {\n          console.log(error);\n          tempObj.restricted = \"false\";\n        }\n\n        try {\n          tempObj.limited = surveyData[j][0].attributes.limited;\n        } catch (error) {\n          console.log(error);\n          tempObj.limited = \"false\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // TEXTAREA question\n      if (questionType === \"textarea\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"textarea\";\n\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = false;\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.placeholder = surveyData[j][2].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.placeholder = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RADIO question\n      if (questionType === \"radio\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"radio\";\n\n        try {\n          tempObj.required = JSON.parse(surveyData[j][0].attributes.required);\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.note = surveyData[j][2].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.note = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // SELECT question\n      if (questionType === \"select\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"select\";\n\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // CHECKBOX question\n      if (questionType === \"checkbox\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"checkbox\";\n        try {\n          tempObj.required = JSON.parse(surveyData[j][0].attributes.required);\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RATING2 question\n      if (questionType === \"rating2\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"rating2\";\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.scale = surveyData[j][0].attributes.scale;\n        } catch (error) {\n          console.log(error);\n          tempObj.scale = \"Yes;;;No\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RATING5 question\n      if (questionType === \"rating5\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"rating5\";\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n\n      // RATING10 question\n      if (questionType === \"rating10\") {\n        tempObj.id = `qNum${j + 1}`;\n        let isRequired = JSON.parse(surveyData[j][0].attributes.required);\n        if (isRequired === \"true\" || isRequired === true) {\n          isRequired = true;\n          requiredAnswersObj[`qNum${j + 1}`] = \"no response\";\n        }\n        tempObj.qNum = j + 1;\n        tempObj.type = \"rating10\";\n        try {\n          tempObj.required = surveyData[j][0].attributes.required;\n        } catch (error) {\n          console.log(error);\n          tempObj.required = \"false\";\n        }\n\n        try {\n          tempObj.label = surveyData[j][1].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.label = \"\";\n        }\n\n        try {\n          tempObj.options = surveyData[j][0].elements[0].text;\n        } catch (error) {\n          console.log(error);\n          tempObj.options = \"\";\n        }\n\n        tempObj.hasBeenAnswered = false;\n\n        surveyQuestionArray.push(tempObj);\n      }\n    }\n    useStore.setState({ requiredAnswersObj: requiredAnswersObj });\n    useStore.setState({ surveyQuestionObjArray: surveyQuestionArray });\n  }\n  console.log(configObj);\n  let returnObj = {};\n  let shuffleCards = configObj?.shuffleCards;\n  returnObj.requiredAnswersObj = requiredAnswersObj;\n  returnObj.configObj = configObj;\n  returnObj.surveyQuestionObjArray = surveyQuestionArray;\n  returnObj.shuffleCards = shuffleCards;\n  return returnObj;\n};\n\nexport default processConfigXMLData;\n\n// https://stackoverflow.com/questions/7936480/how-to-check-if-a-javascript-object-contains-null-value-or-it-itself-is-null\n","import useStore from \"../globalState/useStore\";\n\nconst processMapXMLData = (dataObject) => {\n  const mapObj = {};\n  const data = dataObject.map;\n  const vColsObj = {};\n  const colInfoArray = [];\n\n  // COLUMN LOOP -> get card counts per column\n  for (let i = 0; i < data.column.length; i++) {\n    let keyVal;\n    let label = data.column[i]._attributes.id;\n    let labelInt = parseInt(label, 10);\n    if (labelInt < 0) {\n      keyVal = `columnN${Math.abs(labelInt)}`;\n      vColsObj[keyVal] = [];\n    } else {\n      keyVal = `column${labelInt}`;\n      vColsObj[keyVal] = [];\n    }\n    let tempObj = {};\n    tempObj.colNum = i + 1;\n    tempObj.label = label;\n    tempObj.colour = `#${data.column[i]._attributes.colour}`;\n    tempObj.numCards = data.column[i]._text;\n    colInfoArray.push(tempObj);\n  }\n\n  // ITEM LOOP -> get color arrays and q sort pattern\n  for (let j = 0; j < data.item.length; j++) {\n    let splitArray = [];\n    let value = data.item[j]._text;\n    let key = data.item[j]._attributes.id;\n    // numerical array ==> convert to integers\n    if (key === \"qSortPattern\") {\n      splitArray = value.split(\",\").map((x) => +x);\n    } else {\n      splitArray = value.split(\",\");\n    }\n    mapObj[key] = splitArray;\n  }\n\n  // create converter object for postsort\n  const postsortConvertObj = {};\n  const headerNumbers = [...mapObj.qSortHeaders];\n  for (let j = 0; j < headerNumbers.length; j++) {\n    let key = `column${headerNumbers[j]}`;\n    postsortConvertObj[key] = mapObj.qSortHeaderNumbers[j];\n  }\n  mapObj.postsortConvertObj = postsortConvertObj;\n\n  useStore.setState({ vColsObj: vColsObj });\n  const returnObj = {};\n  returnObj.vColsObj = vColsObj;\n  returnObj.mapObj = mapObj;\n  return returnObj;\n};\n\nexport default processMapXMLData;\n","import useStore from \"../globalState/useStore\";\n\nconst processLanguageXMLData = (dataObject) => {\n  try {\n    const data = dataObject.language.item;\n\n    const langObj = {};\n    for (let i = 0; i < data.length; i++) {\n      langObj[data[i]._attributes.id] = data[i]._text;\n      useStore.setState({ [data[i]._attributes.id]: data[i]._text });\n    }\n\n    return langObj;\n  } catch (error) {\n    console.log(\"there was a language import error\");\n  }\n};\n\nexport default processLanguageXMLData;\n","import shuffle from \"lodash/shuffle\";\n\n// prep column setup array\nconst processStatementsXMLData = (dataObject, shuffleCards, vColsObj) => {\n  const data = dataObject.statements.statement;\n  let statementsArray = [];\n\n  for (let i = 0; i < data.length; i++) {\n    let tempObj = {};\n    tempObj.id = `s${data[i]._attributes.id}`;\n    tempObj.statementNum = data[i]._attributes.id;\n    tempObj.divColor = \"isUncertainStatement\";\n    tempObj.cardColor = \"yellowSortCard\";\n    tempObj.pinkChecked = false;\n    tempObj.yellowChecked = true;\n    tempObj.greenChecked = false;\n    tempObj.sortValue = 222;\n    tempObj.backgroundColor = \"#e0e0e0\";\n    tempObj.statement = data[i]._text.trim();\n    statementsArray.push(tempObj);\n  }\n\n  if (shuffleCards === true) {\n    const shuffledCards = shuffle(statementsArray);\n    statementsArray = [...shuffledCards];\n  }\n\n  let totalStatements = statementsArray.length;\n\n  const columnStatements = {};\n\n  columnStatements.vCols = vColsObj;\n  columnStatements.statementList = statementsArray;\n\n  localStorage.setItem(\"hasBeenLoaded\", true);\n  const returnObj = {};\n  returnObj.columnStatements = columnStatements;\n  returnObj.totalStatements = totalStatements;\n  return returnObj;\n};\n\nexport default processStatementsXMLData;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LoadingScreen = () => {\n  return (\n    <Container>\n      <TextDiv>Loading</TextDiv>\n      <div>\n        <div id=\"loading\" />\n      </div>\n    </Container>\n  );\n};\n\nexport default LoadingScreen;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TextDiv = styled.div`\n  font-size: 88px;\n  font-style: italic;\n  font-weight: bold;\n  align-self: center;\n  margin-right: 70px;\n  margin-top: 40px;\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport convertObjectToResults from \"../sort/convertObjectToResults\";\n\nconst getConfigObj = (state) => state.configObj;\nconst getPresortFinished = (state) => state.presortFinished;\nconst getSetTrigPrePrevNavModal = (state) =>\n  state.setTriggerPresortPreventNavModal;\nconst getCurrentPage = (state) => state.currentPage;\nconst getRequiredAnswersObj = (state) => state.requiredAnswersObj;\nconst getSetCheckReqQuesCompl = (state) =>\n  state.setCheckRequiredQuestionsComplete;\nconst getSetTrigSurvPrevNavModal = (state) =>\n  state.setTriggerSurveyPreventNavModal;\nconst getIsSortingFinished = (state) => state.isSortingFinished;\nconst getHasOverloadedColumn = (state) => state.hasOverloadedColumn;\nconst getSetTrigSortPrevNavModal = (state) =>\n  state.setTriggerSortPreventNavModal;\nconst getSetTrigSortOverColMod = (state) =>\n  state.setTriggerSortOverloadedColumnModal;\nconst getStatementsObj = (state) => state.statementsObj;\nconst getColumnStatements = (state) => state.columnStatements;\nconst getSetResults = (state) => state.setResults;\nconst getPostsortCommentCheckObj = (state) => state.postsortCommentCheckObj;\nconst getSetShowPostsortCommentHighlighting = (state) =>\n  state.setShowPostsortCommentHighlighting;\nconst getSetTriggerPostsortPreventNavModal = (state) =>\n  state.setTriggerPostsortPreventNavModal;\n\nconst LinkButton = (props) => {\n  let goToNextPage;\n\n  // STATE\n  const configObj = useSettingsStore(getConfigObj);\n  const presortFinished = useStore(getPresortFinished);\n  const setTriggerPresortPreventNavModal = useStore(getSetTrigPrePrevNavModal);\n  const currentPage = useStore(getCurrentPage);\n  const requiredAnswersObj = useStore(getRequiredAnswersObj);\n  const setCheckRequiredQuestionsComplete = useStore(getSetCheckReqQuesCompl);\n  const setTriggerSurveyPreventNavModal = useStore(getSetTrigSurvPrevNavModal);\n  const isSortingFinished = useStore(getIsSortingFinished);\n  const hasOverloadedColumn = useStore(getHasOverloadedColumn);\n  const setTriggerSortPreventNavModal = useStore(getSetTrigSortPrevNavModal);\n  const setTriggerSortOverloadedColModal = useStore(getSetTrigSortOverColMod);\n  const statementsObj = useSettingsStore(getStatementsObj);\n  const columnStatements = useSettingsStore(getColumnStatements);\n  const setResults = useStore(getSetResults);\n  const postsortCommentCheckObj = useStore(getPostsortCommentCheckObj);\n  const setShowPostsortCommentHighlighting = useStore(\n    getSetShowPostsortCommentHighlighting\n  );\n  const setTriggerPostsortPreventNavModal = useStore(\n    getSetTriggerPostsortPreventNavModal\n  );\n\n  const allowUnforcedSorts = configObj.allowUnforcedSorts;\n  const postsortCommentsRequired = configObj.postsortCommentsRequired;\n\n  const {\n    history,\n    location,\n    match,\n    staticContext,\n    to,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n    ...rest\n  } = props;\n\n  const checkForNextPageConditions = (\n    allowUnforcedSorts,\n    isPresortFinished\n  ) => {\n    // *** ReCalc Results ***\n    let sortResults1 = convertObjectToResults(columnStatements);\n\n    if (currentPage === \"presort\") {\n      if (isPresortFinished === false) {\n        setTriggerPresortPreventNavModal(true);\n        return false;\n      } else {\n        return true;\n      }\n    }\n    if (currentPage === \"sort\") {\n      if (isSortingFinished === false) {\n        // check to see if finished, but had sorting registration error\n        if (statementsObj.columnStatements.statementList.length === 0) {\n          if (allowUnforcedSorts === true) {\n            // unforced ok -> allow nav\n            setResults(sortResults1);\n            setTriggerSortPreventNavModal(false);\n            return true;\n          } else {\n            // unforced not ok -> allow nav if no overloaded columns\n            if (hasOverloadedColumn === true) {\n              setTriggerSortPreventNavModal(false);\n              setTriggerSortOverloadedColModal(true);\n              return false;\n            } else {\n              setResults(sortResults1);\n              setTriggerSortPreventNavModal(false);\n              return true;\n            }\n          }\n        } else {\n          // not finished sorting\n          setTriggerSortPreventNavModal(true);\n          return false;\n        }\n      } else {\n        // has finished sorting\n        if (allowUnforcedSorts === true) {\n          // unforced ok -> allow nav\n          setTriggerSortPreventNavModal(false);\n          return true;\n        } else {\n          // unforced not ok -> allow nav if no overloaded columns\n          if (hasOverloadedColumn === true) {\n            setTriggerSortPreventNavModal(false);\n            setTriggerSortOverloadedColModal(true);\n            return false;\n          } else {\n            setTriggerSortPreventNavModal(false);\n            return true;\n          }\n        }\n      }\n    }\n\n    if (currentPage === \"postsort\") {\n      const checkArray2 = [];\n      const keyArray = Object.keys(postsortCommentCheckObj);\n      keyArray.forEach((key) => {\n        if (\n          postsortCommentCheckObj[key] === false ||\n          postsortCommentCheckObj[key] === \"false\"\n        ) {\n          checkArray2.push(\"false\");\n        }\n      });\n      if (\n        postsortCommentsRequired === true ||\n        postsortCommentsRequired === \"true\"\n      ) {\n        if (checkArray2.length > 0 || checkArray2.includes(\"false\")) {\n          // answers required in configObj\n          setShowPostsortCommentHighlighting(true);\n          setTriggerPostsortPreventNavModal(true);\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n\n    if (currentPage === \"survey\") {\n      const checkArray = [];\n      const keys = Object.keys(requiredAnswersObj);\n      for (let i = 0; i < keys.length; i++) {\n        if (requiredAnswersObj[keys[i]] === \"no response\") {\n          checkArray.push(\"false\");\n        }\n      }\n\n      if (checkArray.length > 0) {\n        // to turn on pink color for unanswered\n        setCheckRequiredQuestionsComplete(true);\n        setTriggerSurveyPreventNavModal(true);\n        return false;\n      } else {\n        return true;\n      }\n    }\n\n    // for pages without checks\n    return true;\n  };\n\n  return (\n    <NextButton\n      {...rest} // `children` is just another prop!\n      onClick={(event) => {\n        onClick && onClick(event);\n        goToNextPage = checkForNextPageConditions(\n          allowUnforcedSorts,\n          presortFinished\n        );\n        if (goToNextPage) {\n          history.push(to);\n        }\n      }}\n      tabindex=\"0\"\n    />\n  );\n};\nexport default withRouter(LinkButton);\n\nconst NextButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 0.8em;\n  font-weight: bold;\n  padding: 0.5em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  user-select: none;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getCardFontSize = (state) => state.cardFontSize;\nconst getSetCardFontSize = (state) => state.setCardFontSize;\nconst getSetBypassSort = (state) => state.setBypassSort;\nconst getSetBypassPresort = (state) => state.setBypassPresort;\n\nconst FooterFontSizer = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const cardFontSize = useStore(getCardFontSize);\n  const setCardFontSize = useStore(getSetCardFontSize);\n  const setBypassSort = useStore(getSetBypassSort);\n  const setBypassPresort = useStore(getSetBypassPresort);\n\n  const fontSizeText = ReactHtmlParser(decodeHTML(langObj.fontSizeText));\n\n  const increaseFontSize = () => {\n    setBypassSort(true);\n    setBypassPresort(true);\n    const currentSize = cardFontSize;\n    const newSize = currentSize + 1;\n    setCardFontSize(newSize);\n  };\n  const decreaseFontSize = () => {\n    setBypassSort(true);\n    setBypassPresort(true);\n    const currentSize = cardFontSize;\n    const newSize = currentSize - 1;\n    setCardFontSize(newSize);\n  };\n\n  return (\n    <Container>\n      <SpanDiv>{fontSizeText}</SpanDiv>\n      <SizeButton padBottom={\"0.4em\"} onClick={decreaseFontSize}>\n        -\n      </SizeButton>\n      <SizeButton padBottom={\"0.25em\"} onClick={increaseFontSize}>\n        +\n      </SizeButton>\n    </Container>\n  );\n};\n\nexport default FooterFontSizer;\n\nconst SizeButton = styled.button`\n  background: #337ab7;\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.4em;\n  font-weight: bold;\n  margin: 0 3px 0 3px;\n  padding: 0.25em 0.5em;\n  padding-bottom: ${(props) => props.padBottom};\n  height: 30px;\n  width: 35px;\n\n  border-radius: 3px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst SpanDiv = styled.div`\n  font-size: 16px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getCardHeight = (state) => state.cardHeight;\nconst getSetCardHeight = (state) => state.setCardHeight;\n\nconst CardHeightSizer = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const cardHeight = useStore(getCardHeight);\n  const setCardHeight = useStore(getSetCardHeight);\n\n  const cardHeightText = ReactHtmlParser(decodeHTML(langObj.cardHeightText));\n\n  const increaseHeight = () => {\n    const currentSize = +cardHeight;\n    const newSize = currentSize + 2;\n    setCardHeight(newSize);\n  };\n  const decreaseHeight = () => {\n    const currentSize = +cardHeight;\n    const newSize = currentSize - 2;\n    setCardHeight(newSize);\n  };\n\n  return (\n    <Container>\n      <SpanDiv>{cardHeightText}</SpanDiv>\n      <SizeButton padBottom={\"0.4em\"} onClick={decreaseHeight}>\n        -\n      </SizeButton>\n      <SizeButton padBottom={\"0.25em\"} onClick={increaseHeight}>\n        +\n      </SizeButton>\n    </Container>\n  );\n};\n\nexport default CardHeightSizer;\n\nconst SizeButton = styled.button`\n  background: #337ab7;\n  border-color: #2e6da4;\n  color: white;\n  font-size: 1.4em;\n  font-weight: bold;\n  margin: 0 3px 0 3px;\n  padding: 0.25em 0.5em;\n  padding-bottom: ${(props) => props.padBottom};\n  height: 30px;\n  width: 35px;\n  border-radius: 3px;\n  text-decoration: none;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin-left: 15px;\n`;\n\nconst SpanDiv = styled.div`\n  font-size: 16px;\n`;\n","const calcProgressScore = (\n  currentPage,\n  additionalProgress1,\n  additionalProgressSort,\n  showPostsort,\n  showSurvey,\n  additionalProgressState,\n  additionalProgressStateSort\n) => {\n  let adjustmentValue1 = 20;\n  let adjustmentValue2 = 50;\n  let adjustmentValue3 = 80;\n  if (showPostsort === false && showSurvey === true) {\n    adjustmentValue1 = 30;\n    adjustmentValue2 = 60;\n  }\n  if (showPostsort === true && showSurvey === false) {\n    adjustmentValue1 = 30;\n    adjustmentValue2 = 60;\n    adjustmentValue3 = 90;\n  }\n  if (showPostsort === false && showSurvey === false) {\n    adjustmentValue1 = 30;\n    adjustmentValue2 = 60;\n  }\n\n  let totalProgressScore;\n  let additionalProgress = 0;\n  if (additionalProgress1 !== +additionalProgressState) {\n    additionalProgress = +additionalProgressState;\n  }\n\n  if (additionalProgressSort !== +additionalProgressStateSort) {\n    additionalProgressSort = +additionalProgressStateSort;\n  }\n\n  if (currentPage === \"landing\") {\n    totalProgressScore = 10;\n    return totalProgressScore;\n  }\n  if (currentPage === \"presort\") {\n    totalProgressScore = +additionalProgress + adjustmentValue1;\n    return totalProgressScore;\n  }\n  if (currentPage === \"sort\") {\n    totalProgressScore = +additionalProgressSort + adjustmentValue2;\n    return totalProgressScore;\n  }\n  if (currentPage === \"postsort\") {\n    totalProgressScore = adjustmentValue3;\n    return totalProgressScore;\n  }\n  if (currentPage === \"survey\") {\n    totalProgressScore = 90;\n    return totalProgressScore;\n  }\n  if (currentPage === \"submit\") {\n    totalProgressScore = 100;\n    return totalProgressScore;\n  }\n};\n\nexport default calcProgressScore;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\n\nconst getLangObj = (state) => state.langObj;\nconst getCurrentPage = (state) => state.currentPage;\nconst getSetTriggerLandingModal = (state) => state.setTriggerLandingModal;\nconst getSetTriggerPresortModal = (state) => state.setTriggerPresortModal;\nconst getSetTriggerSortModal = (state) => state.setTriggerSortModal;\nconst getSetTriggerPostsortModal = (state) => state.setTriggerPostsortModal;\nconst getSetTriggerSurveyModal = (state) => state.setTriggerSurveyModal;\nconst getSetTriggerSubmitModal = (state) => state.setTriggerSubmitModal;\n\nconst HelpButton = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const currentPage = useStore(getCurrentPage);\n  const setTriggerLandingModal = useStore(getSetTriggerLandingModal);\n  const setTriggerPresortModal = useStore(getSetTriggerPresortModal);\n  const setTriggerSortModal = useStore(getSetTriggerSortModal);\n  const setTriggerPostsortModal = useStore(getSetTriggerPostsortModal);\n  const setTriggerSurveyModal = useStore(getSetTriggerSurveyModal);\n  const setTriggerSubmitModal = useStore(getSetTriggerSubmitModal);\n\n  const buttonText = ReactHtmlParser(decodeHTML(langObj.btnHelp)) || \"\";\n\n  const handleOnClick = () => {\n    if (currentPage === \"landing\") {\n      setTriggerLandingModal(true);\n    }\n    if (currentPage === \"presort\") {\n      setTriggerPresortModal(true);\n    }\n    if (currentPage === \"sort\") {\n      setTriggerSortModal(true);\n    }\n    if (currentPage === \"postsort\") {\n      setTriggerPostsortModal(true);\n    }\n    if (currentPage === \"survey\") {\n      setTriggerSurveyModal(true);\n    }\n    if (currentPage === \"submit\") {\n      setTriggerSubmitModal(true);\n    }\n  };\n\n  return (\n    <StyledHelpButton tabindex=\"0\" onClick={handleOnClick}>\n      {buttonText}\n    </StyledHelpButton>\n  );\n};\nexport default HelpButton;\n\nconst StyledHelpButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 0.8em;\n  font-weight: bold;\n  padding: 0.5em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  justify-self: right;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n\n/*\n\n  &:hover {\n    opacity: 1;\n    box-shadow: inset 0 0 0 4px #666, 0 0 1px transparent;\n  }\n  */\n","const getNextPage = (currentPage, showPostsort, showSurvey) => {\n  if (showPostsort === true && showSurvey === true) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/postsort`;\n    }\n    if (currentPage === \"postsort\") {\n      return `/survey`;\n    }\n    if (currentPage === \"survey\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n\n  if (showPostsort === false && showSurvey === true) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/survey`;\n    }\n    if (currentPage === \"survey\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n\n  if (showPostsort === true && showSurvey === false) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/postsort`;\n    }\n    if (currentPage === \"postsort\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n\n  if (showPostsort === false && showSurvey === false) {\n    if (currentPage === \"landing\") {\n      return `/presort`;\n    }\n    if (currentPage === \"presort\") {\n      return `/sort`;\n    }\n    if (currentPage === \"sort\") {\n      return `/submit`;\n    }\n    if (currentPage === \"submit\") {\n      return `/`;\n    }\n    return `/nopagefound`;\n  }\n};\n\nexport default getNextPage;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\n\nconst BackButton = (props) => {\n  const {\n    history,\n    location,\n    match,\n    staticContext,\n    to,\n    onClick,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n    ...rest\n  } = props;\n\n  return (\n    <NextButton\n      {...rest} // `children` is just another prop!\n      onClick={(event) => {\n        onClick && onClick(event);\n        history.push(to);\n      }}\n      tabindex=\"0\"\n    />\n  );\n};\nexport default withRouter(BackButton);\n\nconst NextButton = styled.button`\n  border-color: #2e6da4;\n  color: white;\n  font-size: 0.8em;\n  font-weight: bold;\n  padding: 0.5em;\n  border-radius: 3px;\n  text-decoration: none;\n  width: auto;\n  justify-self: right;\n  margin-right: 35px;\n  display: flex;\n  align-items: center;\n  user-select: none;\n  justify-content: center;\n  background-color: ${({ theme, active }) =>\n    active ? theme.secondary : theme.primary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.secondary};\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.focus};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NextButton from \"./NextButton\";\nimport FooterFontSizer from \"./FooterFontSizer\";\nimport CardHeightSizer from \"./CardHeightSizer\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport decodeHTML from \"../../utilities/decodeHTML\";\nimport calcProgressScore from \"./calcProgressScore\";\nimport HelpButton from \"./HelpButton\";\nimport getNextPage from \"./getNextPage\";\nimport useSettingsStore from \"../../globalState/useSettingsStore\";\nimport useStore from \"../../globalState/useStore\";\nimport PostsortBackButton from \"./PostsortBackButton\";\n\nconst getLangObj = (state) => state.langObj;\nconst getConfigObj = (state) => state.configObj;\nconst getDisplayNextButton = (state) => state.displayNextButton;\nconst getCurrentPage = (state) => state.currentPage;\nconst getAdditionalProgress = (state) => state.progressScoreAdditional;\nconst getAdditionalProgressSort = (state) => state.progressScoreAdditionalSort;\nconst getLocalUsercode = (state) => state.localUsercode;\n\nconst StyledFooter = () => {\n  // STATE\n  const langObj = useSettingsStore(getLangObj);\n  const configObj = useSettingsStore(getConfigObj);\n  let displayNextButton = useStore(getDisplayNextButton);\n  const currentPage = useStore(getCurrentPage);\n  const additionalProgress = useStore(getAdditionalProgress);\n  const additionalProgressSort = useStore(getAdditionalProgressSort);\n  const localUsercode = useStore(getLocalUsercode);\n\n  let showAdjustmentContainer = true;\n  let showCardHeightSizer = true;\n  let displayHelpButton = true;\n\n  let showBackButton;\n  let backButtonText = langObj.postsortBackButtonText;\n\n  if (currentPage === \"postsort\" && configObj.showBackButton) {\n    showBackButton = true;\n  } else {\n    showBackButton = false;\n  }\n\n  let logoHtml = ReactHtmlParser(\n    decodeHTML(\n      `{{{center}}}{{{img src=\"./images/logo.png\" height=\"40\" width=\"250\" /}}}{{{/center}}}`\n    )\n  );\n\n  const nextButtonText = ReactHtmlParser(decodeHTML(langObj.btnNext));\n\n  if (currentPage === \"sort\" && configObj.setupTarget === \"local\") {\n    const usercode = localUsercode;\n    const projectName = configObj.studyTitle;\n    const today = new Date();\n    const date =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate();\n    const time =\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    const dateTime = date + \" \" + time;\n\n    logoHtml = `${usercode} - ${projectName} - ${dateTime}`;\n  }\n\n  const showPostsort = configObj.showPostsort;\n  const showSurvey = configObj.showSurvey;\n\n  const totalProgressScore = calcProgressScore(\n    currentPage,\n    additionalProgress,\n    additionalProgressSort,\n    showPostsort,\n    showSurvey,\n    additionalProgress,\n    additionalProgressSort\n  );\n\n  if (currentPage === \"submit\") {\n    displayNextButton = false;\n  }\n\n  if (configObj.setupTarget === \"local\" && currentPage === \"landing\") {\n    displayNextButton = false;\n    displayHelpButton = false;\n  }\n  if (currentPage === \"submit\") {\n    displayHelpButton = false;\n  }\n\n  if (currentPage === \"presort\") {\n    showAdjustmentContainer = true;\n    showCardHeightSizer = false;\n  }\n  if (\n    currentPage === \"landing\" ||\n    currentPage === \"survey\" ||\n    currentPage === \"submit\"\n  ) {\n    showAdjustmentContainer = false;\n  }\n\n  let CenterContent = (\n    <React.Fragment>\n      {displayHelpButton && <HelpButton />}\n      {showAdjustmentContainer && (\n        <AdjustmentsContainer>\n          <FooterFontSizer />\n          {showCardHeightSizer && <CardHeightSizer />}\n        </AdjustmentsContainer>\n      )}\n      <ProgressBarDiv>\n        <ProgressBar\n          completed={totalProgressScore}\n          width={\"100px\"}\n          bgColor=\"#337ab7\"\n          labelColor=\"#f0f0f0\"\n          baseBgColor=\"lightgray\"\n        />\n      </ProgressBarDiv>\n    </React.Fragment>\n  );\n\n  const nextPage = getNextPage(currentPage, showPostsort, showSurvey);\n\n  return (\n    <StyledFooterDiv>\n      <LogoContainer>{logoHtml}</LogoContainer>\n      <CenterDiv>{CenterContent}</CenterDiv>\n      <ButtonDiv>\n        {showBackButton && (\n          <PostsortBackButton to={\"/sort\"}>{backButtonText}</PostsortBackButton>\n        )}\n        {displayNextButton && (\n          <NextButton to={nextPage}>{nextButtonText}</NextButton>\n        )}\n      </ButtonDiv>\n    </StyledFooterDiv>\n  );\n};\n\nexport default StyledFooter;\n\nconst StyledFooterDiv = styled.footer`\n  position: fixed;\n  bottom: 0px;\n  left: 0px;\n  border-top: 1px solid lightgray;\n\n  display: inline-grid;\n  grid-template-columns: 16% 1fr 16%;\n  align-items: center;\n`;\n\nconst AdjustmentsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-left: 15px;\n`;\n\nconst ProgressBarDiv = styled.div`\n  align-self: center;\n  justify-self: center;\n  margin-left: 25px;\n`;\n\nconst LogoContainer = styled.div`\n  padding-top: 5px;\n  padding-left: 5px;\n  display: flex;\n  justify-self: start;\n  align-self: center;\n  text-align: center;\n`;\n\nconst CenterDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst ButtonDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing/Landing\";\nimport PostsortPage from \"./pages/postsort/Postsort\";\nimport PresortPage from \"./pages/presort/Presort\";\nimport SortPage from \"./pages/sort/Sort\";\nimport SubmitPage from \"./pages/submit/Submit\";\nimport SurveyPage from \"./pages/survey/Survey\";\nimport NoPageFound from \"./utilities/NoPageFound\";\nimport axios from \"axios\";\nimport processConfigXMLData from \"./utilities/processConfigXMLData\";\nimport processMapXMLData from \"./utilities/processMapXMLData\";\nimport processLanguageXMLData from \"./utilities/processLanguageXMLData\";\nimport processStatementsXMLData from \"./utilities/processStatementsXMLData\";\nimport LoadingScreen from \"./pages/landing/LoadingScreen\";\n// import PromptUnload from \"./utilities/PromptUnload\";\nimport StyledFooter from \"./pages/footer/StyledFooter\";\nimport useSettingsStore from \"./globalState/useSettingsStore\";\nimport useStore from \"./globalState/useStore\";\nimport cloneDeep from \"lodash/cloneDeep\";\n// import iOS from \"./isIos\";\n\nconst convert = require(\"xml-js\");\n\nconst getSetConfigObj = (state) => state.setConfigObj;\nconst getSetLangObj = (state) => state.setLangObj;\nconst getSetMapObj = (state) => state.setMapObj;\nconst getSetStatementsObj = (state) => state.setStatementsObj;\nconst getSetColumnStatements = (state) => state.setColumnStatements;\nconst getSetResetColumnStatements = (state) => state.setResetColumnStatements;\nconst getSetSurveyQuesObjArray = (state) => state.setSurveyQuestionObjArray;\nconst getSetRequiredAnswersObj = (state) => state.setRequiredAnswersObj;\nconst getSetDataLoaded = (state) => state.setDataLoaded;\nconst getDisplayGoodbyeMessage = (state) => state.displayGoodbyeMessage;\nconst getDisableRefreshCheck = (state) => state.disableRefreshCheck;\n\nfunction App() {\n  // STATE\n  const [isLoading, setLoading] = useState(true);\n\n  const setConfigObj = useSettingsStore(getSetConfigObj);\n  const setLangObj = useSettingsStore(getSetLangObj);\n  const setMapObj = useSettingsStore(getSetMapObj);\n  const setStatementsObj = useSettingsStore(getSetStatementsObj);\n  const setColumnStatements = useSettingsStore(getSetColumnStatements);\n  const setResetColumnStatements = useSettingsStore(\n    getSetResetColumnStatements\n  );\n  const setSurveyQuestionObjArray = useSettingsStore(getSetSurveyQuesObjArray);\n  const setRequiredAnswersObj = useSettingsStore(getSetRequiredAnswersObj);\n  const setDataLoaded = useStore(getSetDataLoaded);\n  const displayGoodbyeMessage = useStore(getDisplayGoodbyeMessage);\n  const disableRefreshCheck = useStore(getDisableRefreshCheck);\n\n  useEffect(() => {\n    const unloadCallback = (event) => {\n      const e = event || window.event;\n      //console.log(e)\n      e.preventDefault();\n      if (e) {\n        e.returnValue = \"\";\n      }\n      return \"\";\n    };\n\n    if (displayGoodbyeMessage || disableRefreshCheck) {\n      window.removeEventListener(\"beforeunload\", unloadCallback);\n    } else {\n      window.addEventListener(\"beforeunload\", unloadCallback);\n      return () => {\n        //cleanup function\n        window.removeEventListener(\"beforeunload\", unloadCallback);\n      };\n    }\n  }, [displayGoodbyeMessage, disableRefreshCheck]);\n\n  useEffect(() => {\n    let shuffleCards;\n    let vColsObj;\n\n    (async () => {\n      await axios\n        .get(\"./settings/language.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\n          const languageData = convert.xml2js(response.data, options);\n          let langObj = processLanguageXMLData(languageData);\n          setLangObj(langObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      await axios\n        .get(\"./settings/config.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: false, ignoreComment: true, spaces: 2 };\n          const configData = convert.xml2js(response.data, options);\n          let info = processConfigXMLData(configData);\n          shuffleCards = info.shuffleCards;\n          setConfigObj(info.configObj);\n          setSurveyQuestionObjArray(info.surveyQuestionObjArray);\n          setRequiredAnswersObj(info.requiredAnswersObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      await axios\n        .get(\"./settings/map.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\n          const mapData = convert.xml2js(response.data, options);\n          let data = processMapXMLData(mapData);\n          vColsObj = data.vColsObj;\n          setMapObj(data.mapObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      await axios\n        .get(\"./settings/statements.xml\", {\n          \"Content-Type\": \"application/xml; charset=utf-8\",\n        })\n        .then(function (response) {\n          const options = { compact: true, ignoreComment: true, spaces: 4 };\n          const statementsData = convert.xml2js(response.data, options);\n          const statementsObj = processStatementsXMLData(\n            statementsData,\n            shuffleCards,\n            vColsObj\n          );\n          setColumnStatements(statementsObj.columnStatements);\n          const resetColumnStatements = cloneDeep(\n            statementsObj.columnStatements\n          );\n          setResetColumnStatements(resetColumnStatements);\n          setStatementsObj(statementsObj);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n\n      setDataLoaded(true);\n\n      setTimeout(() => {\n        // prevent spinner flicker\n        // setIsDataLoaded(true);\n        setLoading(false);\n      }, 700);\n    })();\n  }, [\n    setConfigObj,\n    setLangObj,\n    setStatementsObj,\n    setColumnStatements,\n    setRequiredAnswersObj,\n    setSurveyQuestionObjArray,\n    setMapObj,\n    setDataLoaded,\n    setResetColumnStatements,\n  ]);\n\n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/presort\" component={PresortPage} />\n          <Route exact path=\"/sort\" component={SortPage} />\n          <Route exact path=\"/postsort\" component={PostsortPage} />\n          <Route exact path=\"/survey\" component={SurveyPage} />\n          <Route exact path=\"/submit\" component={SubmitPage} />\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route component={NoPageFound} />\n        </Switch>\n        <Suspense>\n          <StyledFooter />\n        </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GlobalStyle from \"./styles/globalCSS\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport LoadingScreen from \"./pages/landing/LoadingScreen\";\n\nconst theme = {\n  primary: \"#337ab7\",\n  secondary: \"#285f8f\",\n  focus: \"#63a0d4\",\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Suspense fallback={<LoadingScreen />}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </React.Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}